digraph G {
<<<<<<< HEAD
	Program23 [label="Statements: Program23"]
	Program23 -> Program1;
	Program1 [label="Empty: Program1"]
	Program23 -> Statement2;
	Statement2 [label="Statements: Statement2"]
	Statement2 -> classWithoutInheritance22;
	classWithoutInheritance22 [label="ClassDeclaration: classWithoutInheritance22"]
	classWithoutInheritance22 -> IDENTIFIER0;
	IDENTIFIER0 [label="Identifier: MyClass"]
	classWithoutInheritance22 -> ClassBlock21;
	ClassBlock21 [label="ClassBlock: ClassBlock21"]
	ClassBlock21 -> Classbody5;
	Classbody5 [label="Body: Classbody5"]
	Classbody5 -> Classbody3;
	Classbody3 [label="Body: Classbody3"]
	Classbody3 -> assignment4;
	assignment4 [label="assignment"]
	assignment4 -> IDENTIFIER1;
	IDENTIFIER1 [label="Identifier: s"]
	assignment4 -> INTEGER2;
	INTEGER2 [shape=box,label="Integer: 100"]
	Classbody5 -> function;
	function [label="Declare Fun: function"]
	function -> Args7;
	Args7 [label="Arguments: Args7"]
	Args7 -> Arg6;
	Arg6 [label="Argument: Arg6"]
	Arg6 -> IDENTIFIER4;
	IDENTIFIER4 [label="Identifier: x"]
	Arg6 -> IDENTIFIER5;
	IDENTIFIER5 [label="Identifier: y"]
	function -> block20;
	block20 [label="Block: block20"]
	block20 -> Statement8;
	Statement8 [label="Statements: Statement8"]
	Statement8 -> x;
	x [label="Match: x"]
	x -> IDENTIFIER6;
	IDENTIFIER6 [label="Identifier: x"]
	x -> MatchBlock15;
	MatchBlock15 [label="MatchBlock: MatchBlock15"]
	MatchBlock15 -> Case14;
	Case14 [label="Case: Case14"]
	Case14 -> INTEGER7;
	INTEGER7 [shape=box,label="Integer: 1"]
	Case14 -> block13;
	block13 [label="Block: block13"]
	block13 -> Statement9;
	Statement9 [label="Statements: Statement9"]
	Statement9 -> Return10;
	Return10 [label="Return: Return10"]
	Return10 -> BinaryExpression_IDENTIFIER8PLUSINTEGER9;
	BinaryExpression_IDENTIFIER8PLUSINTEGER9 [label="+"]
	BinaryExpression_IDENTIFIER8PLUSINTEGER9 -> IDENTIFIER8;
	IDENTIFIER8 [label="Identifier: x"]
	BinaryExpression_IDENTIFIER8PLUSINTEGER9 -> INTEGER9;
	INTEGER9 [shape=box,label="Integer: 1"]
	Statement9 -> INTEGER9;
	INTEGER9 [shape=box,label="Integer: 1"]
	Statement9 -> Return11;
	Return11 [label="Return: Return11"]
	Return11 -> IDENTIFIER10;
	IDENTIFIER10 [label="Identifier: y"]
	Statement9 -> IDENTIFIER10;
	IDENTIFIER10 [label="Identifier: y"]
	Statement9 -> Return12;
	Return12 [label="Return: Return12"]
	Return12 -> IDENTIFIER11;
	IDENTIFIER11 [label="Identifier: z"]
	Statement9 -> IDENTIFIER11;
	IDENTIFIER11 [label="Identifier: z"]
	MatchBlock15 -> Case19;
	Case19 [label="Case: Case19"]
	Case19 -> INTEGER12;
	INTEGER12 [shape=box,label="Integer: 2"]
	Case19 -> block18;
	block18 [label="Block: block18"]
	block18 -> Statement16;
	Statement16 [label="Statements: Statement16"]
	Statement16 -> Return17;
	Return17 [label="Return: Return17"]
	Return17 -> BinaryExpression_IDENTIFIER13PLUSINTEGER14;
	BinaryExpression_IDENTIFIER13PLUSINTEGER14 [label="+"]
	BinaryExpression_IDENTIFIER13PLUSINTEGER14 -> IDENTIFIER13;
	IDENTIFIER13 [label="Identifier: w"]
	BinaryExpression_IDENTIFIER13PLUSINTEGER14 -> INTEGER14;
	INTEGER14 [shape=box,label="Integer: 2"]
=======
	Program9 [label="Statements: Program9"]
	Program9 -> Program1;
	Program1 [label="Empty: Program1"]
	Program9 -> Statement2;
	Statement2 [label="Statements: Statement2"]
	Statement2 -> For8;
	For8 [shape=box,label="For: undefined()"]
	For8 -> IDENTIFIER0;
	IDENTIFIER0 [label="Identifier: x"]
	For8 -> identifire3;
	identifire3 [label="Identifier: y"]
	For8 -> block6;
	block6 [label="Block: block6"]
	block6 -> Statement4;
	Statement4 [label="Statements: Statement4"]
	Statement4 -> assignment6;
	assignment6 [label="assignment"]
	assignment6 -> identifire5;
	identifire5 [label="Identifier: y"]
	assignment6 -> INTEGER3;
	INTEGER3 [shape=box,label="Integer: 12"]
>>>>>>> bc6b282237893be9c9804cb3f37b2539f5959754
}
