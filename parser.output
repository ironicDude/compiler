Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALCHAR
   MULTILINESTRING
   KEYWORD_AWAIT
   KEYWORD_NONE
   KEYWORD_EXCEPT
   KEYWORD_RAISE
   KEYWORD_FINALLY
   KEYWORD_IS
   KEYWORD_LAMBDA
   KEYWORD_TRY
   KEYWORD_NONLOCAL
   KEYWORD_ASSERT
   KEYWORD_GLOBAL
   KEYWORD_ASYNC
   OPERATORS
   MODULO
   ASSIGNADD
   ASSIGNMINUS
   ASSIGNMULTIPLY
   ASSIGNDIVIDE
   ASSIGNMODULO
   ASSIGNFLOORDIVISION
   ASSIGNEXPONINTIATION
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   ASSIGNRIGHTSHIFT
   ASSIGNLEFTSHIFT
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   INCREMENT
   DECREMENT
   '+'
   '/'


State 0 conflicts: 1 shift/reduce
State 22 conflicts: 18 shift/reduce
State 26 conflicts: 2 shift/reduce
State 43 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 61 conflicts: 20 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 20 reduce/reduce
State 93 conflicts: 2 shift/reduce
State 95 conflicts: 5 shift/reduce
State 96 conflicts: 5 shift/reduce
State 113 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 140 conflicts: 5 shift/reduce
State 141 conflicts: 5 shift/reduce
State 142 conflicts: 5 shift/reduce
State 143 conflicts: 5 shift/reduce
State 144 conflicts: 5 shift/reduce
State 151 conflicts: 2 shift/reduce
State 152 conflicts: 2 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | prog statements

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement
    9          | NEWLINE
   10          | COMMENT
   11          | MULTILINECOMMENT

   12 simple_statement: assignment
   13                 | return_statement
   14                 | yield_statement
   15                 | del_statment
   16                 | import_statments
   17                 | function_call
   18                 | with_statment
   19                 | KEYWORD_PASS
   20                 | KEYWORD_BREAK
   21                 | KEYWORD_CONTINUE

   22 compound_statement: function
   23                   | conditional_statement
   24                   | class
   25                   | for_statement
   26                   | while_statement

   27 import_statments: import_statment NEWLINE
   28                 | import_statments import_statment

   29 import_statment: KEYWORD_IMPORT member_expression
   30                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER
   31                | KEYWORD_FROM member_expression KEYWORD_IMPORT '*'
   32                | KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER
   33                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

   34 assignment: member_expression ASSIGN expression

   35 expression: expression ADD expression
   36           | expression MINUS expression
   37           | expression MULTIPLY expression
   38           | expression DIVIDE expression
   39           | expression POWER expression
   40           | '|' expression
   41           | '(' expression ')'
   42           | '-' expression
   43           | number
   44           | IDENTIFIER
   45           | function_call

   46 number: INTEGER
   47       | FLOAT

   48 del_statment: KEYWORD_DEL IDENTIFIER
   49             | KEYWORD_DEL IDENTIFIER LIST

   50 return_statement: KEYWORD_RETURN member_expression
   51                 | KEYWORD_RETURN expression

   52 yield_statement: KEYWORD_YIELD member_expression
   53                | KEYWORD_YIELD expression

   54 with_statment: KEYWORD_WITH with_stmt COLON block

   55 with_stmt: function_call KEYWORD_AS IDENTIFIER
   56          | with_stmt COMMA function_call KEYWORD_AS IDENTIFIER

   57 class: class_with_inheritance
   58      | class_without_inheritance

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

   60 class_block: /* empty */
   61            | class_block assignment
   62            | class_block function
   63            | class_block NEWLINE

   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

   65 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES

   69 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

   70 block: NEWLINE INDENT statements DEDENT

   71 args: /* empty */
   72     | args IDENTIFIER COMMA
   73     | args IDENTIFIER
   74     | IDENTIFIER COMMA
   75     | IDENTIFIER

   76 member_expression: IDENTIFIER
   77                  | member_expression IDENTIFIER

   78 logical_expression: expression
   79                   | expression GREATEROREQUAL expression
   80                   | expression GREATERTHAN expression
   81                   | expression LESSOREQUAL expression
   82                   | expression LESSTHAN expression
   83                   | expression EQUAL expression
   84                   | expression NOTEQUAL expression
   85                   | logical_expression KEYWORD_AND logical_expression
   86                   | logical_expression KEYWORD_OR logical_expression
   87                   | KEYWORD_NOT logical_expression
   88                   | KEYWORD_TRUE
   89                   | KEYWORD_FALSE

   90 conditional_statement: if_statement elif_else

   91 elif_else: /* empty */
   92          | elif_stmts else_statement
   93          | elif_stmts
   94          | else_statement

   95 elif_stmts: elif_statement
   96           | elif_stmts elif_statement

   97 if_statement: KEYWORD_IF logical_expression COLON block
   98             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

   99 else_statement: KEYWORD_ELSE COLON block

  100 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
  101               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  102 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
  103              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
  104              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  105              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
  106              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  107              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

  108 while_statement: KEYWORD_WHILE logical_expression COLON block
  109                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 41
')' (41) 41
'*' (42) 31
'+' (43)
'-' (45) 42
'.' (46) 107
'/' (47)
'|' (124) 40
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 30 32 33 44 48 49 55 56 59 64 65 66 67 68 69 72 73
    74 75 76 77 102 103 105 106 107
LIST (262) 49 103
LITERALSTRING (263) 67
LITERALCHAR (264)
KEYWORD_FALSE (265) 89
KEYWORD_TRUE (266) 88
MULTILINESTRING (267)
KEYWORD_AWAIT (268)
KEYWORD_IF (269) 97 98
KEYWORD_ELSE (270) 99
KEYWORD_ELSE_IF (271) 100 101
KEYWORD_IMPORT (272) 29 30 31 32 33
KEYWORD_PASS (273) 19
KEYWORD_NONE (274)
KEYWORD_BREAK (275) 20
KEYWORD_EXCEPT (276)
KEYWORD_IN (277) 102 103 104 105 106 107
KEYWORD_RAISE (278)
KEYWORD_CLASS (279) 59 64
KEYWORD_FINALLY (280)
KEYWORD_IS (281)
KEYWORD_RETURN (282) 50 51
KEYWORD_AND (283) 85
KEYWORD_CONTINUE (284) 21
KEYWORD_FOR (285) 102 103 104 105 106 107
KEYWORD_LAMBDA (286)
KEYWORD_TRY (287)
KEYWORD_AS (288) 32 33 55 56
KEYWORD_DEF (289) 69
KEYWORD_FROM (290) 30 31 33
KEYWORD_NONLOCAL (291)
KEYWORD_WHILE (292) 108 109
KEYWORD_ASSERT (293)
KEYWORD_DEL (294) 48 49
KEYWORD_GLOBAL (295)
KEYWORD_NOT (296) 87
KEYWORD_WITH (297) 54
KEYWORD_ASYNC (298)
KEYWORD_OR (299) 86
KEYWORD_YIELD (300) 52 53
OPERATORS (301)
COMMENT (302) 10
ADD (303) 35
MINUS (304) 36
MULTIPLY (305) 37
MULTILINECOMMENT (306) 11
DIVIDE (307) 38
POWER (308) 39
MODULO (309)
ASSIGN (310) 34
ASSIGNADD (311)
ASSIGNMINUS (312)
ASSIGNMULTIPLY (313)
ASSIGNDIVIDE (314)
ASSIGNMODULO (315)
ASSIGNFLOORDIVISION (316)
ASSIGNEXPONINTIATION (317)
ASSIGNBITWISEAND (318)
ASSIGNBITWISEOR (319)
ASSIGNBITWISEXOR (320)
ASSIGNRIGHTSHIFT (321)
ASSIGNLEFTSHIFT (322)
EQUAL (323) 83
NOT (324)
NOTEQUAL (325) 84
GREATERTHAN (326) 80
GREATEROREQUAL (327) 79
LESSTHAN (328) 82
LESSOREQUAL (329) 81
LEFT_PARENTHES (330) 59 65 66 67 68 69 98 101 104 109
RIGHT_PARENTHES (331) 59 65 66 67 68 69 98 101 104 109
LEFT_BRACES (332)
RIGHT_BRACES (333)
LEFT_BRACKETS (334)
RIGHT_BRACKETS (335)
COLON (336) 54 59 64 69 97 98 99 100 101 102 103 104 105 106 107 108
    109
COMMA (337) 56 72 74
SEMICOLON (338)
INCREMENT (339)
DECREMENT (340)
INTEGER (341) 46
FLOAT (342) 47
DEDENT (343) 59 64 70
INDENT (344) 59 64 70
NEWLINE (345) 2 6 9 27 59 63 64 70
UMINUS (346)


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
prog (101)
    on left: 1 2 3, on right: 0 3
statements (102)
    on left: 4 5 6, on right: 3 4 6 70
statement (103)
    on left: 7 8 9 10 11, on right: 4 5
simple_statement (104)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 8
compound_statement (105)
    on left: 22 23 24 25 26, on right: 7
import_statments (106)
    on left: 27 28, on right: 16 28
import_statment (107)
    on left: 29 30 31 32 33, on right: 27 28
assignment (108)
    on left: 34, on right: 12 61
expression (109)
    on left: 35 36 37 38 39 40 41 42 43 44 45, on right: 34 35 36 37
    38 39 40 41 42 51 53 78 79 80 81 82 83 84
number (110)
    on left: 46 47, on right: 43 66
del_statment (111)
    on left: 48 49, on right: 15
return_statement (112)
    on left: 50 51, on right: 13
yield_statement (113)
    on left: 52 53, on right: 14
with_statment (114)
    on left: 54, on right: 18
with_stmt (115)
    on left: 55 56, on right: 54 56
class (116)
    on left: 57 58, on right: 24
class_with_inheritance (117)
    on left: 59, on right: 57
class_block (118)
    on left: 60 61 62 63, on right: 59 61 62 63 64
class_without_inheritance (119)
    on left: 64, on right: 58
function_call (120)
    on left: 65 66 67 68, on right: 17 45 55 56 68 102 104 106 107
function (121)
    on left: 69, on right: 22 62
block (122)
    on left: 70, on right: 54 69 97 98 99 100 101 102 103 104 105 106
    107 108 109
args (123)
    on left: 71 72 73 74 75, on right: 59 65 69 72 73 104
member_expression (124)
    on left: 76 77, on right: 29 30 31 32 33 34 50 52 77 105 106 107
logical_expression (125)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89, on right: 85 86 87
    97 98 100 101 108 109
conditional_statement (126)
    on left: 90, on right: 23
elif_else (127)
    on left: 91 92 93 94, on right: 90
elif_stmts (128)
    on left: 95 96, on right: 92 93 96
if_statement (129)
    on left: 97 98, on right: 90
else_statement (130)
    on left: 99, on right: 92 94
elif_statement (131)
    on left: 100 101, on right: 95 96
for_statement (132)
    on left: 102 103 104 105 106 107, on right: 25
while_statement (133)
    on left: 108 109, on right: 26


state 0

    0 $accept: . prog $end

    NEWLINE  shift, and go to state 1

    NEWLINE   [reduce using rule 1 (prog)]
    $default  reduce using rule 1 (prog)

    prog  go to state 2


state 1

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 2

    0 $accept: prog . $end
    3 prog: prog . statements

    $end              shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CLASS     shift, and go to state 9
    KEYWORD_RETURN    shift, and go to state 10
    KEYWORD_CONTINUE  shift, and go to state 11
    KEYWORD_FOR       shift, and go to state 12
    KEYWORD_DEF       shift, and go to state 13
    KEYWORD_FROM      shift, and go to state 14
    KEYWORD_WHILE     shift, and go to state 15
    KEYWORD_DEL       shift, and go to state 16
    KEYWORD_WITH      shift, and go to state 17
    KEYWORD_YIELD     shift, and go to state 18
    COMMENT           shift, and go to state 19
    MULTILINECOMMENT  shift, and go to state 20
    NEWLINE           shift, and go to state 21

    statements                 go to state 22
    statement                  go to state 23
    simple_statement           go to state 24
    compound_statement         go to state 25
    import_statments           go to state 26
    import_statment            go to state 27
    assignment                 go to state 28
    del_statment               go to state 29
    return_statement           go to state 30
    yield_statement            go to state 31
    with_statment              go to state 32
    class                      go to state 33
    class_with_inheritance     go to state 34
    class_without_inheritance  go to state 35
    function_call              go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 3

    0 $accept: prog $end .

    $default  accept


state 4

   65 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
   76 member_expression: IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 43

    $default  reduce using rule 76 (member_expression)


state 5

   97 if_statement: KEYWORD_IF . logical_expression COLON block
   98             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 44
    KEYWORD_FALSE   shift, and go to state 45
    KEYWORD_TRUE    shift, and go to state 46
    KEYWORD_NOT     shift, and go to state 47
    LEFT_PARENTHES  shift, and go to state 48
    INTEGER         shift, and go to state 49
    FLOAT           shift, and go to state 50
    '-'             shift, and go to state 51
    '|'             shift, and go to state 52
    '('             shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 57


state 6

   29 import_statment: KEYWORD_IMPORT . member_expression
   32                | KEYWORD_IMPORT . member_expression KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 58

    member_expression  go to state 59


state 7

   19 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 19 (simple_statement)


state 8

   20 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 20 (simple_statement)


state 9

   59 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   64 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 60


state 10

   50 return_statement: KEYWORD_RETURN . member_expression
   51                 | KEYWORD_RETURN . expression

    IDENTIFIER  shift, and go to state 61
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression         go to state 62
    number             go to state 55
    function_call      go to state 56
    member_expression  go to state 63


state 11

   21 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 21 (simple_statement)


state 12

  102 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
  103              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
  104              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  105              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
  106              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  107              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER      shift, and go to state 64
    LEFT_PARENTHES  shift, and go to state 65


state 13

   69 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 66


state 14

   30 import_statment: KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER
   31                | KEYWORD_FROM . member_expression KEYWORD_IMPORT '*'
   33                | KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 58

    member_expression  go to state 67


state 15

  108 while_statement: KEYWORD_WHILE . logical_expression COLON block
  109                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 44
    KEYWORD_FALSE   shift, and go to state 45
    KEYWORD_TRUE    shift, and go to state 46
    KEYWORD_NOT     shift, and go to state 47
    LEFT_PARENTHES  shift, and go to state 68
    INTEGER         shift, and go to state 49
    FLOAT           shift, and go to state 50
    '-'             shift, and go to state 51
    '|'             shift, and go to state 52
    '('             shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 69


state 16

   48 del_statment: KEYWORD_DEL . IDENTIFIER
   49             | KEYWORD_DEL . IDENTIFIER LIST

    IDENTIFIER  shift, and go to state 70


state 17

   54 with_statment: KEYWORD_WITH . with_stmt COLON block

    IDENTIFIER  shift, and go to state 71

    with_stmt      go to state 72
    function_call  go to state 73


state 18

   52 yield_statement: KEYWORD_YIELD . member_expression
   53                | KEYWORD_YIELD . expression

    IDENTIFIER  shift, and go to state 61
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression         go to state 74
    number             go to state 55
    function_call      go to state 56
    member_expression  go to state 75


state 19

   10 statement: COMMENT .

    $default  reduce using rule 10 (statement)


state 20

   11 statement: MULTILINECOMMENT .

    $default  reduce using rule 11 (statement)


state 21

    9 statement: NEWLINE .

    $default  reduce using rule 9 (statement)


state 22

    3 prog: prog statements .
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CLASS     shift, and go to state 9
    KEYWORD_RETURN    shift, and go to state 10
    KEYWORD_CONTINUE  shift, and go to state 11
    KEYWORD_FOR       shift, and go to state 12
    KEYWORD_DEF       shift, and go to state 13
    KEYWORD_FROM      shift, and go to state 14
    KEYWORD_WHILE     shift, and go to state 15
    KEYWORD_DEL       shift, and go to state 16
    KEYWORD_WITH      shift, and go to state 17
    KEYWORD_YIELD     shift, and go to state 18
    COMMENT           shift, and go to state 19
    MULTILINECOMMENT  shift, and go to state 20
    NEWLINE           shift, and go to state 76

    IDENTIFIER        [reduce using rule 3 (prog)]
    KEYWORD_IF        [reduce using rule 3 (prog)]
    KEYWORD_IMPORT    [reduce using rule 3 (prog)]
    KEYWORD_PASS      [reduce using rule 3 (prog)]
    KEYWORD_BREAK     [reduce using rule 3 (prog)]
    KEYWORD_CLASS     [reduce using rule 3 (prog)]
    KEYWORD_RETURN    [reduce using rule 3 (prog)]
    KEYWORD_CONTINUE  [reduce using rule 3 (prog)]
    KEYWORD_FOR       [reduce using rule 3 (prog)]
    KEYWORD_DEF       [reduce using rule 3 (prog)]
    KEYWORD_FROM      [reduce using rule 3 (prog)]
    KEYWORD_WHILE     [reduce using rule 3 (prog)]
    KEYWORD_DEL       [reduce using rule 3 (prog)]
    KEYWORD_WITH      [reduce using rule 3 (prog)]
    KEYWORD_YIELD     [reduce using rule 3 (prog)]
    COMMENT           [reduce using rule 3 (prog)]
    MULTILINECOMMENT  [reduce using rule 3 (prog)]
    NEWLINE           [reduce using rule 3 (prog)]
    $default          reduce using rule 3 (prog)

    statement                  go to state 77
    simple_statement           go to state 24
    compound_statement         go to state 25
    import_statments           go to state 26
    import_statment            go to state 27
    assignment                 go to state 28
    del_statment               go to state 29
    return_statement           go to state 30
    yield_statement            go to state 31
    with_statment              go to state 32
    class                      go to state 33
    class_with_inheritance     go to state 34
    class_without_inheritance  go to state 35
    function_call              go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 23

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 24

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 25

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 26

   16 simple_statement: import_statments .
   28 import_statments: import_statments . import_statment

    KEYWORD_IMPORT  shift, and go to state 6
    KEYWORD_FROM    shift, and go to state 14

    KEYWORD_IMPORT  [reduce using rule 16 (simple_statement)]
    KEYWORD_FROM    [reduce using rule 16 (simple_statement)]
    $default        reduce using rule 16 (simple_statement)

    import_statment  go to state 78


state 27

   27 import_statments: import_statment . NEWLINE

    NEWLINE  shift, and go to state 79


state 28

   12 simple_statement: assignment .

    $default  reduce using rule 12 (simple_statement)


state 29

   15 simple_statement: del_statment .

    $default  reduce using rule 15 (simple_statement)


state 30

   13 simple_statement: return_statement .

    $default  reduce using rule 13 (simple_statement)


state 31

   14 simple_statement: yield_statement .

    $default  reduce using rule 14 (simple_statement)


state 32

   18 simple_statement: with_statment .

    $default  reduce using rule 18 (simple_statement)


state 33

   24 compound_statement: class .

    $default  reduce using rule 24 (compound_statement)


state 34

   57 class: class_with_inheritance .

    $default  reduce using rule 57 (class)


state 35

   58 class: class_without_inheritance .

    $default  reduce using rule 58 (class)


state 36

   17 simple_statement: function_call .

    $default  reduce using rule 17 (simple_statement)


state 37

   22 compound_statement: function .

    $default  reduce using rule 22 (compound_statement)


state 38

   34 assignment: member_expression . ASSIGN expression
   77 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 80
    ASSIGN      shift, and go to state 81


state 39

   23 compound_statement: conditional_statement .

    $default  reduce using rule 23 (compound_statement)


state 40

   90 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 82
    KEYWORD_ELSE_IF  shift, and go to state 83

    $default  reduce using rule 91 (elif_else)

    elif_else       go to state 84
    elif_stmts      go to state 85
    else_statement  go to state 86
    elif_statement  go to state 87


state 41

   25 compound_statement: for_statement .

    $default  reduce using rule 25 (compound_statement)


state 42

   26 compound_statement: while_statement .

    $default  reduce using rule 26 (compound_statement)


state 43

   65 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
   66              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES
   67              | IDENTIFIER LEFT_PARENTHES . LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER LEFT_PARENTHES . function_call RIGHT_PARENTHES

    IDENTIFIER     shift, and go to state 88
    LITERALSTRING  shift, and go to state 89
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50

    IDENTIFIER  [reduce using rule 71 (args)]
    $default    reduce using rule 71 (args)

    number         go to state 90
    function_call  go to state 91
    args           go to state 92


state 44

   44 expression: IDENTIFIER .
   65 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 43

    $default  reduce using rule 44 (expression)


state 45

   89 logical_expression: KEYWORD_FALSE .

    $default  reduce using rule 89 (logical_expression)


state 46

   88 logical_expression: KEYWORD_TRUE .

    $default  reduce using rule 88 (logical_expression)


state 47

   87 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER     shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 93


state 48

   98 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 94


state 49

   46 number: INTEGER .

    $default  reduce using rule 46 (number)


state 50

   47 number: FLOAT .

    $default  reduce using rule 47 (number)


state 51

   42 expression: '-' . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 95
    number         go to state 55
    function_call  go to state 56


state 52

   40 expression: '|' . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 96
    number         go to state 55
    function_call  go to state 56


state 53

   41 expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 97
    number         go to state 55
    function_call  go to state 56


state 54

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   78 logical_expression: expression .
   79                   | expression . GREATEROREQUAL expression
   80                   | expression . GREATERTHAN expression
   81                   | expression . LESSOREQUAL expression
   82                   | expression . LESSTHAN expression
   83                   | expression . EQUAL expression
   84                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 98
    MINUS           shift, and go to state 99
    MULTIPLY        shift, and go to state 100
    DIVIDE          shift, and go to state 101
    POWER           shift, and go to state 102
    EQUAL           shift, and go to state 103
    NOTEQUAL        shift, and go to state 104
    GREATERTHAN     shift, and go to state 105
    GREATEROREQUAL  shift, and go to state 106
    LESSTHAN        shift, and go to state 107
    LESSOREQUAL     shift, and go to state 108

    $default  reduce using rule 78 (logical_expression)


state 55

   43 expression: number .

    $default  reduce using rule 43 (expression)


state 56

   45 expression: function_call .

    $default  reduce using rule 45 (expression)


state 57

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
   97 if_statement: KEYWORD_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 109
    KEYWORD_OR   shift, and go to state 110
    COLON        shift, and go to state 111


state 58

   76 member_expression: IDENTIFIER .

    $default  reduce using rule 76 (member_expression)


state 59

   29 import_statment: KEYWORD_IMPORT member_expression .
   32                | KEYWORD_IMPORT member_expression . KEYWORD_AS IDENTIFIER
   77 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 80
    KEYWORD_AS  shift, and go to state 112

    IDENTIFIER  [reduce using rule 29 (import_statment)]
    $default    reduce using rule 29 (import_statment)


state 60

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 113
    COLON           shift, and go to state 114


state 61

   44 expression: IDENTIFIER .
   65 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
   76 member_expression: IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 43

    $end              reduce using rule 44 (expression)
    $end              [reduce using rule 76 (member_expression)]
    IDENTIFIER        reduce using rule 44 (expression)
    IDENTIFIER        [reduce using rule 76 (member_expression)]
    KEYWORD_IF        reduce using rule 44 (expression)
    KEYWORD_IF        [reduce using rule 76 (member_expression)]
    KEYWORD_IMPORT    reduce using rule 44 (expression)
    KEYWORD_IMPORT    [reduce using rule 76 (member_expression)]
    KEYWORD_PASS      reduce using rule 44 (expression)
    KEYWORD_PASS      [reduce using rule 76 (member_expression)]
    KEYWORD_BREAK     reduce using rule 44 (expression)
    KEYWORD_BREAK     [reduce using rule 76 (member_expression)]
    KEYWORD_CLASS     reduce using rule 44 (expression)
    KEYWORD_CLASS     [reduce using rule 76 (member_expression)]
    KEYWORD_RETURN    reduce using rule 44 (expression)
    KEYWORD_RETURN    [reduce using rule 76 (member_expression)]
    KEYWORD_CONTINUE  reduce using rule 44 (expression)
    KEYWORD_CONTINUE  [reduce using rule 76 (member_expression)]
    KEYWORD_FOR       reduce using rule 44 (expression)
    KEYWORD_FOR       [reduce using rule 76 (member_expression)]
    KEYWORD_DEF       reduce using rule 44 (expression)
    KEYWORD_DEF       [reduce using rule 76 (member_expression)]
    KEYWORD_FROM      reduce using rule 44 (expression)
    KEYWORD_FROM      [reduce using rule 76 (member_expression)]
    KEYWORD_WHILE     reduce using rule 44 (expression)
    KEYWORD_WHILE     [reduce using rule 76 (member_expression)]
    KEYWORD_DEL       reduce using rule 44 (expression)
    KEYWORD_DEL       [reduce using rule 76 (member_expression)]
    KEYWORD_WITH      reduce using rule 44 (expression)
    KEYWORD_WITH      [reduce using rule 76 (member_expression)]
    KEYWORD_YIELD     reduce using rule 44 (expression)
    KEYWORD_YIELD     [reduce using rule 76 (member_expression)]
    COMMENT           reduce using rule 44 (expression)
    COMMENT           [reduce using rule 76 (member_expression)]
    MULTILINECOMMENT  reduce using rule 44 (expression)
    MULTILINECOMMENT  [reduce using rule 76 (member_expression)]
    DEDENT            reduce using rule 44 (expression)
    DEDENT            [reduce using rule 76 (member_expression)]
    NEWLINE           reduce using rule 44 (expression)
    NEWLINE           [reduce using rule 76 (member_expression)]
    $default          reduce using rule 44 (expression)


state 62

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   51 return_statement: KEYWORD_RETURN expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 51 (return_statement)


state 63

   50 return_statement: KEYWORD_RETURN member_expression .
   77 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 80

    IDENTIFIER  [reduce using rule 50 (return_statement)]
    $default    reduce using rule 50 (return_statement)


state 64

  102 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
  103              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
  105              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
  106              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block
  107              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    KEYWORD_IN  shift, and go to state 115


state 65

  104 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER  shift, and go to state 116

    IDENTIFIER  [reduce using rule 71 (args)]
    $default    reduce using rule 71 (args)

    args  go to state 117


state 66

   69 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 118


state 67

   30 import_statment: KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER
   31                | KEYWORD_FROM member_expression . KEYWORD_IMPORT '*'
   33                | KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER
   77 member_expression: member_expression . IDENTIFIER

    IDENTIFIER      shift, and go to state 80
    KEYWORD_IMPORT  shift, and go to state 119


state 68

  109 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 120


state 69

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
  108 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 109
    KEYWORD_OR   shift, and go to state 110
    COLON        shift, and go to state 121


state 70

   48 del_statment: KEYWORD_DEL IDENTIFIER .
   49             | KEYWORD_DEL IDENTIFIER . LIST

    LIST  shift, and go to state 122

    $default  reduce using rule 48 (del_statment)


state 71

   65 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 43


state 72

   54 with_statment: KEYWORD_WITH with_stmt . COLON block
   56 with_stmt: with_stmt . COMMA function_call KEYWORD_AS IDENTIFIER

    COLON  shift, and go to state 123
    COMMA  shift, and go to state 124


state 73

   55 with_stmt: function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 125


state 74

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   53 yield_statement: KEYWORD_YIELD expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 53 (yield_statement)


state 75

   52 yield_statement: KEYWORD_YIELD member_expression .
   77 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 80

    IDENTIFIER  [reduce using rule 52 (yield_statement)]
    $default    reduce using rule 52 (yield_statement)


state 76

    6 statements: statements NEWLINE .
    9 statement: NEWLINE .

    $end              reduce using rule 6 (statements)
    $end              [reduce using rule 9 (statement)]
    IDENTIFIER        reduce using rule 6 (statements)
    IDENTIFIER        [reduce using rule 9 (statement)]
    KEYWORD_IF        reduce using rule 6 (statements)
    KEYWORD_IF        [reduce using rule 9 (statement)]
    KEYWORD_IMPORT    reduce using rule 6 (statements)
    KEYWORD_IMPORT    [reduce using rule 9 (statement)]
    KEYWORD_PASS      reduce using rule 6 (statements)
    KEYWORD_PASS      [reduce using rule 9 (statement)]
    KEYWORD_BREAK     reduce using rule 6 (statements)
    KEYWORD_BREAK     [reduce using rule 9 (statement)]
    KEYWORD_CLASS     reduce using rule 6 (statements)
    KEYWORD_CLASS     [reduce using rule 9 (statement)]
    KEYWORD_RETURN    reduce using rule 6 (statements)
    KEYWORD_RETURN    [reduce using rule 9 (statement)]
    KEYWORD_CONTINUE  reduce using rule 6 (statements)
    KEYWORD_CONTINUE  [reduce using rule 9 (statement)]
    KEYWORD_FOR       reduce using rule 6 (statements)
    KEYWORD_FOR       [reduce using rule 9 (statement)]
    KEYWORD_DEF       reduce using rule 6 (statements)
    KEYWORD_DEF       [reduce using rule 9 (statement)]
    KEYWORD_FROM      reduce using rule 6 (statements)
    KEYWORD_FROM      [reduce using rule 9 (statement)]
    KEYWORD_WHILE     reduce using rule 6 (statements)
    KEYWORD_WHILE     [reduce using rule 9 (statement)]
    KEYWORD_DEL       reduce using rule 6 (statements)
    KEYWORD_DEL       [reduce using rule 9 (statement)]
    KEYWORD_WITH      reduce using rule 6 (statements)
    KEYWORD_WITH      [reduce using rule 9 (statement)]
    KEYWORD_YIELD     reduce using rule 6 (statements)
    KEYWORD_YIELD     [reduce using rule 9 (statement)]
    COMMENT           reduce using rule 6 (statements)
    COMMENT           [reduce using rule 9 (statement)]
    MULTILINECOMMENT  reduce using rule 6 (statements)
    MULTILINECOMMENT  [reduce using rule 9 (statement)]
    DEDENT            reduce using rule 6 (statements)
    DEDENT            [reduce using rule 9 (statement)]
    NEWLINE           reduce using rule 6 (statements)
    NEWLINE           [reduce using rule 9 (statement)]
    $default          reduce using rule 6 (statements)


state 77

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 78

   28 import_statments: import_statments import_statment .

    $default  reduce using rule 28 (import_statments)


state 79

   27 import_statments: import_statment NEWLINE .

    $default  reduce using rule 27 (import_statments)


state 80

   77 member_expression: member_expression IDENTIFIER .

    $default  reduce using rule 77 (member_expression)


state 81

   34 assignment: member_expression ASSIGN . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 126
    number         go to state 55
    function_call  go to state 56


state 82

   99 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 127


state 83

  100 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
  101               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 44
    KEYWORD_FALSE   shift, and go to state 45
    KEYWORD_TRUE    shift, and go to state 46
    KEYWORD_NOT     shift, and go to state 47
    LEFT_PARENTHES  shift, and go to state 128
    INTEGER         shift, and go to state 49
    FLOAT           shift, and go to state 50
    '-'             shift, and go to state 51
    '|'             shift, and go to state 52
    '('             shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 129


state 84

   90 conditional_statement: if_statement elif_else .

    $default  reduce using rule 90 (conditional_statement)


state 85

   92 elif_else: elif_stmts . else_statement
   93          | elif_stmts .
   96 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 82
    KEYWORD_ELSE_IF  shift, and go to state 83

    $default  reduce using rule 93 (elif_else)

    else_statement  go to state 130
    elif_statement  go to state 131


state 86

   94 elif_else: else_statement .

    $default  reduce using rule 94 (elif_else)


state 87

   95 elif_stmts: elif_statement .

    $default  reduce using rule 95 (elif_stmts)


state 88

   65 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
   74 args: IDENTIFIER . COMMA
   75     | IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 43
    COMMA           shift, and go to state 132

    $default  reduce using rule 75 (args)


state 89

   67 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 133


state 90

   66 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 134


state 91

   68 function_call: IDENTIFIER LEFT_PARENTHES function_call . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 135


state 92

   65 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES
   72 args: args . IDENTIFIER COMMA
   73     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 136
    RIGHT_PARENTHES  shift, and go to state 137


state 93

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
   87                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 109
    KEYWORD_OR   shift, and go to state 110

    KEYWORD_AND  [reduce using rule 87 (logical_expression)]
    KEYWORD_OR   [reduce using rule 87 (logical_expression)]
    $default     reduce using rule 87 (logical_expression)


state 94

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 109
    KEYWORD_OR       shift, and go to state 110
    RIGHT_PARENTHES  shift, and go to state 138


state 95

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   42           | '-' expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 42 (expression)]
    MINUS     [reduce using rule 42 (expression)]
    MULTIPLY  [reduce using rule 42 (expression)]
    DIVIDE    [reduce using rule 42 (expression)]
    POWER     [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


state 96

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   40           | '|' expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 40 (expression)]
    MINUS     [reduce using rule 40 (expression)]
    MULTIPLY  [reduce using rule 40 (expression)]
    DIVIDE    [reduce using rule 40 (expression)]
    POWER     [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)


state 97

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   41           | '(' expression . ')'

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102
    ')'       shift, and go to state 139


state 98

   35 expression: expression ADD . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 140
    number         go to state 55
    function_call  go to state 56


state 99

   36 expression: expression MINUS . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 141
    number         go to state 55
    function_call  go to state 56


state 100

   37 expression: expression MULTIPLY . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 142
    number         go to state 55
    function_call  go to state 56


state 101

   38 expression: expression DIVIDE . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 143
    number         go to state 55
    function_call  go to state 56


state 102

   39 expression: expression POWER . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 144
    number         go to state 55
    function_call  go to state 56


state 103

   83 logical_expression: expression EQUAL . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 145
    number         go to state 55
    function_call  go to state 56


state 104

   84 logical_expression: expression NOTEQUAL . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 146
    number         go to state 55
    function_call  go to state 56


state 105

   80 logical_expression: expression GREATERTHAN . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 147
    number         go to state 55
    function_call  go to state 56


state 106

   79 logical_expression: expression GREATEROREQUAL . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 148
    number         go to state 55
    function_call  go to state 56


state 107

   82 logical_expression: expression LESSTHAN . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 149
    number         go to state 55
    function_call  go to state 56


state 108

   81 logical_expression: expression LESSOREQUAL . expression

    IDENTIFIER  shift, and go to state 44
    INTEGER     shift, and go to state 49
    FLOAT       shift, and go to state 50
    '-'         shift, and go to state 51
    '|'         shift, and go to state 52
    '('         shift, and go to state 53

    expression     go to state 150
    number         go to state 55
    function_call  go to state 56


state 109

   85 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER     shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 151


state 110

   86 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER     shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 152


state 111

   97 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 154


state 112

   32 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 155


state 113

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 116

    IDENTIFIER  [reduce using rule 71 (args)]
    $default    reduce using rule 71 (args)

    args  go to state 156


state 114

   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 157


state 115

  102 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
  103              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
  105              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
  106              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block
  107              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 4
    LIST        shift, and go to state 158

    function_call      go to state 159
    member_expression  go to state 160


state 116

   74 args: IDENTIFIER . COMMA
   75     | IDENTIFIER .

    COMMA  shift, and go to state 132

    $default  reduce using rule 75 (args)


state 117

   72 args: args . IDENTIFIER COMMA
   73     | args . IDENTIFIER
  104 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 136
    RIGHT_PARENTHES  shift, and go to state 161


state 118

   69 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 116

    IDENTIFIER  [reduce using rule 71 (args)]
    $default    reduce using rule 71 (args)

    args  go to state 162


state 119

   30 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER
   31                | KEYWORD_FROM member_expression KEYWORD_IMPORT . '*'
   33                | KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 163
    '*'         shift, and go to state 164


state 120

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
  109 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 109
    KEYWORD_OR       shift, and go to state 110
    RIGHT_PARENTHES  shift, and go to state 165


state 121

  108 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 166


state 122

   49 del_statment: KEYWORD_DEL IDENTIFIER LIST .

    $default  reduce using rule 49 (del_statment)


state 123

   54 with_statment: KEYWORD_WITH with_stmt COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 167


state 124

   56 with_stmt: with_stmt COMMA . function_call KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 71

    function_call  go to state 168


state 125

   55 with_stmt: function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 169


state 126

   34 assignment: member_expression ASSIGN expression .
   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 34 (assignment)


state 127

   99 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 170


state 128

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    function_call       go to state 56
    logical_expression  go to state 171


state 129

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
  100 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 109
    KEYWORD_OR   shift, and go to state 110
    COLON        shift, and go to state 172


state 130

   92 elif_else: elif_stmts else_statement .

    $default  reduce using rule 92 (elif_else)


state 131

   96 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 96 (elif_stmts)


state 132

   74 args: IDENTIFIER COMMA .

    $default  reduce using rule 74 (args)


state 133

   67 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES .

    $default  reduce using rule 67 (function_call)


state 134

   66 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 66 (function_call)


state 135

   68 function_call: IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES .

    $default  reduce using rule 68 (function_call)


state 136

   72 args: args IDENTIFIER . COMMA
   73     | args IDENTIFIER .

    COMMA  shift, and go to state 173

    $default  reduce using rule 73 (args)


state 137

   65 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 65 (function_call)


state 138

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 174


state 139

   41 expression: '(' expression ')' .

    $default  reduce using rule 41 (expression)


state 140

   35 expression: expression . ADD expression
   35           | expression ADD expression .
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 35 (expression)]
    MINUS     [reduce using rule 35 (expression)]
    MULTIPLY  [reduce using rule 35 (expression)]
    DIVIDE    [reduce using rule 35 (expression)]
    POWER     [reduce using rule 35 (expression)]
    $default  reduce using rule 35 (expression)


state 141

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   36           | expression MINUS expression .
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 36 (expression)]
    MINUS     [reduce using rule 36 (expression)]
    MULTIPLY  [reduce using rule 36 (expression)]
    DIVIDE    [reduce using rule 36 (expression)]
    POWER     [reduce using rule 36 (expression)]
    $default  reduce using rule 36 (expression)


state 142

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   37           | expression MULTIPLY expression .
   38           | expression . DIVIDE expression
   39           | expression . POWER expression

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 37 (expression)]
    MINUS     [reduce using rule 37 (expression)]
    MULTIPLY  [reduce using rule 37 (expression)]
    DIVIDE    [reduce using rule 37 (expression)]
    POWER     [reduce using rule 37 (expression)]
    $default  reduce using rule 37 (expression)


state 143

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   38           | expression DIVIDE expression .
   39           | expression . POWER expression

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 38 (expression)]
    MINUS     [reduce using rule 38 (expression)]
    MULTIPLY  [reduce using rule 38 (expression)]
    DIVIDE    [reduce using rule 38 (expression)]
    POWER     [reduce using rule 38 (expression)]
    $default  reduce using rule 38 (expression)


state 144

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   39           | expression POWER expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    ADD       [reduce using rule 39 (expression)]
    MINUS     [reduce using rule 39 (expression)]
    MULTIPLY  [reduce using rule 39 (expression)]
    DIVIDE    [reduce using rule 39 (expression)]
    POWER     [reduce using rule 39 (expression)]
    $default  reduce using rule 39 (expression)


state 145

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   83 logical_expression: expression EQUAL expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 83 (logical_expression)


state 146

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   84 logical_expression: expression NOTEQUAL expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 84 (logical_expression)


state 147

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   80 logical_expression: expression GREATERTHAN expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 80 (logical_expression)


state 148

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   79 logical_expression: expression GREATEROREQUAL expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 79 (logical_expression)


state 149

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   82 logical_expression: expression LESSTHAN expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 82 (logical_expression)


state 150

   35 expression: expression . ADD expression
   36           | expression . MINUS expression
   37           | expression . MULTIPLY expression
   38           | expression . DIVIDE expression
   39           | expression . POWER expression
   81 logical_expression: expression LESSOREQUAL expression .

    ADD       shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    POWER     shift, and go to state 102

    $default  reduce using rule 81 (logical_expression)


state 151

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   85                   | logical_expression KEYWORD_AND logical_expression .
   86                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 109
    KEYWORD_OR   shift, and go to state 110

    KEYWORD_AND  [reduce using rule 85 (logical_expression)]
    KEYWORD_OR   [reduce using rule 85 (logical_expression)]
    $default     reduce using rule 85 (logical_expression)


state 152

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
   86                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 109
    KEYWORD_OR   shift, and go to state 110

    KEYWORD_AND  [reduce using rule 86 (logical_expression)]
    KEYWORD_OR   [reduce using rule 86 (logical_expression)]
    $default     reduce using rule 86 (logical_expression)


state 153

   70 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 175


state 154

   97 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 97 (if_statement)


state 155

   32 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 32 (import_statment)


state 156

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   72 args: args . IDENTIFIER COMMA
   73     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 136
    RIGHT_PARENTHES  shift, and go to state 176


state 157

   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 177


state 158

  103 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 178


state 159

  102 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 179


state 160

   77 member_expression: member_expression . IDENTIFIER
  105 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
  106              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block
  107              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 180
    COLON       shift, and go to state 181

    function_call  go to state 182


state 161

  104 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 183


state 162

   69 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
   72 args: args . IDENTIFIER COMMA
   73     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 136
    RIGHT_PARENTHES  shift, and go to state 184


state 163

   30 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER .
   33                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 185

    $default  reduce using rule 30 (import_statment)


state 164

   31 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT '*' .

    $default  reduce using rule 31 (import_statment)


state 165

  109 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 186


state 166

  108 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 108 (while_statement)


state 167

   54 with_statment: KEYWORD_WITH with_stmt COLON block .

    $default  reduce using rule 54 (with_statment)


state 168

   56 with_stmt: with_stmt COMMA function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 187


state 169

   55 with_stmt: function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 55 (with_stmt)


state 170

   99 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 99 (else_statement)


state 171

   85 logical_expression: logical_expression . KEYWORD_AND logical_expression
   86                   | logical_expression . KEYWORD_OR logical_expression
  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 109
    KEYWORD_OR       shift, and go to state 110
    RIGHT_PARENTHES  shift, and go to state 188


state 172

  100 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 189


state 173

   72 args: args IDENTIFIER COMMA .

    $default  reduce using rule 72 (args)


state 174

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 190


state 175

   70 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CLASS     shift, and go to state 9
    KEYWORD_RETURN    shift, and go to state 10
    KEYWORD_CONTINUE  shift, and go to state 11
    KEYWORD_FOR       shift, and go to state 12
    KEYWORD_DEF       shift, and go to state 13
    KEYWORD_FROM      shift, and go to state 14
    KEYWORD_WHILE     shift, and go to state 15
    KEYWORD_DEL       shift, and go to state 16
    KEYWORD_WITH      shift, and go to state 17
    KEYWORD_YIELD     shift, and go to state 18
    COMMENT           shift, and go to state 19
    MULTILINECOMMENT  shift, and go to state 20
    NEWLINE           shift, and go to state 21

    statements                 go to state 191
    statement                  go to state 23
    simple_statement           go to state 24
    compound_statement         go to state 25
    import_statments           go to state 26
    import_statment            go to state 27
    assignment                 go to state 28
    del_statment               go to state 29
    return_statement           go to state 30
    yield_statement            go to state 31
    with_statment              go to state 32
    class                      go to state 33
    class_with_inheritance     go to state 34
    class_without_inheritance  go to state 35
    function_call              go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 176

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON NEWLINE INDENT class_block DEDENT

    COLON  shift, and go to state 192


state 177

   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 60 (class_block)

    class_block  go to state 193


state 178

  103 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 194


state 179

  102 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 195


state 180

   65 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   66              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   67              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
   68              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
   77 member_expression: member_expression IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 43

    $default  reduce using rule 77 (member_expression)


state 181

  105 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 196


state 182

  106 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block
  107              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . '.' IDENTIFIER COLON block

    COLON  shift, and go to state 197
    '.'    shift, and go to state 198


state 183

  104 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 71

    function_call  go to state 199


state 184

   69 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 200


state 185

   33 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 201


state 186

  109 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 202


state 187

   56 with_stmt: with_stmt COMMA function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 203


state 188

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 204


state 189

  100 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 100 (elif_statement)


state 190

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 98 (if_statement)


state 191

    4 statements: statements . statement
    6           | statements . NEWLINE
   70 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CLASS     shift, and go to state 9
    KEYWORD_RETURN    shift, and go to state 10
    KEYWORD_CONTINUE  shift, and go to state 11
    KEYWORD_FOR       shift, and go to state 12
    KEYWORD_DEF       shift, and go to state 13
    KEYWORD_FROM      shift, and go to state 14
    KEYWORD_WHILE     shift, and go to state 15
    KEYWORD_DEL       shift, and go to state 16
    KEYWORD_WITH      shift, and go to state 17
    KEYWORD_YIELD     shift, and go to state 18
    COMMENT           shift, and go to state 19
    MULTILINECOMMENT  shift, and go to state 20
    DEDENT            shift, and go to state 205
    NEWLINE           shift, and go to state 76

    statement                  go to state 77
    simple_statement           go to state 24
    compound_statement         go to state 25
    import_statments           go to state 26
    import_statment            go to state 27
    assignment                 go to state 28
    del_statment               go to state 29
    return_statement           go to state 30
    yield_statement            go to state 31
    with_statment              go to state 32
    class                      go to state 33
    class_with_inheritance     go to state 34
    class_without_inheritance  go to state 35
    function_call              go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 192

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 206


state 193

   61 class_block: class_block . assignment
   62            | class_block . function
   63            | class_block . NEWLINE
   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    IDENTIFIER   shift, and go to state 58
    KEYWORD_DEF  shift, and go to state 13
    DEDENT       shift, and go to state 207
    NEWLINE      shift, and go to state 208

    assignment         go to state 209
    function           go to state 210
    member_expression  go to state 38


state 194

  103 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 103 (for_statement)


state 195

  102 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 102 (for_statement)


state 196

  105 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 105 (for_statement)


state 197

  106 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 211


state 198

  107 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 212


state 199

  104 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 213


state 200

   69 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 214


state 201

   33 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 33 (import_statment)


state 202

  109 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 109 (while_statement)


state 203

   56 with_stmt: with_stmt COMMA function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 56 (with_stmt)


state 204

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 215


state 205

   70 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 70 (block)


state 206

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 216


state 207

   64 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 64 (class_without_inheritance)


state 208

   63 class_block: class_block NEWLINE .

    $default  reduce using rule 63 (class_block)


state 209

   61 class_block: class_block assignment .

    $default  reduce using rule 61 (class_block)


state 210

   62 class_block: class_block function .

    $default  reduce using rule 62 (class_block)


state 211

  106 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 106 (for_statement)


state 212

  107 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER . COLON block

    COLON  shift, and go to state 217


state 213

  104 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 218


state 214

   69 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 69 (function)


state 215

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 101 (elif_statement)


state 216

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 60 (class_block)

    class_block  go to state 219


state 217

  107 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 153

    block  go to state 220


state 218

  104 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 104 (for_statement)


state 219

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block . DEDENT
   61 class_block: class_block . assignment
   62            | class_block . function
   63            | class_block . NEWLINE

    IDENTIFIER   shift, and go to state 58
    KEYWORD_DEF  shift, and go to state 13
    DEDENT       shift, and go to state 221
    NEWLINE      shift, and go to state 208

    assignment         go to state 209
    function           go to state 210
    member_expression  go to state 38


state 220

  107 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block .

    $default  reduce using rule 107 (for_statement)


state 221

   59 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 59 (class_with_inheritance)
