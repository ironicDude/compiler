Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALSTRING
   LITERALCHAR
   KEYWORD_AWAIT
   KEYWORD_IMPORT
   KEYWORD_NONE
   KEYWORD_EXCEPT
   KEYWORD_RAISE
   KEYWORD_FINALLY
   KEYWORD_IS
   KEYWORD_LAMBDA
   KEYWORD_TRY
   KEYWORD_AS
   KEYWORD_FROM
   KEYWORD_NONLOCAL
   KEYWORD_ASSERT
   KEYWORD_DEL
   KEYWORD_GLOBAL
   KEYWORD_WITH
   KEYWORD_ASYNC
   OPERATORS
   COMMENT
   MODULO
   ASSIGNADD
   ASSIGNMINUS
   ASSIGNMULTIPLY
   ASSIGNDIVIDE
   ASSIGNMODULO
   ASSIGNFLOORDIVISION
   ASSIGNEXPONINTIATION
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   ASSIGNRIGHTSHIFT
   ASSIGNLEFTSHIFT
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   INCREMENT
   DECREMENT
   '+'
   '*'
   '/'


State 45 conflicts: 14 reduce/reduce
State 47 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 56 conflicts: 1 reduce/reduce
State 58 conflicts: 13 reduce/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 2 shift/reduce
State 70 conflicts: 5 shift/reduce
State 71 conflicts: 5 shift/reduce
State 87 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 107 conflicts: 5 shift/reduce
State 108 conflicts: 5 shift/reduce
State 109 conflicts: 5 shift/reduce
State 110 conflicts: 5 shift/reduce
State 111 conflicts: 5 shift/reduce
State 118 conflicts: 2 shift/reduce
State 119 conflicts: 2 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | statements prog

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement

    9 simple_statement: assignment
   10                 | return_statement
   11                 | yield_statement
   12                 | KEYWORD_PASS
   13                 | KEYWORD_BREAK
   14                 | KEYWORD_CONTINUE

   15 compound_statement: function
   16                   | conditional_statement
   17                   | class
   18                   | for_statement
   19                   | while_statement

   20 assignment: member_expression ASSIGN expression

   21 expression: expression ADD expression
   22           | expression MINUS expression
   23           | expression MULTIPLY expression
   24           | expression DIVIDE expression
   25           | expression POWER expression
   26           | '|' expression
   27           | '(' expression ')'
   28           | '-' expression
   29           | number
   30           | IDENTIFIER
   31           | function_call

   32 number: INTEGER
   33       | FLOAT

   34 return_statement: KEYWORD_RETURN member_expression
   35                 | KEYWORD_RETURN expression

   36 yield_statement: KEYWORD_YIELD member_expression
   37                | KEYWORD_YIELD expression

   38 class: class_with_inheritance
   39      | class_without_inheritance

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

   41 class_block: /* empty */
   42            | class_block assignment
   43            | class_block function
   44            | class_block NEWLINE

   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

   46 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

   47 block: NEWLINE INDENT statements DEDENT

   48 args: /* empty */
   49     | args IDENTIFIER COMMA
   50     | args IDENTIFIER
   51     | IDENTIFIER COMMA
   52     | IDENTIFIER

   53 member_expression: IDENTIFIER
   54                  | member_expression IDENTIFIER

   55 conditional_statement: if_statement elif_else

   56 elif_else: /* empty */
   57          | elif_stmts else_statement
   58          | elif_stmts
   59          | else_statement

   60 elif_stmts: elif_statement
   61           | elif_stmts elif_statement

   62 if_statement: KEYWORD_IF logical_expression COLON block
   63             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

   64 else_statement: KEYWORD_ELSE COLON block

   65 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
   66               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

   67 logical_expression: expression
   68                   | expression GREATEROREQUAL expression
   69                   | expression GREATERTHAN expression
   70                   | expression LESSOREQUAL expression
   71                   | expression LESSTHAN expression
   72                   | expression EQUAL expression
   73                   | expression NOTEQUAL expression
   74                   | logical_expression KEYWORD_AND logical_expression
   75                   | logical_expression KEYWORD_OR logical_expression
   76                   | KEYWORD_NOT logical_expression
   77                   | KEYWORD_TRUE
   78                   | KEYWORD_FALSE

   79 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
   83              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
   84              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
   85              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
   86              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block
   87              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

   88 while_statement: KEYWORD_WHILE logical_expression COLON block
   89                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 27
')' (41) 27
'*' (42)
'+' (43)
'-' (45) 28
'.' (46) 87
'/' (47)
'|' (124) 26
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 30 40 45 46 49 50 51 52 53 54 79 80 81 82 83 85 86
    87
LIST (262) 83
LITERALSTRING (263)
LITERALCHAR (264)
KEYWORD_FALSE (265) 78
KEYWORD_TRUE (266) 77
KEYWORD_AWAIT (267)
KEYWORD_IF (268) 62 63
KEYWORD_ELSE (269) 64
KEYWORD_ELSE_IF (270) 65 66
KEYWORD_IMPORT (271)
KEYWORD_PASS (272) 12
KEYWORD_NONE (273)
KEYWORD_BREAK (274) 13
KEYWORD_EXCEPT (275)
KEYWORD_IN (276) 82 83 84 85 86 87
KEYWORD_RAISE (277)
KEYWORD_CLASS (278) 40 45
KEYWORD_FINALLY (279)
KEYWORD_IS (280)
KEYWORD_RETURN (281) 34 35
KEYWORD_AND (282) 74
KEYWORD_CONTINUE (283) 14
KEYWORD_FOR (284) 82 83 84 85 86 87
KEYWORD_LAMBDA (285)
KEYWORD_TRY (286)
KEYWORD_AS (287)
KEYWORD_DEF (288) 46
KEYWORD_FROM (289)
KEYWORD_NONLOCAL (290)
KEYWORD_WHILE (291) 88 89
KEYWORD_ASSERT (292)
KEYWORD_DEL (293)
KEYWORD_GLOBAL (294)
KEYWORD_NOT (295) 76
KEYWORD_WITH (296)
KEYWORD_ASYNC (297)
KEYWORD_OR (298) 75
KEYWORD_YIELD (299) 36 37
OPERATORS (300)
COMMENT (301)
ADD (302) 21
MINUS (303) 22
MULTIPLY (304) 23
DIVIDE (305) 24
POWER (306) 25
MODULO (307)
ASSIGN (308) 20
ASSIGNADD (309)
ASSIGNMINUS (310)
ASSIGNMULTIPLY (311)
ASSIGNDIVIDE (312)
ASSIGNMODULO (313)
ASSIGNFLOORDIVISION (314)
ASSIGNEXPONINTIATION (315)
ASSIGNBITWISEAND (316)
ASSIGNBITWISEOR (317)
ASSIGNBITWISEXOR (318)
ASSIGNRIGHTSHIFT (319)
ASSIGNLEFTSHIFT (320)
EQUAL (321) 72
NOT (322)
NOTEQUAL (323) 73
GREATERTHAN (324) 69
GREATEROREQUAL (325) 68
LESSTHAN (326) 71
LESSOREQUAL (327) 70
LEFT_PARENTHES (328) 40 46 63 66 79 80 81 84 89
RIGHT_PARENTHES (329) 40 46 63 66 79 80 81 84 89
LEFT_BRACES (330)
RIGHT_BRACES (331)
LEFT_BRACKETS (332)
RIGHT_BRACKETS (333)
COLON (334) 40 45 46 62 63 64 65 66 82 83 84 85 86 87 88 89
COMMA (335) 49 51
SEMICOLON (336)
INCREMENT (337)
DECREMENT (338)
INTEGER (339) 32
FLOAT (340) 33
DEDENT (341) 40 45 47
INDENT (342) 40 45 47
NEWLINE (343) 2 6 40 44 45 47
UMINUS (344)


Nonterminals, with rules where they appear

$accept (98)
    on left: 0
prog (99)
    on left: 1 2 3, on right: 0 3
statements (100)
    on left: 4 5 6, on right: 3 4 6 47
statement (101)
    on left: 7 8, on right: 4 5
simple_statement (102)
    on left: 9 10 11 12 13 14, on right: 8
compound_statement (103)
    on left: 15 16 17 18 19, on right: 7
assignment (104)
    on left: 20, on right: 9 42
expression (105)
    on left: 21 22 23 24 25 26 27 28 29 30 31, on right: 20 21 22 23
    24 25 26 27 28 35 37 67 68 69 70 71 72 73
number (106)
    on left: 32 33, on right: 29 80
return_statement (107)
    on left: 34 35, on right: 10
yield_statement (108)
    on left: 36 37, on right: 11
class (109)
    on left: 38 39, on right: 17
class_with_inheritance (110)
    on left: 40, on right: 38
class_block (111)
    on left: 41 42 43 44, on right: 40 42 43 44 45
class_without_inheritance (112)
    on left: 45, on right: 39
function (113)
    on left: 46, on right: 15 43
block (114)
    on left: 47, on right: 46 62 63 64 65 66 82 83 84 85 86 87 88 89
args (115)
    on left: 48 49 50 51 52, on right: 40 46 49 50 79 84
member_expression (116)
    on left: 53 54, on right: 20 34 36 54 85 86 87
conditional_statement (117)
    on left: 55, on right: 16
elif_else (118)
    on left: 56 57 58 59, on right: 55
elif_stmts (119)
    on left: 60 61, on right: 57 58 61
if_statement (120)
    on left: 62 63, on right: 55
else_statement (121)
    on left: 64, on right: 57 59
elif_statement (122)
    on left: 65 66, on right: 60 61
logical_expression (123)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78, on right: 62 63 65
    66 74 75 76 88 89
function_call (124)
    on left: 79 80 81, on right: 31 81 82 84 86 87
for_statement (125)
    on left: 82 83 84 85 86 87, on right: 18
while_statement (126)
    on left: 88 89, on right: 19


state 0

    0 $accept: . prog $end

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    KEYWORD_YIELD     shift, and go to state 11
    NEWLINE           shift, and go to state 12

    $default  reduce using rule 1 (prog)

    prog                       go to state 13
    statements                 go to state 14
    statement                  go to state 15
    simple_statement           go to state 16
    compound_statement         go to state 17
    assignment                 go to state 18
    return_statement           go to state 19
    yield_statement            go to state 20
    class                      go to state 21
    class_with_inheritance     go to state 22
    class_without_inheritance  go to state 23
    function                   go to state 24
    member_expression          go to state 25
    conditional_statement      go to state 26
    if_statement               go to state 27
    for_statement              go to state 28
    while_statement            go to state 29


state 1

   53 member_expression: IDENTIFIER .

    $default  reduce using rule 53 (member_expression)


state 2

   62 if_statement: KEYWORD_IF . logical_expression COLON block
   63             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 30
    KEYWORD_FALSE   shift, and go to state 31
    KEYWORD_TRUE    shift, and go to state 32
    KEYWORD_NOT     shift, and go to state 33
    LEFT_PARENTHES  shift, and go to state 34
    INTEGER         shift, and go to state 35
    FLOAT           shift, and go to state 36
    '-'             shift, and go to state 37
    '|'             shift, and go to state 38
    '('             shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 42
    function_call       go to state 43


state 3

   12 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 12 (simple_statement)


state 4

   13 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 13 (simple_statement)


state 5

   40 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   45 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 44


state 6

   34 return_statement: KEYWORD_RETURN . member_expression
   35                 | KEYWORD_RETURN . expression

    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression         go to state 46
    number             go to state 41
    member_expression  go to state 47
    function_call      go to state 43


state 7

   14 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 14 (simple_statement)


state 8

   82 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
   83              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
   84              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
   85              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
   86              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block
   87              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER      shift, and go to state 48
    LEFT_PARENTHES  shift, and go to state 49


state 9

   46 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 50


state 10

   88 while_statement: KEYWORD_WHILE . logical_expression COLON block
   89                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 30
    KEYWORD_FALSE   shift, and go to state 31
    KEYWORD_TRUE    shift, and go to state 32
    KEYWORD_NOT     shift, and go to state 33
    LEFT_PARENTHES  shift, and go to state 51
    INTEGER         shift, and go to state 35
    FLOAT           shift, and go to state 36
    '-'             shift, and go to state 37
    '|'             shift, and go to state 38
    '('             shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 52
    function_call       go to state 43


state 11

   36 yield_statement: KEYWORD_YIELD . member_expression
   37                | KEYWORD_YIELD . expression

    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression         go to state 53
    number             go to state 41
    member_expression  go to state 54
    function_call      go to state 43


state 12

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 13

    0 $accept: prog . $end

    $end  shift, and go to state 55


state 14

    3 prog: statements . prog
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    KEYWORD_YIELD     shift, and go to state 11
    NEWLINE           shift, and go to state 56

    $default  reduce using rule 1 (prog)

    prog                       go to state 57
    statements                 go to state 14
    statement                  go to state 58
    simple_statement           go to state 16
    compound_statement         go to state 17
    assignment                 go to state 18
    return_statement           go to state 19
    yield_statement            go to state 20
    class                      go to state 21
    class_with_inheritance     go to state 22
    class_without_inheritance  go to state 23
    function                   go to state 24
    member_expression          go to state 25
    conditional_statement      go to state 26
    if_statement               go to state 27
    for_statement              go to state 28
    while_statement            go to state 29


state 15

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 16

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 17

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 18

    9 simple_statement: assignment .

    $default  reduce using rule 9 (simple_statement)


state 19

   10 simple_statement: return_statement .

    $default  reduce using rule 10 (simple_statement)


state 20

   11 simple_statement: yield_statement .

    $default  reduce using rule 11 (simple_statement)


state 21

   17 compound_statement: class .

    $default  reduce using rule 17 (compound_statement)


state 22

   38 class: class_with_inheritance .

    $default  reduce using rule 38 (class)


state 23

   39 class: class_without_inheritance .

    $default  reduce using rule 39 (class)


state 24

   15 compound_statement: function .

    $default  reduce using rule 15 (compound_statement)


state 25

   20 assignment: member_expression . ASSIGN expression
   54 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 59
    ASSIGN      shift, and go to state 60


state 26

   16 compound_statement: conditional_statement .

    $default  reduce using rule 16 (compound_statement)


state 27

   55 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 61
    KEYWORD_ELSE_IF  shift, and go to state 62

    $default  reduce using rule 56 (elif_else)

    elif_else       go to state 63
    elif_stmts      go to state 64
    else_statement  go to state 65
    elif_statement  go to state 66


state 28

   18 compound_statement: for_statement .

    $default  reduce using rule 18 (compound_statement)


state 29

   19 compound_statement: while_statement .

    $default  reduce using rule 19 (compound_statement)


state 30

   30 expression: IDENTIFIER .
   79 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 67

    $default  reduce using rule 30 (expression)


state 31

   78 logical_expression: KEYWORD_FALSE .

    $default  reduce using rule 78 (logical_expression)


state 32

   77 logical_expression: KEYWORD_TRUE .

    $default  reduce using rule 77 (logical_expression)


state 33

   76 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER     shift, and go to state 30
    KEYWORD_FALSE  shift, and go to state 31
    KEYWORD_TRUE   shift, and go to state 32
    KEYWORD_NOT    shift, and go to state 33
    INTEGER        shift, and go to state 35
    FLOAT          shift, and go to state 36
    '-'            shift, and go to state 37
    '|'            shift, and go to state 38
    '('            shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 68
    function_call       go to state 43


state 34

   63 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 30
    KEYWORD_FALSE  shift, and go to state 31
    KEYWORD_TRUE   shift, and go to state 32
    KEYWORD_NOT    shift, and go to state 33
    INTEGER        shift, and go to state 35
    FLOAT          shift, and go to state 36
    '-'            shift, and go to state 37
    '|'            shift, and go to state 38
    '('            shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 69
    function_call       go to state 43


state 35

   32 number: INTEGER .

    $default  reduce using rule 32 (number)


state 36

   33 number: FLOAT .

    $default  reduce using rule 33 (number)


state 37

   28 expression: '-' . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 70
    number         go to state 41
    function_call  go to state 43


state 38

   26 expression: '|' . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 71
    number         go to state 41
    function_call  go to state 43


state 39

   27 expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 72
    number         go to state 41
    function_call  go to state 43


state 40

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   67 logical_expression: expression .
   68                   | expression . GREATEROREQUAL expression
   69                   | expression . GREATERTHAN expression
   70                   | expression . LESSOREQUAL expression
   71                   | expression . LESSTHAN expression
   72                   | expression . EQUAL expression
   73                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 73
    MINUS           shift, and go to state 74
    MULTIPLY        shift, and go to state 75
    DIVIDE          shift, and go to state 76
    POWER           shift, and go to state 77
    EQUAL           shift, and go to state 78
    NOTEQUAL        shift, and go to state 79
    GREATERTHAN     shift, and go to state 80
    GREATEROREQUAL  shift, and go to state 81
    LESSTHAN        shift, and go to state 82
    LESSOREQUAL     shift, and go to state 83

    $default  reduce using rule 67 (logical_expression)


state 41

   29 expression: number .

    $default  reduce using rule 29 (expression)


state 42

   62 if_statement: KEYWORD_IF logical_expression . COLON block
   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 84
    KEYWORD_OR   shift, and go to state 85
    COLON        shift, and go to state 86


state 43

   31 expression: function_call .

    $default  reduce using rule 31 (expression)


state 44

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 87
    COLON           shift, and go to state 88


state 45

   30 expression: IDENTIFIER .
   53 member_expression: IDENTIFIER .
   79 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 67

    $end              reduce using rule 30 (expression)
    $end              [reduce using rule 53 (member_expression)]
    IDENTIFIER        reduce using rule 30 (expression)
    IDENTIFIER        [reduce using rule 53 (member_expression)]
    KEYWORD_IF        reduce using rule 30 (expression)
    KEYWORD_IF        [reduce using rule 53 (member_expression)]
    KEYWORD_PASS      reduce using rule 30 (expression)
    KEYWORD_PASS      [reduce using rule 53 (member_expression)]
    KEYWORD_BREAK     reduce using rule 30 (expression)
    KEYWORD_BREAK     [reduce using rule 53 (member_expression)]
    KEYWORD_CLASS     reduce using rule 30 (expression)
    KEYWORD_CLASS     [reduce using rule 53 (member_expression)]
    KEYWORD_RETURN    reduce using rule 30 (expression)
    KEYWORD_RETURN    [reduce using rule 53 (member_expression)]
    KEYWORD_CONTINUE  reduce using rule 30 (expression)
    KEYWORD_CONTINUE  [reduce using rule 53 (member_expression)]
    KEYWORD_FOR       reduce using rule 30 (expression)
    KEYWORD_FOR       [reduce using rule 53 (member_expression)]
    KEYWORD_DEF       reduce using rule 30 (expression)
    KEYWORD_DEF       [reduce using rule 53 (member_expression)]
    KEYWORD_WHILE     reduce using rule 30 (expression)
    KEYWORD_WHILE     [reduce using rule 53 (member_expression)]
    KEYWORD_YIELD     reduce using rule 30 (expression)
    KEYWORD_YIELD     [reduce using rule 53 (member_expression)]
    DEDENT            reduce using rule 30 (expression)
    DEDENT            [reduce using rule 53 (member_expression)]
    NEWLINE           reduce using rule 30 (expression)
    NEWLINE           [reduce using rule 53 (member_expression)]
    $default          reduce using rule 30 (expression)


state 46

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   35 return_statement: KEYWORD_RETURN expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 35 (return_statement)


state 47

   34 return_statement: KEYWORD_RETURN member_expression .
   54 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 59

    IDENTIFIER  [reduce using rule 34 (return_statement)]
    $default    reduce using rule 34 (return_statement)


state 48

   82 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
   83              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
   85              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
   86              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block
   87              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    KEYWORD_IN  shift, and go to state 89


state 49

   84 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER  shift, and go to state 90

    IDENTIFIER  [reduce using rule 48 (args)]
    $default    reduce using rule 48 (args)

    args  go to state 91


state 50

   46 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 92


state 51

   89 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 30
    KEYWORD_FALSE  shift, and go to state 31
    KEYWORD_TRUE   shift, and go to state 32
    KEYWORD_NOT    shift, and go to state 33
    INTEGER        shift, and go to state 35
    FLOAT          shift, and go to state 36
    '-'            shift, and go to state 37
    '|'            shift, and go to state 38
    '('            shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 93
    function_call       go to state 43


state 52

   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression
   88 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 84
    KEYWORD_OR   shift, and go to state 85
    COLON        shift, and go to state 94


state 53

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   37 yield_statement: KEYWORD_YIELD expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 37 (yield_statement)


state 54

   36 yield_statement: KEYWORD_YIELD member_expression .
   54 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 59

    IDENTIFIER  [reduce using rule 36 (yield_statement)]
    $default    reduce using rule 36 (yield_statement)


state 55

    0 $accept: prog $end .

    $default  accept


state 56

    2 prog: NEWLINE .
    6 statements: statements NEWLINE .

    $end      reduce using rule 2 (prog)
    $end      [reduce using rule 6 (statements)]
    $default  reduce using rule 6 (statements)


state 57

    3 prog: statements prog .

    $default  reduce using rule 3 (prog)


state 58

    4 statements: statements statement .
    5           | statement .

    $end              reduce using rule 4 (statements)
    $end              [reduce using rule 5 (statements)]
    IDENTIFIER        reduce using rule 4 (statements)
    IDENTIFIER        [reduce using rule 5 (statements)]
    KEYWORD_IF        reduce using rule 4 (statements)
    KEYWORD_IF        [reduce using rule 5 (statements)]
    KEYWORD_PASS      reduce using rule 4 (statements)
    KEYWORD_PASS      [reduce using rule 5 (statements)]
    KEYWORD_BREAK     reduce using rule 4 (statements)
    KEYWORD_BREAK     [reduce using rule 5 (statements)]
    KEYWORD_CLASS     reduce using rule 4 (statements)
    KEYWORD_CLASS     [reduce using rule 5 (statements)]
    KEYWORD_RETURN    reduce using rule 4 (statements)
    KEYWORD_RETURN    [reduce using rule 5 (statements)]
    KEYWORD_CONTINUE  reduce using rule 4 (statements)
    KEYWORD_CONTINUE  [reduce using rule 5 (statements)]
    KEYWORD_FOR       reduce using rule 4 (statements)
    KEYWORD_FOR       [reduce using rule 5 (statements)]
    KEYWORD_DEF       reduce using rule 4 (statements)
    KEYWORD_DEF       [reduce using rule 5 (statements)]
    KEYWORD_WHILE     reduce using rule 4 (statements)
    KEYWORD_WHILE     [reduce using rule 5 (statements)]
    KEYWORD_YIELD     reduce using rule 4 (statements)
    KEYWORD_YIELD     [reduce using rule 5 (statements)]
    NEWLINE           reduce using rule 4 (statements)
    NEWLINE           [reduce using rule 5 (statements)]
    $default          reduce using rule 4 (statements)


state 59

   54 member_expression: member_expression IDENTIFIER .

    $default  reduce using rule 54 (member_expression)


state 60

   20 assignment: member_expression ASSIGN . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 95
    number         go to state 41
    function_call  go to state 43


state 61

   64 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 96


state 62

   65 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
   66               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 30
    KEYWORD_FALSE   shift, and go to state 31
    KEYWORD_TRUE    shift, and go to state 32
    KEYWORD_NOT     shift, and go to state 33
    LEFT_PARENTHES  shift, and go to state 97
    INTEGER         shift, and go to state 35
    FLOAT           shift, and go to state 36
    '-'             shift, and go to state 37
    '|'             shift, and go to state 38
    '('             shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 98
    function_call       go to state 43


state 63

   55 conditional_statement: if_statement elif_else .

    $default  reduce using rule 55 (conditional_statement)


state 64

   57 elif_else: elif_stmts . else_statement
   58          | elif_stmts .
   61 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 61
    KEYWORD_ELSE_IF  shift, and go to state 62

    $default  reduce using rule 58 (elif_else)

    else_statement  go to state 99
    elif_statement  go to state 100


state 65

   59 elif_else: else_statement .

    $default  reduce using rule 59 (elif_else)


state 66

   60 elif_stmts: elif_statement .

    $default  reduce using rule 60 (elif_stmts)


state 67

   79 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
   80              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES
   81              | IDENTIFIER LEFT_PARENTHES . function_call RIGHT_PARENTHES

    IDENTIFIER  shift, and go to state 101
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36

    IDENTIFIER  [reduce using rule 48 (args)]
    $default    reduce using rule 48 (args)

    number         go to state 102
    args           go to state 103
    function_call  go to state 104


state 68

   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression
   76                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 84
    KEYWORD_OR   shift, and go to state 85

    KEYWORD_AND  [reduce using rule 76 (logical_expression)]
    KEYWORD_OR   [reduce using rule 76 (logical_expression)]
    $default     reduce using rule 76 (logical_expression)


state 69

   63 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block
   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND      shift, and go to state 84
    KEYWORD_OR       shift, and go to state 85
    RIGHT_PARENTHES  shift, and go to state 105


state 70

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   28           | '-' expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 28 (expression)]
    MINUS     [reduce using rule 28 (expression)]
    MULTIPLY  [reduce using rule 28 (expression)]
    DIVIDE    [reduce using rule 28 (expression)]
    POWER     [reduce using rule 28 (expression)]
    $default  reduce using rule 28 (expression)


state 71

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   26           | '|' expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 26 (expression)]
    MINUS     [reduce using rule 26 (expression)]
    MULTIPLY  [reduce using rule 26 (expression)]
    DIVIDE    [reduce using rule 26 (expression)]
    POWER     [reduce using rule 26 (expression)]
    $default  reduce using rule 26 (expression)


state 72

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   27           | '(' expression . ')'

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77
    ')'       shift, and go to state 106


state 73

   21 expression: expression ADD . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 107
    number         go to state 41
    function_call  go to state 43


state 74

   22 expression: expression MINUS . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 108
    number         go to state 41
    function_call  go to state 43


state 75

   23 expression: expression MULTIPLY . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 109
    number         go to state 41
    function_call  go to state 43


state 76

   24 expression: expression DIVIDE . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 110
    number         go to state 41
    function_call  go to state 43


state 77

   25 expression: expression POWER . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 111
    number         go to state 41
    function_call  go to state 43


state 78

   72 logical_expression: expression EQUAL . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 112
    number         go to state 41
    function_call  go to state 43


state 79

   73 logical_expression: expression NOTEQUAL . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 113
    number         go to state 41
    function_call  go to state 43


state 80

   69 logical_expression: expression GREATERTHAN . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 114
    number         go to state 41
    function_call  go to state 43


state 81

   68 logical_expression: expression GREATEROREQUAL . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 115
    number         go to state 41
    function_call  go to state 43


state 82

   71 logical_expression: expression LESSTHAN . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 116
    number         go to state 41
    function_call  go to state 43


state 83

   70 logical_expression: expression LESSOREQUAL . expression

    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 35
    FLOAT       shift, and go to state 36
    '-'         shift, and go to state 37
    '|'         shift, and go to state 38
    '('         shift, and go to state 39

    expression     go to state 117
    number         go to state 41
    function_call  go to state 43


state 84

   74 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER     shift, and go to state 30
    KEYWORD_FALSE  shift, and go to state 31
    KEYWORD_TRUE   shift, and go to state 32
    KEYWORD_NOT    shift, and go to state 33
    INTEGER        shift, and go to state 35
    FLOAT          shift, and go to state 36
    '-'            shift, and go to state 37
    '|'            shift, and go to state 38
    '('            shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 118
    function_call       go to state 43


state 85

   75 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER     shift, and go to state 30
    KEYWORD_FALSE  shift, and go to state 31
    KEYWORD_TRUE   shift, and go to state 32
    KEYWORD_NOT    shift, and go to state 33
    INTEGER        shift, and go to state 35
    FLOAT          shift, and go to state 36
    '-'            shift, and go to state 37
    '|'            shift, and go to state 38
    '('            shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 119
    function_call       go to state 43


state 86

   62 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 121


state 87

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 90

    IDENTIFIER  [reduce using rule 48 (args)]
    $default    reduce using rule 48 (args)

    args  go to state 122


state 88

   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 123


state 89

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
   83              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
   85              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
   86              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block
   87              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 124
    LIST        shift, and go to state 125

    member_expression  go to state 126
    function_call      go to state 127


state 90

   51 args: IDENTIFIER . COMMA
   52     | IDENTIFIER .

    COMMA  shift, and go to state 128

    $default  reduce using rule 52 (args)


state 91

   49 args: args . IDENTIFIER COMMA
   50     | args . IDENTIFIER
   84 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 129
    RIGHT_PARENTHES  shift, and go to state 130


state 92

   46 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 90

    IDENTIFIER  [reduce using rule 48 (args)]
    $default    reduce using rule 48 (args)

    args  go to state 131


state 93

   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression
   89 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 84
    KEYWORD_OR       shift, and go to state 85
    RIGHT_PARENTHES  shift, and go to state 132


state 94

   88 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 133


state 95

   20 assignment: member_expression ASSIGN expression .
   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 20 (assignment)


state 96

   64 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 134


state 97

   66 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 30
    KEYWORD_FALSE  shift, and go to state 31
    KEYWORD_TRUE   shift, and go to state 32
    KEYWORD_NOT    shift, and go to state 33
    INTEGER        shift, and go to state 35
    FLOAT          shift, and go to state 36
    '-'            shift, and go to state 37
    '|'            shift, and go to state 38
    '('            shift, and go to state 39

    expression          go to state 40
    number              go to state 41
    logical_expression  go to state 135
    function_call       go to state 43


state 98

   65 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block
   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 84
    KEYWORD_OR   shift, and go to state 85
    COLON        shift, and go to state 136


state 99

   57 elif_else: elif_stmts else_statement .

    $default  reduce using rule 57 (elif_else)


state 100

   61 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 61 (elif_stmts)


state 101

   51 args: IDENTIFIER . COMMA
   52     | IDENTIFIER .
   79 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 67
    COMMA           shift, and go to state 128

    $default  reduce using rule 52 (args)


state 102

   80 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 137


state 103

   49 args: args . IDENTIFIER COMMA
   50     | args . IDENTIFIER
   79 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES

    IDENTIFIER       shift, and go to state 129
    RIGHT_PARENTHES  shift, and go to state 138


state 104

   81 function_call: IDENTIFIER LEFT_PARENTHES function_call . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 139


state 105

   63 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 140


state 106

   27 expression: '(' expression ')' .

    $default  reduce using rule 27 (expression)


state 107

   21 expression: expression . ADD expression
   21           | expression ADD expression .
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 21 (expression)]
    MINUS     [reduce using rule 21 (expression)]
    MULTIPLY  [reduce using rule 21 (expression)]
    DIVIDE    [reduce using rule 21 (expression)]
    POWER     [reduce using rule 21 (expression)]
    $default  reduce using rule 21 (expression)


state 108

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   22           | expression MINUS expression .
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 22 (expression)]
    MINUS     [reduce using rule 22 (expression)]
    MULTIPLY  [reduce using rule 22 (expression)]
    DIVIDE    [reduce using rule 22 (expression)]
    POWER     [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)


state 109

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   23           | expression MULTIPLY expression .
   24           | expression . DIVIDE expression
   25           | expression . POWER expression

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 23 (expression)]
    MINUS     [reduce using rule 23 (expression)]
    MULTIPLY  [reduce using rule 23 (expression)]
    DIVIDE    [reduce using rule 23 (expression)]
    POWER     [reduce using rule 23 (expression)]
    $default  reduce using rule 23 (expression)


state 110

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   24           | expression DIVIDE expression .
   25           | expression . POWER expression

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 24 (expression)]
    MINUS     [reduce using rule 24 (expression)]
    MULTIPLY  [reduce using rule 24 (expression)]
    DIVIDE    [reduce using rule 24 (expression)]
    POWER     [reduce using rule 24 (expression)]
    $default  reduce using rule 24 (expression)


state 111

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   25           | expression POWER expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    ADD       [reduce using rule 25 (expression)]
    MINUS     [reduce using rule 25 (expression)]
    MULTIPLY  [reduce using rule 25 (expression)]
    DIVIDE    [reduce using rule 25 (expression)]
    POWER     [reduce using rule 25 (expression)]
    $default  reduce using rule 25 (expression)


state 112

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   72 logical_expression: expression EQUAL expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 72 (logical_expression)


state 113

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   73 logical_expression: expression NOTEQUAL expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 73 (logical_expression)


state 114

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   69 logical_expression: expression GREATERTHAN expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 69 (logical_expression)


state 115

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   68 logical_expression: expression GREATEROREQUAL expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 68 (logical_expression)


state 116

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   71 logical_expression: expression LESSTHAN expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 71 (logical_expression)


state 117

   21 expression: expression . ADD expression
   22           | expression . MINUS expression
   23           | expression . MULTIPLY expression
   24           | expression . DIVIDE expression
   25           | expression . POWER expression
   70 logical_expression: expression LESSOREQUAL expression .

    ADD       shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    POWER     shift, and go to state 77

    $default  reduce using rule 70 (logical_expression)


state 118

   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   74                   | logical_expression KEYWORD_AND logical_expression .
   75                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 84
    KEYWORD_OR   shift, and go to state 85

    KEYWORD_AND  [reduce using rule 74 (logical_expression)]
    KEYWORD_OR   [reduce using rule 74 (logical_expression)]
    $default     reduce using rule 74 (logical_expression)


state 119

   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression
   75                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 84
    KEYWORD_OR   shift, and go to state 85

    KEYWORD_AND  [reduce using rule 75 (logical_expression)]
    KEYWORD_OR   [reduce using rule 75 (logical_expression)]
    $default     reduce using rule 75 (logical_expression)


state 120

   47 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 141


state 121

   62 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 62 (if_statement)


state 122

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   49 args: args . IDENTIFIER COMMA
   50     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 129
    RIGHT_PARENTHES  shift, and go to state 142


state 123

   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 143


state 124

   53 member_expression: IDENTIFIER .
   79 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 67

    $default  reduce using rule 53 (member_expression)


state 125

   83 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 144


state 126

   54 member_expression: member_expression . IDENTIFIER
   85 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
   86              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block
   87              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 145
    COLON       shift, and go to state 146

    function_call  go to state 147


state 127

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 148


state 128

   51 args: IDENTIFIER COMMA .

    $default  reduce using rule 51 (args)


state 129

   49 args: args IDENTIFIER . COMMA
   50     | args IDENTIFIER .

    COMMA  shift, and go to state 149

    $default  reduce using rule 50 (args)


state 130

   84 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 150


state 131

   46 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
   49 args: args . IDENTIFIER COMMA
   50     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 129
    RIGHT_PARENTHES  shift, and go to state 151


state 132

   89 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 152


state 133

   88 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 88 (while_statement)


state 134

   64 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 64 (else_statement)


state 135

   66 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block
   74 logical_expression: logical_expression . KEYWORD_AND logical_expression
   75                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND      shift, and go to state 84
    KEYWORD_OR       shift, and go to state 85
    RIGHT_PARENTHES  shift, and go to state 153


state 136

   65 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 154


state 137

   80 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 80 (function_call)


state 138

   79 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 79 (function_call)


state 139

   81 function_call: IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES .

    $default  reduce using rule 81 (function_call)


state 140

   63 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 155


state 141

   47 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    KEYWORD_YIELD     shift, and go to state 11

    statements                 go to state 156
    statement                  go to state 15
    simple_statement           go to state 16
    compound_statement         go to state 17
    assignment                 go to state 18
    return_statement           go to state 19
    yield_statement            go to state 20
    class                      go to state 21
    class_with_inheritance     go to state 22
    class_without_inheritance  go to state 23
    function                   go to state 24
    member_expression          go to state 25
    conditional_statement      go to state 26
    if_statement               go to state 27
    for_statement              go to state 28
    while_statement            go to state 29


state 142

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON NEWLINE INDENT class_block DEDENT

    COLON  shift, and go to state 157


state 143

   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 41 (class_block)

    class_block  go to state 158


state 144

   83 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 159


state 145

   54 member_expression: member_expression IDENTIFIER .
   79 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 67

    $default  reduce using rule 54 (member_expression)


state 146

   85 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 160


state 147

   86 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block
   87              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . '.' IDENTIFIER COLON block

    COLON  shift, and go to state 161
    '.'    shift, and go to state 162


state 148

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 163


state 149

   49 args: args IDENTIFIER COMMA .

    $default  reduce using rule 49 (args)


state 150

   84 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 164

    function_call  go to state 165


state 151

   46 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 166


state 152

   89 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 167


state 153

   66 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 168


state 154

   65 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 65 (elif_statement)


state 155

   63 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 63 (if_statement)


state 156

    4 statements: statements . statement
    6           | statements . NEWLINE
   47 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    KEYWORD_YIELD     shift, and go to state 11
    DEDENT            shift, and go to state 169
    NEWLINE           shift, and go to state 170

    statement                  go to state 171
    simple_statement           go to state 16
    compound_statement         go to state 17
    assignment                 go to state 18
    return_statement           go to state 19
    yield_statement            go to state 20
    class                      go to state 21
    class_with_inheritance     go to state 22
    class_without_inheritance  go to state 23
    function                   go to state 24
    member_expression          go to state 25
    conditional_statement      go to state 26
    if_statement               go to state 27
    for_statement              go to state 28
    while_statement            go to state 29


state 157

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 172


state 158

   42 class_block: class_block . assignment
   43            | class_block . function
   44            | class_block . NEWLINE
   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 9
    DEDENT       shift, and go to state 173
    NEWLINE      shift, and go to state 174

    assignment         go to state 175
    function           go to state 176
    member_expression  go to state 25


state 159

   83 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 83 (for_statement)


state 160

   85 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 85 (for_statement)


state 161

   86 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 177


state 162

   87 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 178


state 163

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 82 (for_statement)


state 164

   79 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   80              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
   81              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 67


state 165

   84 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 179


state 166

   46 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 180


state 167

   89 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 89 (while_statement)


state 168

   66 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 181


state 169

   47 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 47 (block)


state 170

    6 statements: statements NEWLINE .

    $default  reduce using rule 6 (statements)


state 171

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 172

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 182


state 173

   45 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 45 (class_without_inheritance)


state 174

   44 class_block: class_block NEWLINE .

    $default  reduce using rule 44 (class_block)


state 175

   42 class_block: class_block assignment .

    $default  reduce using rule 42 (class_block)


state 176

   43 class_block: class_block function .

    $default  reduce using rule 43 (class_block)


state 177

   86 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 86 (for_statement)


state 178

   87 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER . COLON block

    COLON  shift, and go to state 183


state 179

   84 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 184


state 180

   46 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 46 (function)


state 181

   66 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 66 (elif_statement)


state 182

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 41 (class_block)

    class_block  go to state 185


state 183

   87 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 120

    block  go to state 186


state 184

   84 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 84 (for_statement)


state 185

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block . DEDENT
   42 class_block: class_block . assignment
   43            | class_block . function
   44            | class_block . NEWLINE

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 9
    DEDENT       shift, and go to state 187
    NEWLINE      shift, and go to state 174

    assignment         go to state 175
    function           go to state 176
    member_expression  go to state 25


state 186

   87 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block .

    $default  reduce using rule 87 (for_statement)


state 187

   40 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 40 (class_with_inheritance)
