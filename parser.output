Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALSTRING
   LITERALCHAR
   KEYWORD_AWAIT
   KEYWORD_IMPORT
   KEYWORD_NONE
   KEYWORD_EXCEPT
   KEYWORD_RAISE
   KEYWORD_FINALLY
   KEYWORD_IS
   KEYWORD_LAMBDA
   KEYWORD_TRY
   KEYWORD_AS
   KEYWORD_FROM
   KEYWORD_NONLOCAL
   KEYWORD_ASSERT
   KEYWORD_DEL
   KEYWORD_GLOBAL
   KEYWORD_WITH
   KEYWORD_ASYNC
   KEYWORD_YIELD
   OPERATORS
   COMMENT
   POWER
   MODULO
   ASSIGNADD
   ASSIGNMINUS
   ASSIGNMULTIPLY
   ASSIGNDIVIDE
   ASSIGNMODULO
   ASSIGNFLOORDIVISION
   ASSIGNEXPONINTIATION
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   ASSIGNRIGHTSHIFT
   ASSIGNLEFTSHIFT
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   INCREMENT
   DECREMENT
   '+'
   '*'
   '/'


State 45 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 52 conflicts: 1 reduce/reduce
State 54 conflicts: 12 reduce/reduce
State 63 conflicts: 2 shift/reduce
State 65 conflicts: 4 shift/reduce
State 66 conflicts: 4 shift/reduce
State 81 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 97 conflicts: 4 shift/reduce
State 98 conflicts: 4 shift/reduce
State 99 conflicts: 4 shift/reduce
State 100 conflicts: 4 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 2 shift/reduce
State 130 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | statements prog

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement

    9 simple_statement: assignment
   10                 | return_statement
   11                 | KEYWORD_PASS
   12                 | KEYWORD_BREAK
   13                 | KEYWORD_CONTINUE

   14 compound_statement: function
   15                   | conditional_statement
   16                   | class
   17                   | for_statement
   18                   | while_statement

   19 assignment: member_expression ASSIGN expression

   20 expression: expression ADD expression
   21           | expression MINUS expression
   22           | expression MULTIPLY expression
   23           | expression DIVIDE expression
   24           | '|' expression
   25           | '(' expression ')'
   26           | '-' expression
   27           | INTEGER
   28           | FLOAT

   29 number: INTEGER
   30       | FLOAT

   31 return_statement: KEYWORD_RETURN number
   32                 | KEYWORD_RETURN member_expression

   33 class: class_with_inheritance
   34      | class_without_inheritance

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

   36 class_block: /* empty */
   37            | class_block assignment
   38            | class_block function
   39            | class_block NEWLINE

   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

   41 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

   42 block: NEWLINE INDENT statements DEDENT

   43 args: /* empty */
   44     | args IDENTIFIER COMMA
   45     | args IDENTIFIER
   46     | IDENTIFIER COMMA
   47     | IDENTIFIER

   48 member_expression: IDENTIFIER
   49                  | member_expression IDENTIFIER

   50 conditional_statement: if_statement elif_else

   51 elif_else: /* empty */
   52          | elif_stmts else_statement
   53          | elif_stmts
   54          | else_statement

   55 elif_stmts: elif_statement
   56           | elif_stmts elif_statement

   57 if_statement: KEYWORD_IF logical_expression COLON block
   58             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

   59 else_statement: KEYWORD_ELSE COLON block

   60 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
   61               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

   62 expression_or_identifier: expression
   63                         | IDENTIFIER

   64 logical_expression: expression_or_identifier
   65                   | expression_or_identifier GREATEROREQUAL expression_or_identifier
   66                   | expression_or_identifier GREATERTHAN expression_or_identifier
   67                   | expression_or_identifier LESSOREQUAL expression_or_identifier
   68                   | expression_or_identifier LESSTHAN expression_or_identifier
   69                   | expression_or_identifier EQUAL expression_or_identifier
   70                   | expression_or_identifier NOTEQUAL expression_or_identifier
   71                   | logical_expression KEYWORD_AND logical_expression
   72                   | logical_expression KEYWORD_OR logical_expression
   73                   | KEYWORD_NOT logical_expression
   74                   | KEYWORD_TRUE
   75                   | KEYWORD_FALSE

   76 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
   77              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES

   78 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
   79              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
   80              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
   81              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
   82              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block

   83 while_statement: KEYWORD_WHILE logical_expression COLON block
   84                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 25
')' (41) 25
'*' (42)
'+' (43)
'-' (45) 26
'.' (46)
'/' (47)
'|' (124) 24
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 35 40 41 44 45 46 47 48 49 63 76 77 78 79 81 82
LIST (262) 79
LITERALSTRING (263)
LITERALCHAR (264)
KEYWORD_FALSE (265) 75
KEYWORD_TRUE (266) 74
KEYWORD_AWAIT (267)
KEYWORD_IF (268) 57 58
KEYWORD_ELSE (269) 59
KEYWORD_ELSE_IF (270) 60 61
KEYWORD_IMPORT (271)
KEYWORD_PASS (272) 11
KEYWORD_NONE (273)
KEYWORD_BREAK (274) 12
KEYWORD_EXCEPT (275)
KEYWORD_IN (276) 78 79 80 81 82
KEYWORD_RAISE (277)
KEYWORD_CLASS (278) 35 40
KEYWORD_FINALLY (279)
KEYWORD_IS (280)
KEYWORD_RETURN (281) 31 32
KEYWORD_AND (282) 71
KEYWORD_CONTINUE (283) 13
KEYWORD_FOR (284) 78 79 80 81 82
KEYWORD_LAMBDA (285)
KEYWORD_TRY (286)
KEYWORD_AS (287)
KEYWORD_DEF (288) 41
KEYWORD_FROM (289)
KEYWORD_NONLOCAL (290)
KEYWORD_WHILE (291) 83 84
KEYWORD_ASSERT (292)
KEYWORD_DEL (293)
KEYWORD_GLOBAL (294)
KEYWORD_NOT (295) 73
KEYWORD_WITH (296)
KEYWORD_ASYNC (297)
KEYWORD_OR (298) 72
KEYWORD_YIELD (299)
OPERATORS (300)
COMMENT (301)
ADD (302) 20
MINUS (303) 21
MULTIPLY (304) 22
DIVIDE (305) 23
POWER (306)
MODULO (307)
ASSIGN (308) 19
ASSIGNADD (309)
ASSIGNMINUS (310)
ASSIGNMULTIPLY (311)
ASSIGNDIVIDE (312)
ASSIGNMODULO (313)
ASSIGNFLOORDIVISION (314)
ASSIGNEXPONINTIATION (315)
ASSIGNBITWISEAND (316)
ASSIGNBITWISEOR (317)
ASSIGNBITWISEXOR (318)
ASSIGNRIGHTSHIFT (319)
ASSIGNLEFTSHIFT (320)
EQUAL (321) 69
NOT (322)
NOTEQUAL (323) 70
GREATERTHAN (324) 66
GREATEROREQUAL (325) 65
LESSTHAN (326) 68
LESSOREQUAL (327) 67
LEFT_PARENTHES (328) 35 41 58 61 76 77 80 84
RIGHT_PARENTHES (329) 35 41 58 61 76 77 80 84
LEFT_BRACES (330)
RIGHT_BRACES (331)
LEFT_BRACKETS (332)
RIGHT_BRACKETS (333)
COLON (334) 35 40 41 57 58 59 60 61 78 79 80 81 82 83 84
COMMA (335) 44 46
SEMICOLON (336)
INCREMENT (337)
DECREMENT (338)
INTEGER (339) 27 29
FLOAT (340) 28 30
DEDENT (341) 35 40 42
INDENT (342) 35 40 42
NEWLINE (343) 2 6 35 39 40 42
UMINUS (344)


Nonterminals, with rules where they appear

$accept (98)
    on left: 0
prog (99)
    on left: 1 2 3, on right: 0 3
statements (100)
    on left: 4 5 6, on right: 3 4 6 42
statement (101)
    on left: 7 8, on right: 4 5
simple_statement (102)
    on left: 9 10 11 12 13, on right: 8
compound_statement (103)
    on left: 14 15 16 17 18, on right: 7
assignment (104)
    on left: 19, on right: 9 37
expression (105)
    on left: 20 21 22 23 24 25 26 27 28, on right: 19 20 21 22 23 24
    25 26 62
number (106)
    on left: 29 30, on right: 31 77
return_statement (107)
    on left: 31 32, on right: 10
class (108)
    on left: 33 34, on right: 16
class_with_inheritance (109)
    on left: 35, on right: 33
class_block (110)
    on left: 36 37 38 39, on right: 35 37 38 39 40
class_without_inheritance (111)
    on left: 40, on right: 34
function (112)
    on left: 41, on right: 14 38
block (113)
    on left: 42, on right: 41 57 58 59 60 61 78 79 80 81 82 83 84
args (114)
    on left: 43 44 45 46 47, on right: 35 41 44 45 76 80
member_expression (115)
    on left: 48 49, on right: 19 32 49 81 82
conditional_statement (116)
    on left: 50, on right: 15
elif_else (117)
    on left: 51 52 53 54, on right: 50
elif_stmts (118)
    on left: 55 56, on right: 52 53 56
if_statement (119)
    on left: 57 58, on right: 50
else_statement (120)
    on left: 59, on right: 52 54
elif_statement (121)
    on left: 60 61, on right: 55 56
expression_or_identifier (122)
    on left: 62 63, on right: 64 65 66 67 68 69 70
logical_expression (123)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75, on right: 57 58 60
    61 71 72 73 83 84
function_call (124)
    on left: 76 77, on right: 78 80 82
for_statement (125)
    on left: 78 79 80 81 82, on right: 17
while_statement (126)
    on left: 83 84, on right: 18


state 0

    0 $accept: . prog $end

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    NEWLINE           shift, and go to state 11

    $default  reduce using rule 1 (prog)

    prog                       go to state 12
    statements                 go to state 13
    statement                  go to state 14
    simple_statement           go to state 15
    compound_statement         go to state 16
    assignment                 go to state 17
    return_statement           go to state 18
    class                      go to state 19
    class_with_inheritance     go to state 20
    class_without_inheritance  go to state 21
    function                   go to state 22
    member_expression          go to state 23
    conditional_statement      go to state 24
    if_statement               go to state 25
    for_statement              go to state 26
    while_statement            go to state 27


state 1

   48 member_expression: IDENTIFIER .

    $default  reduce using rule 48 (member_expression)


state 2

   57 if_statement: KEYWORD_IF . logical_expression COLON block
   58             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 28
    KEYWORD_FALSE   shift, and go to state 29
    KEYWORD_TRUE    shift, and go to state 30
    KEYWORD_NOT     shift, and go to state 31
    LEFT_PARENTHES  shift, and go to state 32
    INTEGER         shift, and go to state 33
    FLOAT           shift, and go to state 34
    '-'             shift, and go to state 35
    '|'             shift, and go to state 36
    '('             shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 40


state 3

   11 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 11 (simple_statement)


state 4

   12 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 12 (simple_statement)


state 5

   35 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   40 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 41


state 6

   31 return_statement: KEYWORD_RETURN . number
   32                 | KEYWORD_RETURN . member_expression

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 42
    FLOAT       shift, and go to state 43

    number             go to state 44
    member_expression  go to state 45


state 7

   13 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 13 (simple_statement)


state 8

   78 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
   79              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
   80              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
   81              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
   82              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block

    IDENTIFIER      shift, and go to state 46
    LEFT_PARENTHES  shift, and go to state 47


state 9

   41 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 48


state 10

   83 while_statement: KEYWORD_WHILE . logical_expression COLON block
   84                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 28
    KEYWORD_FALSE   shift, and go to state 29
    KEYWORD_TRUE    shift, and go to state 30
    KEYWORD_NOT     shift, and go to state 31
    LEFT_PARENTHES  shift, and go to state 49
    INTEGER         shift, and go to state 33
    FLOAT           shift, and go to state 34
    '-'             shift, and go to state 35
    '|'             shift, and go to state 36
    '('             shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 50


state 11

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 12

    0 $accept: prog . $end

    $end  shift, and go to state 51


state 13

    3 prog: statements . prog
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    NEWLINE           shift, and go to state 52

    $default  reduce using rule 1 (prog)

    prog                       go to state 53
    statements                 go to state 13
    statement                  go to state 54
    simple_statement           go to state 15
    compound_statement         go to state 16
    assignment                 go to state 17
    return_statement           go to state 18
    class                      go to state 19
    class_with_inheritance     go to state 20
    class_without_inheritance  go to state 21
    function                   go to state 22
    member_expression          go to state 23
    conditional_statement      go to state 24
    if_statement               go to state 25
    for_statement              go to state 26
    while_statement            go to state 27


state 14

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 15

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 16

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 17

    9 simple_statement: assignment .

    $default  reduce using rule 9 (simple_statement)


state 18

   10 simple_statement: return_statement .

    $default  reduce using rule 10 (simple_statement)


state 19

   16 compound_statement: class .

    $default  reduce using rule 16 (compound_statement)


state 20

   33 class: class_with_inheritance .

    $default  reduce using rule 33 (class)


state 21

   34 class: class_without_inheritance .

    $default  reduce using rule 34 (class)


state 22

   14 compound_statement: function .

    $default  reduce using rule 14 (compound_statement)


state 23

   19 assignment: member_expression . ASSIGN expression
   49 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 55
    ASSIGN      shift, and go to state 56


state 24

   15 compound_statement: conditional_statement .

    $default  reduce using rule 15 (compound_statement)


state 25

   50 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 57
    KEYWORD_ELSE_IF  shift, and go to state 58

    $default  reduce using rule 51 (elif_else)

    elif_else       go to state 59
    elif_stmts      go to state 60
    else_statement  go to state 61
    elif_statement  go to state 62


state 26

   17 compound_statement: for_statement .

    $default  reduce using rule 17 (compound_statement)


state 27

   18 compound_statement: while_statement .

    $default  reduce using rule 18 (compound_statement)


state 28

   63 expression_or_identifier: IDENTIFIER .

    $default  reduce using rule 63 (expression_or_identifier)


state 29

   75 logical_expression: KEYWORD_FALSE .

    $default  reduce using rule 75 (logical_expression)


state 30

   74 logical_expression: KEYWORD_TRUE .

    $default  reduce using rule 74 (logical_expression)


state 31

   73 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER     shift, and go to state 28
    KEYWORD_FALSE  shift, and go to state 29
    KEYWORD_TRUE   shift, and go to state 30
    KEYWORD_NOT    shift, and go to state 31
    INTEGER        shift, and go to state 33
    FLOAT          shift, and go to state 34
    '-'            shift, and go to state 35
    '|'            shift, and go to state 36
    '('            shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 63


state 32

   58 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 28
    KEYWORD_FALSE  shift, and go to state 29
    KEYWORD_TRUE   shift, and go to state 30
    KEYWORD_NOT    shift, and go to state 31
    INTEGER        shift, and go to state 33
    FLOAT          shift, and go to state 34
    '-'            shift, and go to state 35
    '|'            shift, and go to state 36
    '('            shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 64


state 33

   27 expression: INTEGER .

    $default  reduce using rule 27 (expression)


state 34

   28 expression: FLOAT .

    $default  reduce using rule 28 (expression)


state 35

   26 expression: '-' . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 65


state 36

   24 expression: '|' . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 66


state 37

   25 expression: '(' . expression ')'

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 67


state 38

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   62 expression_or_identifier: expression .

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    $default  reduce using rule 62 (expression_or_identifier)


state 39

   64 logical_expression: expression_or_identifier .
   65                   | expression_or_identifier . GREATEROREQUAL expression_or_identifier
   66                   | expression_or_identifier . GREATERTHAN expression_or_identifier
   67                   | expression_or_identifier . LESSOREQUAL expression_or_identifier
   68                   | expression_or_identifier . LESSTHAN expression_or_identifier
   69                   | expression_or_identifier . EQUAL expression_or_identifier
   70                   | expression_or_identifier . NOTEQUAL expression_or_identifier

    EQUAL           shift, and go to state 72
    NOTEQUAL        shift, and go to state 73
    GREATERTHAN     shift, and go to state 74
    GREATEROREQUAL  shift, and go to state 75
    LESSTHAN        shift, and go to state 76
    LESSOREQUAL     shift, and go to state 77

    $default  reduce using rule 64 (logical_expression)


state 40

   57 if_statement: KEYWORD_IF logical_expression . COLON block
   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 78
    KEYWORD_OR   shift, and go to state 79
    COLON        shift, and go to state 80


state 41

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 81
    COLON           shift, and go to state 82


state 42

   29 number: INTEGER .

    $default  reduce using rule 29 (number)


state 43

   30 number: FLOAT .

    $default  reduce using rule 30 (number)


state 44

   31 return_statement: KEYWORD_RETURN number .

    $default  reduce using rule 31 (return_statement)


state 45

   32 return_statement: KEYWORD_RETURN member_expression .
   49 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 55

    IDENTIFIER  [reduce using rule 32 (return_statement)]
    $default    reduce using rule 32 (return_statement)


state 46

   78 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
   79              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
   81              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
   82              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block

    KEYWORD_IN  shift, and go to state 83


state 47

   80 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER  shift, and go to state 84

    IDENTIFIER  [reduce using rule 43 (args)]
    $default    reduce using rule 43 (args)

    args  go to state 85


state 48

   41 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 86


state 49

   84 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 28
    KEYWORD_FALSE  shift, and go to state 29
    KEYWORD_TRUE   shift, and go to state 30
    KEYWORD_NOT    shift, and go to state 31
    INTEGER        shift, and go to state 33
    FLOAT          shift, and go to state 34
    '-'            shift, and go to state 35
    '|'            shift, and go to state 36
    '('            shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 87


state 50

   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression
   83 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 78
    KEYWORD_OR   shift, and go to state 79
    COLON        shift, and go to state 88


state 51

    0 $accept: prog $end .

    $default  accept


state 52

    2 prog: NEWLINE .
    6 statements: statements NEWLINE .

    $end      reduce using rule 2 (prog)
    $end      [reduce using rule 6 (statements)]
    $default  reduce using rule 6 (statements)


state 53

    3 prog: statements prog .

    $default  reduce using rule 3 (prog)


state 54

    4 statements: statements statement .
    5           | statement .

    $end              reduce using rule 4 (statements)
    $end              [reduce using rule 5 (statements)]
    IDENTIFIER        reduce using rule 4 (statements)
    IDENTIFIER        [reduce using rule 5 (statements)]
    KEYWORD_IF        reduce using rule 4 (statements)
    KEYWORD_IF        [reduce using rule 5 (statements)]
    KEYWORD_PASS      reduce using rule 4 (statements)
    KEYWORD_PASS      [reduce using rule 5 (statements)]
    KEYWORD_BREAK     reduce using rule 4 (statements)
    KEYWORD_BREAK     [reduce using rule 5 (statements)]
    KEYWORD_CLASS     reduce using rule 4 (statements)
    KEYWORD_CLASS     [reduce using rule 5 (statements)]
    KEYWORD_RETURN    reduce using rule 4 (statements)
    KEYWORD_RETURN    [reduce using rule 5 (statements)]
    KEYWORD_CONTINUE  reduce using rule 4 (statements)
    KEYWORD_CONTINUE  [reduce using rule 5 (statements)]
    KEYWORD_FOR       reduce using rule 4 (statements)
    KEYWORD_FOR       [reduce using rule 5 (statements)]
    KEYWORD_DEF       reduce using rule 4 (statements)
    KEYWORD_DEF       [reduce using rule 5 (statements)]
    KEYWORD_WHILE     reduce using rule 4 (statements)
    KEYWORD_WHILE     [reduce using rule 5 (statements)]
    NEWLINE           reduce using rule 4 (statements)
    NEWLINE           [reduce using rule 5 (statements)]
    $default          reduce using rule 4 (statements)


state 55

   49 member_expression: member_expression IDENTIFIER .

    $default  reduce using rule 49 (member_expression)


state 56

   19 assignment: member_expression ASSIGN . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 89


state 57

   59 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 90


state 58

   60 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
   61               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 28
    KEYWORD_FALSE   shift, and go to state 29
    KEYWORD_TRUE    shift, and go to state 30
    KEYWORD_NOT     shift, and go to state 31
    LEFT_PARENTHES  shift, and go to state 91
    INTEGER         shift, and go to state 33
    FLOAT           shift, and go to state 34
    '-'             shift, and go to state 35
    '|'             shift, and go to state 36
    '('             shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 92


state 59

   50 conditional_statement: if_statement elif_else .

    $default  reduce using rule 50 (conditional_statement)


state 60

   52 elif_else: elif_stmts . else_statement
   53          | elif_stmts .
   56 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 57
    KEYWORD_ELSE_IF  shift, and go to state 58

    $default  reduce using rule 53 (elif_else)

    else_statement  go to state 93
    elif_statement  go to state 94


state 61

   54 elif_else: else_statement .

    $default  reduce using rule 54 (elif_else)


state 62

   55 elif_stmts: elif_statement .

    $default  reduce using rule 55 (elif_stmts)


state 63

   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression
   73                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 78
    KEYWORD_OR   shift, and go to state 79

    KEYWORD_AND  [reduce using rule 73 (logical_expression)]
    KEYWORD_OR   [reduce using rule 73 (logical_expression)]
    $default     reduce using rule 73 (logical_expression)


state 64

   58 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block
   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND      shift, and go to state 78
    KEYWORD_OR       shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 95


state 65

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   26           | '-' expression .

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    ADD       [reduce using rule 26 (expression)]
    MINUS     [reduce using rule 26 (expression)]
    MULTIPLY  [reduce using rule 26 (expression)]
    DIVIDE    [reduce using rule 26 (expression)]
    $default  reduce using rule 26 (expression)


state 66

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   24           | '|' expression .

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    ADD       [reduce using rule 24 (expression)]
    MINUS     [reduce using rule 24 (expression)]
    MULTIPLY  [reduce using rule 24 (expression)]
    DIVIDE    [reduce using rule 24 (expression)]
    $default  reduce using rule 24 (expression)


state 67

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   25           | '(' expression . ')'

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71
    ')'       shift, and go to state 96


state 68

   20 expression: expression ADD . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 97


state 69

   21 expression: expression MINUS . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 98


state 70

   22 expression: expression MULTIPLY . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 99


state 71

   23 expression: expression DIVIDE . expression

    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    '-'      shift, and go to state 35
    '|'      shift, and go to state 36
    '('      shift, and go to state 37

    expression  go to state 100


state 72

   69 logical_expression: expression_or_identifier EQUAL . expression_or_identifier

    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 33
    FLOAT       shift, and go to state 34
    '-'         shift, and go to state 35
    '|'         shift, and go to state 36
    '('         shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 101


state 73

   70 logical_expression: expression_or_identifier NOTEQUAL . expression_or_identifier

    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 33
    FLOAT       shift, and go to state 34
    '-'         shift, and go to state 35
    '|'         shift, and go to state 36
    '('         shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 102


state 74

   66 logical_expression: expression_or_identifier GREATERTHAN . expression_or_identifier

    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 33
    FLOAT       shift, and go to state 34
    '-'         shift, and go to state 35
    '|'         shift, and go to state 36
    '('         shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 103


state 75

   65 logical_expression: expression_or_identifier GREATEROREQUAL . expression_or_identifier

    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 33
    FLOAT       shift, and go to state 34
    '-'         shift, and go to state 35
    '|'         shift, and go to state 36
    '('         shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 104


state 76

   68 logical_expression: expression_or_identifier LESSTHAN . expression_or_identifier

    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 33
    FLOAT       shift, and go to state 34
    '-'         shift, and go to state 35
    '|'         shift, and go to state 36
    '('         shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 105


state 77

   67 logical_expression: expression_or_identifier LESSOREQUAL . expression_or_identifier

    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 33
    FLOAT       shift, and go to state 34
    '-'         shift, and go to state 35
    '|'         shift, and go to state 36
    '('         shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 106


state 78

   71 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER     shift, and go to state 28
    KEYWORD_FALSE  shift, and go to state 29
    KEYWORD_TRUE   shift, and go to state 30
    KEYWORD_NOT    shift, and go to state 31
    INTEGER        shift, and go to state 33
    FLOAT          shift, and go to state 34
    '-'            shift, and go to state 35
    '|'            shift, and go to state 36
    '('            shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 107


state 79

   72 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER     shift, and go to state 28
    KEYWORD_FALSE  shift, and go to state 29
    KEYWORD_TRUE   shift, and go to state 30
    KEYWORD_NOT    shift, and go to state 31
    INTEGER        shift, and go to state 33
    FLOAT          shift, and go to state 34
    '-'            shift, and go to state 35
    '|'            shift, and go to state 36
    '('            shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 108


state 80

   57 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 110


state 81

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 84

    IDENTIFIER  [reduce using rule 43 (args)]
    $default    reduce using rule 43 (args)

    args  go to state 111


state 82

   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 112


state 83

   78 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
   79              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
   81              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
   82              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block

    IDENTIFIER  shift, and go to state 113
    LIST        shift, and go to state 114

    member_expression  go to state 115
    function_call      go to state 116


state 84

   46 args: IDENTIFIER . COMMA
   47     | IDENTIFIER .

    COMMA  shift, and go to state 117

    $default  reduce using rule 47 (args)


state 85

   44 args: args . IDENTIFIER COMMA
   45     | args . IDENTIFIER
   80 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 118
    RIGHT_PARENTHES  shift, and go to state 119


state 86

   41 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 84

    IDENTIFIER  [reduce using rule 43 (args)]
    $default    reduce using rule 43 (args)

    args  go to state 120


state 87

   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression
   84 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 78
    KEYWORD_OR       shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 121


state 88

   83 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 122


state 89

   19 assignment: member_expression ASSIGN expression .
   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    $default  reduce using rule 19 (assignment)


state 90

   59 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 123


state 91

   61 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 28
    KEYWORD_FALSE  shift, and go to state 29
    KEYWORD_TRUE   shift, and go to state 30
    KEYWORD_NOT    shift, and go to state 31
    INTEGER        shift, and go to state 33
    FLOAT          shift, and go to state 34
    '-'            shift, and go to state 35
    '|'            shift, and go to state 36
    '('            shift, and go to state 37

    expression                go to state 38
    expression_or_identifier  go to state 39
    logical_expression        go to state 124


state 92

   60 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block
   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 78
    KEYWORD_OR   shift, and go to state 79
    COLON        shift, and go to state 125


state 93

   52 elif_else: elif_stmts else_statement .

    $default  reduce using rule 52 (elif_else)


state 94

   56 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 56 (elif_stmts)


state 95

   58 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 126


state 96

   25 expression: '(' expression ')' .

    $default  reduce using rule 25 (expression)


state 97

   20 expression: expression . ADD expression
   20           | expression ADD expression .
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    ADD       [reduce using rule 20 (expression)]
    MINUS     [reduce using rule 20 (expression)]
    MULTIPLY  [reduce using rule 20 (expression)]
    DIVIDE    [reduce using rule 20 (expression)]
    $default  reduce using rule 20 (expression)


state 98

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   21           | expression MINUS expression .
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    ADD       [reduce using rule 21 (expression)]
    MINUS     [reduce using rule 21 (expression)]
    MULTIPLY  [reduce using rule 21 (expression)]
    DIVIDE    [reduce using rule 21 (expression)]
    $default  reduce using rule 21 (expression)


state 99

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   22           | expression MULTIPLY expression .
   23           | expression . DIVIDE expression

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    ADD       [reduce using rule 22 (expression)]
    MINUS     [reduce using rule 22 (expression)]
    MULTIPLY  [reduce using rule 22 (expression)]
    DIVIDE    [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)


state 100

   20 expression: expression . ADD expression
   21           | expression . MINUS expression
   22           | expression . MULTIPLY expression
   23           | expression . DIVIDE expression
   23           | expression DIVIDE expression .

    ADD       shift, and go to state 68
    MINUS     shift, and go to state 69
    MULTIPLY  shift, and go to state 70
    DIVIDE    shift, and go to state 71

    ADD       [reduce using rule 23 (expression)]
    MINUS     [reduce using rule 23 (expression)]
    MULTIPLY  [reduce using rule 23 (expression)]
    DIVIDE    [reduce using rule 23 (expression)]
    $default  reduce using rule 23 (expression)


state 101

   69 logical_expression: expression_or_identifier EQUAL expression_or_identifier .

    $default  reduce using rule 69 (logical_expression)


state 102

   70 logical_expression: expression_or_identifier NOTEQUAL expression_or_identifier .

    $default  reduce using rule 70 (logical_expression)


state 103

   66 logical_expression: expression_or_identifier GREATERTHAN expression_or_identifier .

    $default  reduce using rule 66 (logical_expression)


state 104

   65 logical_expression: expression_or_identifier GREATEROREQUAL expression_or_identifier .

    $default  reduce using rule 65 (logical_expression)


state 105

   68 logical_expression: expression_or_identifier LESSTHAN expression_or_identifier .

    $default  reduce using rule 68 (logical_expression)


state 106

   67 logical_expression: expression_or_identifier LESSOREQUAL expression_or_identifier .

    $default  reduce using rule 67 (logical_expression)


state 107

   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   71                   | logical_expression KEYWORD_AND logical_expression .
   72                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 78
    KEYWORD_OR   shift, and go to state 79

    KEYWORD_AND  [reduce using rule 71 (logical_expression)]
    KEYWORD_OR   [reduce using rule 71 (logical_expression)]
    $default     reduce using rule 71 (logical_expression)


state 108

   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression
   72                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 78
    KEYWORD_OR   shift, and go to state 79

    KEYWORD_AND  [reduce using rule 72 (logical_expression)]
    KEYWORD_OR   [reduce using rule 72 (logical_expression)]
    $default     reduce using rule 72 (logical_expression)


state 109

   42 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 127


state 110

   57 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 57 (if_statement)


state 111

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   44 args: args . IDENTIFIER COMMA
   45     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 118
    RIGHT_PARENTHES  shift, and go to state 128


state 112

   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 129


state 113

   48 member_expression: IDENTIFIER .
   76 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   77              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 130

    $default  reduce using rule 48 (member_expression)


state 114

   79 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 131


state 115

   49 member_expression: member_expression . IDENTIFIER
   81 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
   82              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block

    IDENTIFIER  shift, and go to state 132
    COLON       shift, and go to state 133

    function_call  go to state 134


state 116

   78 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 135


state 117

   46 args: IDENTIFIER COMMA .

    $default  reduce using rule 46 (args)


state 118

   44 args: args IDENTIFIER . COMMA
   45     | args IDENTIFIER .

    COMMA  shift, and go to state 136

    $default  reduce using rule 45 (args)


state 119

   80 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 137


state 120

   41 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
   44 args: args . IDENTIFIER COMMA
   45     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 118
    RIGHT_PARENTHES  shift, and go to state 138


state 121

   84 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 139


state 122

   83 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 83 (while_statement)


state 123

   59 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 59 (else_statement)


state 124

   61 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block
   71 logical_expression: logical_expression . KEYWORD_AND logical_expression
   72                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND      shift, and go to state 78
    KEYWORD_OR       shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 140


state 125

   60 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 141


state 126

   58 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 142


state 127

   42 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10

    statements                 go to state 143
    statement                  go to state 14
    simple_statement           go to state 15
    compound_statement         go to state 16
    assignment                 go to state 17
    return_statement           go to state 18
    class                      go to state 19
    class_with_inheritance     go to state 20
    class_without_inheritance  go to state 21
    function                   go to state 22
    member_expression          go to state 23
    conditional_statement      go to state 24
    if_statement               go to state 25
    for_statement              go to state 26
    while_statement            go to state 27


state 128

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON NEWLINE INDENT class_block DEDENT

    COLON  shift, and go to state 144


state 129

   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 36 (class_block)

    class_block  go to state 145


state 130

   76 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
   77              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES

    IDENTIFIER  shift, and go to state 84
    INTEGER     shift, and go to state 42
    FLOAT       shift, and go to state 43

    IDENTIFIER  [reduce using rule 43 (args)]
    $default    reduce using rule 43 (args)

    number  go to state 146
    args    go to state 147


state 131

   79 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 148


state 132

   49 member_expression: member_expression IDENTIFIER .
   76 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   77              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 130

    $default  reduce using rule 49 (member_expression)


state 133

   81 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 149


state 134

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block

    COLON  shift, and go to state 150


state 135

   78 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 151


state 136

   44 args: args IDENTIFIER COMMA .

    $default  reduce using rule 44 (args)


state 137

   80 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 152

    function_call  go to state 153


state 138

   41 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 154


state 139

   84 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 155


state 140

   61 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 156


state 141

   60 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 60 (elif_statement)


state 142

   58 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 58 (if_statement)


state 143

    4 statements: statements . statement
    6           | statements . NEWLINE
   42 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_FOR       shift, and go to state 8
    KEYWORD_DEF       shift, and go to state 9
    KEYWORD_WHILE     shift, and go to state 10
    DEDENT            shift, and go to state 157
    NEWLINE           shift, and go to state 158

    statement                  go to state 159
    simple_statement           go to state 15
    compound_statement         go to state 16
    assignment                 go to state 17
    return_statement           go to state 18
    class                      go to state 19
    class_with_inheritance     go to state 20
    class_without_inheritance  go to state 21
    function                   go to state 22
    member_expression          go to state 23
    conditional_statement      go to state 24
    if_statement               go to state 25
    for_statement              go to state 26
    while_statement            go to state 27


state 144

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 160


state 145

   37 class_block: class_block . assignment
   38            | class_block . function
   39            | class_block . NEWLINE
   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 9
    DEDENT       shift, and go to state 161
    NEWLINE      shift, and go to state 162

    assignment         go to state 163
    function           go to state 164
    member_expression  go to state 23


state 146

   77 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 165


state 147

   44 args: args . IDENTIFIER COMMA
   45     | args . IDENTIFIER
   76 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES

    IDENTIFIER       shift, and go to state 118
    RIGHT_PARENTHES  shift, and go to state 166


state 148

   79 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 79 (for_statement)


state 149

   81 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 81 (for_statement)


state 150

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 167


state 151

   78 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 78 (for_statement)


state 152

   76 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
   77              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 130


state 153

   80 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 168


state 154

   41 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 169


state 155

   84 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 84 (while_statement)


state 156

   61 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 170


state 157

   42 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 42 (block)


state 158

    6 statements: statements NEWLINE .

    $default  reduce using rule 6 (statements)


state 159

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 160

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 171


state 161

   40 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 40 (class_without_inheritance)


state 162

   39 class_block: class_block NEWLINE .

    $default  reduce using rule 39 (class_block)


state 163

   37 class_block: class_block assignment .

    $default  reduce using rule 37 (class_block)


state 164

   38 class_block: class_block function .

    $default  reduce using rule 38 (class_block)


state 165

   77 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 77 (function_call)


state 166

   76 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 76 (function_call)


state 167

   82 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 82 (for_statement)


state 168

   80 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 109

    block  go to state 172


state 169

   41 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 41 (function)


state 170

   61 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 61 (elif_statement)


state 171

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 36 (class_block)

    class_block  go to state 173


state 172

   80 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 80 (for_statement)


state 173

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block . DEDENT
   37 class_block: class_block . assignment
   38            | class_block . function
   39            | class_block . NEWLINE

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 9
    DEDENT       shift, and go to state 174
    NEWLINE      shift, and go to state 162

    assignment         go to state 163
    function           go to state 164
    member_expression  go to state 23


state 174

   35 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 35 (class_with_inheritance)
