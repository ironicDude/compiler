Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALCHAR
   MULTILINESTRING
   KEYWORD_AWAIT
   KEYWORD_IS
   KEYWORD_LAMBDA
   KEYWORD_ASYNC
   OPERATORS
   ASSIGNADD
   ASSIGNMINUS
   ASSIGNMULTIPLY
   ASSIGNDIVIDE
   ASSIGNMODULO
   ASSIGNFLOORDIVISION
   ASSIGNEXPONINTIATION
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   ASSIGNRIGHTSHIFT
   ASSIGNLEFTSHIFT
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   '+'
   '*'
   '/'


State 0 conflicts: 1 shift/reduce
State 28 conflicts: 24 shift/reduce
State 32 conflicts: 2 shift/reduce
State 56 conflicts: 9 shift/reduce
State 73 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 80 conflicts: 26 reduce/reduce
State 83 conflicts: 9 shift/reduce
State 98 conflicts: 26 reduce/reduce
State 114 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 119 conflicts: 2 shift/reduce
State 121 conflicts: 6 shift/reduce
State 122 conflicts: 6 shift/reduce
State 143 conflicts: 9 shift/reduce
State 149 conflicts: 9 shift/reduce
State 179 conflicts: 6 shift/reduce
State 180 conflicts: 6 shift/reduce
State 181 conflicts: 6 shift/reduce
State 182 conflicts: 6 shift/reduce
State 183 conflicts: 6 shift/reduce
State 184 conflicts: 6 shift/reduce
State 191 conflicts: 2 shift/reduce
State 192 conflicts: 2 shift/reduce
State 229 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | prog statements

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement
    9          | NEWLINE
   10          | COMMENT
   11          | MULTILINECOMMENT

   12 simple_statement: assignment
   13                 | return_statement
   14                 | yield_statement
   15                 | assert_statement
   16                 | raise_statement
   17                 | global_statement
   18                 | nonlocal_statement
   19                 | del_statment
   20                 | import_statments
   21                 | function_call
   22                 | with_statment
   23                 | KEYWORD_PASS
   24                 | KEYWORD_BREAK
   25                 | KEYWORD_CONTINUE

   26 compound_statement: function
   27                   | conditional_statement
   28                   | class
   29                   | for_statement
   30                   | while_statement
   31                   | match_statement
   32                   | try_statement

   33 import_statments: import_statment NEWLINE
   34                 | import_statments import_statment

   35 import_statment: KEYWORD_IMPORT member_expression
   36                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM member_expression KEYWORD_IMPORT MULTIPLY
   38                | KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

   40 assignment: IDENTIFIER ASSIGN number

   41 expression: expression ADD expression
   42           | expression MINUS expression
   43           | expression MULTIPLY expression
   44           | expression DIVIDE expression
   45           | expression POWER expression
   46           | expression MODULO expression
   47           | '|' expression
   48           | '(' expression ')'
   49           | '-' expression
   50           | number
   51           | member_expression
   52           | function_call
   53           | LITERALSTRING
   54           | LIST
   55           | KEYWORD_NONE

   56 number: INTEGER
   57       | FLOAT

   58 del_statment: KEYWORD_DEL IDENTIFIER
   59             | KEYWORD_DEL IDENTIFIER LIST

   60 return_statement: KEYWORD_RETURN expression
   61                 | KEYWORD_RETURN logical_expression

   62 yield_statement: KEYWORD_YIELD expression

   63 assert_statement: KEYWORD_ASSERT logical_expression
   64                 | KEYWORD_ASSERT logical_expression COMMA LITERALSTRING

   65 raise_statement: KEYWORD_RAISE function_call
   66                | KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER

   67 global_statement: KEYWORD_GLOBAL global_nonlocal_targets

   68 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets

   69 global_nonlocal_targets: IDENTIFIER
   70                        | IDENTIFIER COMMA global_nonlocal_targets

   71 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block

   72 match_block: NEWLINE INDENT cases DEDENT

   73 cases: cases case
   74      | case

   75 case: KEYWORD_CASE expression COLON block

   76 try_statement: try finally
   77              | try except_statements
   78              | try except_statements finally
   79              | try except_statements else_statement
   80              | try except_statements else_statement finally

   81 try: KEYWORD_TRY COLON block

   82 except: KEYWORD_EXCEPT COLON block
   83       | KEYWORD_EXCEPT member_expression COLON block

   84 finally: KEYWORD_FINALLY COLON block

   85 except_statements: except_statements except
   86                  | except

   87 with_statment: KEYWORD_WITH with_stmt COLON block

   88 with_stmt: function_call KEYWORD_AS IDENTIFIER
   89          | with_stmt COMMA function_call KEYWORD_AS IDENTIFIER

   90 class: class_with_inheritance
   91      | class_without_inheritance

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block

   93 class_block: NEWLINE INDENT class_body DEDENT

   94 class_body: /* empty */
   95           | class_body assignment
   96           | class_body function
   97           | class_body NEWLINE

   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

   99 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
  100              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES
  101              | IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  102              | IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES

  103 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

  104 block: NEWLINE INDENT statements DEDENT

  105 args: /* empty */
  106     | args expression COMMA
  107     | args expression
  108     | expression COMMA
  109     | expression

  110 member_expression: IDENTIFIER
  111                  | member_expression IDENTIFIER
  112                  | member_expression function_call

  113 logical_expression: expression
  114                   | expression GREATEROREQUAL expression
  115                   | expression GREATERTHAN expression
  116                   | expression LESSOREQUAL expression
  117                   | expression LESSTHAN expression
  118                   | expression EQUAL expression
  119                   | expression NOTEQUAL expression
  120                   | logical_expression KEYWORD_AND logical_expression
  121                   | logical_expression KEYWORD_OR logical_expression
  122                   | KEYWORD_NOT logical_expression
  123                   | KEYWORD_TRUE
  124                   | KEYWORD_FALSE

  125 conditional_statement: if_statement elif_else

  126 elif_else: /* empty */
  127          | elif_stmts else_statement
  128          | elif_stmts
  129          | else_statement

  130 elif_stmts: elif_statement
  131           | elif_stmts elif_statement

  132 if_statement: KEYWORD_IF logical_expression COLON block
  133             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  134 else_statement: KEYWORD_ELSE COLON block

  135 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
  136               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  137 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
  138              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
  139              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  140              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
  141              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  142              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

  143 while_statement: KEYWORD_WHILE logical_expression COLON block
  144                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 48
')' (41) 48
'*' (42)
'+' (43)
'-' (45) 49
'.' (46) 142
'/' (47)
'|' (124) 47
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 36 38 39 40 58 59 66 69 70 71 88 89 92 98 99 100 101
    102 103 110 111 137 138 140 141 142
LIST (262) 54 59 138
LITERALSTRING (263) 53 64 101
LITERALCHAR (264)
KEYWORD_FALSE (265) 124
KEYWORD_TRUE (266) 123
MULTILINESTRING (267)
KEYWORD_AWAIT (268)
KEYWORD_IF (269) 132 133
KEYWORD_ELSE (270) 134
KEYWORD_ELSE_IF (271) 135 136
KEYWORD_IMPORT (272) 35 36 37 38 39
KEYWORD_PASS (273) 23
KEYWORD_NONE (274) 55
KEYWORD_BREAK (275) 24
KEYWORD_EXCEPT (276) 82 83
KEYWORD_IN (277) 137 138 139 140 141 142
KEYWORD_RAISE (278) 65 66
KEYWORD_CLASS (279) 92 98
KEYWORD_FINALLY (280) 84
KEYWORD_IS (281)
KEYWORD_RETURN (282) 60 61
KEYWORD_AND (283) 120
KEYWORD_CONTINUE (284) 25
KEYWORD_FOR (285) 137 138 139 140 141 142
KEYWORD_LAMBDA (286)
KEYWORD_TRY (287) 81
KEYWORD_AS (288) 38 39 88 89
KEYWORD_DEF (289) 103
KEYWORD_FROM (290) 36 37 39 66
KEYWORD_NONLOCAL (291) 68
KEYWORD_WHILE (292) 143 144
KEYWORD_ASSERT (293) 63 64
KEYWORD_DEL (294) 58 59
KEYWORD_GLOBAL (295) 67
KEYWORD_NOT (296) 122
KEYWORD_WITH (297) 87
KEYWORD_ASYNC (298)
KEYWORD_OR (299) 121
KEYWORD_YIELD (300) 62
OPERATORS (301)
COMMENT (302) 10
ADD (303) 41
MINUS (304) 42
MULTIPLY (305) 37 43
MULTILINECOMMENT (306) 11
DIVIDE (307) 44
POWER (308) 45
MODULO (309) 46
ASSIGN (310) 40
ASSIGNADD (311)
ASSIGNMINUS (312)
ASSIGNMULTIPLY (313)
ASSIGNDIVIDE (314)
ASSIGNMODULO (315)
ASSIGNFLOORDIVISION (316)
ASSIGNEXPONINTIATION (317)
ASSIGNBITWISEAND (318)
ASSIGNBITWISEOR (319)
ASSIGNBITWISEXOR (320)
ASSIGNRIGHTSHIFT (321)
ASSIGNLEFTSHIFT (322)
EQUAL (323) 118
NOT (324)
NOTEQUAL (325) 119
GREATERTHAN (326) 115
GREATEROREQUAL (327) 114
LESSTHAN (328) 117
LESSOREQUAL (329) 116
LEFT_PARENTHES (330) 92 99 100 101 102 103 133 136 139 144
RIGHT_PARENTHES (331) 92 99 100 101 102 103 133 136 139 144
LEFT_BRACES (332)
RIGHT_BRACES (333)
LEFT_BRACKETS (334)
RIGHT_BRACKETS (335)
COLON (336) 71 75 81 82 83 84 87 92 98 103 132 133 134 135 136 137
    138 139 140 141 142 143 144
COMMA (337) 64 70 89 106 108
SEMICOLON (338)
INTEGER (339) 56
FLOAT (340) 57
DEDENT (341) 72 93 98 104
INDENT (342) 72 93 98 104
NEWLINE (343) 2 6 9 33 72 93 97 98 104
KEYWORD_MATCH (344) 71
KEYWORD_CASE (345) 75
UMINUS (346)


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
prog (101)
    on left: 1 2 3, on right: 0 3
statements (102)
    on left: 4 5 6, on right: 3 4 6 104
statement (103)
    on left: 7 8 9 10 11, on right: 4 5
simple_statement (104)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right: 8
compound_statement (105)
    on left: 26 27 28 29 30 31 32, on right: 7
import_statments (106)
    on left: 33 34, on right: 20 34
import_statment (107)
    on left: 35 36 37 38 39, on right: 33 34
assignment (108)
    on left: 40, on right: 12 95
expression (109)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55, on right:
    41 42 43 44 45 46 47 48 49 60 62 75 106 107 108 109 113 114 115
    116 117 118 119
number (110)
    on left: 56 57, on right: 40 50 100
del_statment (111)
    on left: 58 59, on right: 19
return_statement (112)
    on left: 60 61, on right: 13
yield_statement (113)
    on left: 62, on right: 14
assert_statement (114)
    on left: 63 64, on right: 15
raise_statement (115)
    on left: 65 66, on right: 16
global_statement (116)
    on left: 67, on right: 17
nonlocal_statement (117)
    on left: 68, on right: 18
global_nonlocal_targets (118)
    on left: 69 70, on right: 67 68 70
match_statement (119)
    on left: 71, on right: 31
match_block (120)
    on left: 72, on right: 71
cases (121)
    on left: 73 74, on right: 72 73
case (122)
    on left: 75, on right: 73 74
try_statement (123)
    on left: 76 77 78 79 80, on right: 32
try (124)
    on left: 81, on right: 76 77 78 79 80
except (125)
    on left: 82 83, on right: 85 86
finally (126)
    on left: 84, on right: 76 78 80
except_statements (127)
    on left: 85 86, on right: 77 78 79 80 85
with_statment (128)
    on left: 87, on right: 22
with_stmt (129)
    on left: 88 89, on right: 87 89
class (130)
    on left: 90 91, on right: 28
class_with_inheritance (131)
    on left: 92, on right: 90
class_block (132)
    on left: 93, on right: 92 98
class_body (133)
    on left: 94 95 96 97, on right: 93 95 96 97
class_without_inheritance (134)
    on left: 98, on right: 91
function_call (135)
    on left: 99 100 101 102, on right: 21 52 65 66 88 89 102 112 137
    139 141 142
function (136)
    on left: 103, on right: 26 96
block (137)
    on left: 104, on right: 75 81 82 83 84 87 103 132 133 134 135 136
    137 138 139 140 141 142 143 144
args (138)
    on left: 105 106 107 108 109, on right: 92 99 103 106 107 139
member_expression (139)
    on left: 110 111 112, on right: 35 36 37 38 39 51 83 111 112 140
    141 142
logical_expression (140)
    on left: 113 114 115 116 117 118 119 120 121 122 123 124, on right:
    61 63 64 120 121 122 132 133 135 136 143 144
conditional_statement (141)
    on left: 125, on right: 27
elif_else (142)
    on left: 126 127 128 129, on right: 125
elif_stmts (143)
    on left: 130 131, on right: 127 128 131
if_statement (144)
    on left: 132 133, on right: 125
else_statement (145)
    on left: 134, on right: 79 80 127 129
elif_statement (146)
    on left: 135 136, on right: 130 131
for_statement (147)
    on left: 137 138 139 140 141 142, on right: 29
while_statement (148)
    on left: 143 144, on right: 30


state 0

    0 $accept: . prog $end

    NEWLINE  shift, and go to state 1

    NEWLINE   [reduce using rule 1 (prog)]
    $default  reduce using rule 1 (prog)

    prog  go to state 2


state 1

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 2

    0 $accept: prog . $end
    3 prog: prog . statements

    $end              shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 26
    KEYWORD_MATCH     shift, and go to state 27

    statements                 go to state 28
    statement                  go to state 29
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    conditional_statement      go to state 51
    if_statement               go to state 52
    for_statement              go to state 53
    while_statement            go to state 54


state 3

    0 $accept: prog $end .

    $default  accept


state 4

   40 assignment: IDENTIFIER . ASSIGN number
   99 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  100              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  101              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  102              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    ASSIGN          shift, and go to state 55
    LEFT_PARENTHES  shift, and go to state 56


state 5

  132 if_statement: KEYWORD_IF . logical_expression COLON block
  133             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 57
    LIST            shift, and go to state 58
    LITERALSTRING   shift, and go to state 59
    KEYWORD_FALSE   shift, and go to state 60
    KEYWORD_TRUE    shift, and go to state 61
    KEYWORD_NONE    shift, and go to state 62
    KEYWORD_NOT     shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    '-'             shift, and go to state 67
    '|'             shift, and go to state 68
    '('             shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 74


state 6

   35 import_statment: KEYWORD_IMPORT . member_expression
   38                | KEYWORD_IMPORT . member_expression KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 75

    member_expression  go to state 76


state 7

   23 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 23 (simple_statement)


state 8

   24 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 24 (simple_statement)


state 9

   65 raise_statement: KEYWORD_RAISE . function_call
   66                | KEYWORD_RAISE . function_call KEYWORD_FROM IDENTIFIER

    IDENTIFIER  shift, and go to state 77

    function_call  go to state 78


state 10

   92 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block
   98 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 79


state 11

   60 return_statement: KEYWORD_RETURN . expression
   61                 | KEYWORD_RETURN . logical_expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 80
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 81


state 12

   25 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 25 (simple_statement)


state 13

  137 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
  138              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
  139              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  140              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
  141              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  142              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER      shift, and go to state 82
    LEFT_PARENTHES  shift, and go to state 83


state 14

   81 try: KEYWORD_TRY . COLON block

    COLON  shift, and go to state 84


state 15

  103 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 85


state 16

   36 import_statment: KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM . member_expression KEYWORD_IMPORT MULTIPLY
   39                | KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 75

    member_expression  go to state 86


state 17

   68 nonlocal_statement: KEYWORD_NONLOCAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 87

    global_nonlocal_targets  go to state 88


state 18

  143 while_statement: KEYWORD_WHILE . logical_expression COLON block
  144                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 57
    LIST            shift, and go to state 58
    LITERALSTRING   shift, and go to state 59
    KEYWORD_FALSE   shift, and go to state 60
    KEYWORD_TRUE    shift, and go to state 61
    KEYWORD_NONE    shift, and go to state 62
    KEYWORD_NOT     shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 89
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    '-'             shift, and go to state 67
    '|'             shift, and go to state 68
    '('             shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 90


state 19

   63 assert_statement: KEYWORD_ASSERT . logical_expression
   64                 | KEYWORD_ASSERT . logical_expression COMMA LITERALSTRING

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 91


state 20

   58 del_statment: KEYWORD_DEL . IDENTIFIER
   59             | KEYWORD_DEL . IDENTIFIER LIST

    IDENTIFIER  shift, and go to state 92


state 21

   67 global_statement: KEYWORD_GLOBAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 87

    global_nonlocal_targets  go to state 93


state 22

   87 with_statment: KEYWORD_WITH . with_stmt COLON block

    IDENTIFIER  shift, and go to state 77

    with_stmt      go to state 94
    function_call  go to state 95


state 23

   62 yield_statement: KEYWORD_YIELD . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 96
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 24

   10 statement: COMMENT .

    $default  reduce using rule 10 (statement)


state 25

   11 statement: MULTILINECOMMENT .

    $default  reduce using rule 11 (statement)


state 26

    9 statement: NEWLINE .

    $default  reduce using rule 9 (statement)


state 27

   71 match_statement: KEYWORD_MATCH . IDENTIFIER COLON match_block

    IDENTIFIER  shift, and go to state 97


state 28

    3 prog: prog statements .
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 98
    KEYWORD_MATCH     shift, and go to state 27

    IDENTIFIER        [reduce using rule 3 (prog)]
    KEYWORD_IF        [reduce using rule 3 (prog)]
    KEYWORD_IMPORT    [reduce using rule 3 (prog)]
    KEYWORD_PASS      [reduce using rule 3 (prog)]
    KEYWORD_BREAK     [reduce using rule 3 (prog)]
    KEYWORD_RAISE     [reduce using rule 3 (prog)]
    KEYWORD_CLASS     [reduce using rule 3 (prog)]
    KEYWORD_RETURN    [reduce using rule 3 (prog)]
    KEYWORD_CONTINUE  [reduce using rule 3 (prog)]
    KEYWORD_FOR       [reduce using rule 3 (prog)]
    KEYWORD_TRY       [reduce using rule 3 (prog)]
    KEYWORD_DEF       [reduce using rule 3 (prog)]
    KEYWORD_FROM      [reduce using rule 3 (prog)]
    KEYWORD_NONLOCAL  [reduce using rule 3 (prog)]
    KEYWORD_WHILE     [reduce using rule 3 (prog)]
    KEYWORD_ASSERT    [reduce using rule 3 (prog)]
    KEYWORD_DEL       [reduce using rule 3 (prog)]
    KEYWORD_GLOBAL    [reduce using rule 3 (prog)]
    KEYWORD_WITH      [reduce using rule 3 (prog)]
    KEYWORD_YIELD     [reduce using rule 3 (prog)]
    COMMENT           [reduce using rule 3 (prog)]
    MULTILINECOMMENT  [reduce using rule 3 (prog)]
    NEWLINE           [reduce using rule 3 (prog)]
    KEYWORD_MATCH     [reduce using rule 3 (prog)]
    $default          reduce using rule 3 (prog)

    statement                  go to state 99
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    conditional_statement      go to state 51
    if_statement               go to state 52
    for_statement              go to state 53
    while_statement            go to state 54


state 29

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 30

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 31

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 32

   20 simple_statement: import_statments .
   34 import_statments: import_statments . import_statment

    KEYWORD_IMPORT  shift, and go to state 6
    KEYWORD_FROM    shift, and go to state 16

    KEYWORD_IMPORT  [reduce using rule 20 (simple_statement)]
    KEYWORD_FROM    [reduce using rule 20 (simple_statement)]
    $default        reduce using rule 20 (simple_statement)

    import_statment  go to state 100


state 33

   33 import_statments: import_statment . NEWLINE

    NEWLINE  shift, and go to state 101


state 34

   12 simple_statement: assignment .

    $default  reduce using rule 12 (simple_statement)


state 35

   19 simple_statement: del_statment .

    $default  reduce using rule 19 (simple_statement)


state 36

   13 simple_statement: return_statement .

    $default  reduce using rule 13 (simple_statement)


state 37

   14 simple_statement: yield_statement .

    $default  reduce using rule 14 (simple_statement)


state 38

   15 simple_statement: assert_statement .

    $default  reduce using rule 15 (simple_statement)


state 39

   16 simple_statement: raise_statement .

    $default  reduce using rule 16 (simple_statement)


state 40

   17 simple_statement: global_statement .

    $default  reduce using rule 17 (simple_statement)


state 41

   18 simple_statement: nonlocal_statement .

    $default  reduce using rule 18 (simple_statement)


state 42

   31 compound_statement: match_statement .

    $default  reduce using rule 31 (compound_statement)


state 43

   32 compound_statement: try_statement .

    $default  reduce using rule 32 (compound_statement)


state 44

   76 try_statement: try . finally
   77              | try . except_statements
   78              | try . except_statements finally
   79              | try . except_statements else_statement
   80              | try . except_statements else_statement finally

    KEYWORD_EXCEPT   shift, and go to state 102
    KEYWORD_FINALLY  shift, and go to state 103

    except             go to state 104
    finally            go to state 105
    except_statements  go to state 106


state 45

   22 simple_statement: with_statment .

    $default  reduce using rule 22 (simple_statement)


state 46

   28 compound_statement: class .

    $default  reduce using rule 28 (compound_statement)


state 47

   90 class: class_with_inheritance .

    $default  reduce using rule 90 (class)


state 48

   91 class: class_without_inheritance .

    $default  reduce using rule 91 (class)


state 49

   21 simple_statement: function_call .

    $default  reduce using rule 21 (simple_statement)


state 50

   26 compound_statement: function .

    $default  reduce using rule 26 (compound_statement)


state 51

   27 compound_statement: conditional_statement .

    $default  reduce using rule 27 (compound_statement)


state 52

  125 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 107
    KEYWORD_ELSE_IF  shift, and go to state 108

    $default  reduce using rule 126 (elif_else)

    elif_else       go to state 109
    elif_stmts      go to state 110
    else_statement  go to state 111
    elif_statement  go to state 112


state 53

   29 compound_statement: for_statement .

    $default  reduce using rule 29 (compound_statement)


state 54

   30 compound_statement: while_statement .

    $default  reduce using rule 30 (compound_statement)


state 55

   40 assignment: IDENTIFIER ASSIGN . number

    INTEGER  shift, and go to state 65
    FLOAT    shift, and go to state 66

    number  go to state 113


state 56

   99 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
  100              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES
  101              | IDENTIFIER LEFT_PARENTHES . LITERALSTRING RIGHT_PARENTHES
  102              | IDENTIFIER LEFT_PARENTHES . function_call RIGHT_PARENTHES

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 114
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    IDENTIFIER     [reduce using rule 105 (args)]
    LIST           [reduce using rule 105 (args)]
    LITERALSTRING  [reduce using rule 105 (args)]
    KEYWORD_NONE   [reduce using rule 105 (args)]
    INTEGER        [reduce using rule 105 (args)]
    FLOAT          [reduce using rule 105 (args)]
    '-'            [reduce using rule 105 (args)]
    '|'            [reduce using rule 105 (args)]
    '('            [reduce using rule 105 (args)]
    $default       reduce using rule 105 (args)

    expression         go to state 115
    number             go to state 116
    function_call      go to state 117
    args               go to state 118
    member_expression  go to state 73


state 57

   99 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  100              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  101              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  102              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
  110 member_expression: IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 56

    $default  reduce using rule 110 (member_expression)


state 58

   54 expression: LIST .

    $default  reduce using rule 54 (expression)


state 59

   53 expression: LITERALSTRING .

    $default  reduce using rule 53 (expression)


state 60

  124 logical_expression: KEYWORD_FALSE .

    $default  reduce using rule 124 (logical_expression)


state 61

  123 logical_expression: KEYWORD_TRUE .

    $default  reduce using rule 123 (logical_expression)


state 62

   55 expression: KEYWORD_NONE .

    $default  reduce using rule 55 (expression)


state 63

  122 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 119


state 64

  133 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 120


state 65

   56 number: INTEGER .

    $default  reduce using rule 56 (number)


state 66

   57 number: FLOAT .

    $default  reduce using rule 57 (number)


state 67

   49 expression: '-' . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 121
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 68

   47 expression: '|' . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 122
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 69

   48 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 123
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 70

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  113 logical_expression: expression .
  114                   | expression . GREATEROREQUAL expression
  115                   | expression . GREATERTHAN expression
  116                   | expression . LESSOREQUAL expression
  117                   | expression . LESSTHAN expression
  118                   | expression . EQUAL expression
  119                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 124
    MINUS           shift, and go to state 125
    MULTIPLY        shift, and go to state 126
    DIVIDE          shift, and go to state 127
    POWER           shift, and go to state 128
    MODULO          shift, and go to state 129
    EQUAL           shift, and go to state 130
    NOTEQUAL        shift, and go to state 131
    GREATERTHAN     shift, and go to state 132
    GREATEROREQUAL  shift, and go to state 133
    LESSTHAN        shift, and go to state 134
    LESSOREQUAL     shift, and go to state 135

    $default  reduce using rule 113 (logical_expression)


state 71

   50 expression: number .

    $default  reduce using rule 50 (expression)


state 72

   52 expression: function_call .

    $default  reduce using rule 52 (expression)


state 73

   51 expression: member_expression .
  111 member_expression: member_expression . IDENTIFIER
  112                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 136

    IDENTIFIER  [reduce using rule 51 (expression)]
    $default    reduce using rule 51 (expression)

    function_call  go to state 137


state 74

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  132 if_statement: KEYWORD_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139
    COLON        shift, and go to state 140


state 75

  110 member_expression: IDENTIFIER .

    $default  reduce using rule 110 (member_expression)


state 76

   35 import_statment: KEYWORD_IMPORT member_expression .
   38                | KEYWORD_IMPORT member_expression . KEYWORD_AS IDENTIFIER
  111 member_expression: member_expression . IDENTIFIER
  112                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 136
    KEYWORD_AS  shift, and go to state 141

    IDENTIFIER  [reduce using rule 35 (import_statment)]
    $default    reduce using rule 35 (import_statment)

    function_call  go to state 137


state 77

   99 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  100              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  101              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  102              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 56


state 78

   65 raise_statement: KEYWORD_RAISE function_call .
   66                | KEYWORD_RAISE function_call . KEYWORD_FROM IDENTIFIER

    KEYWORD_FROM  shift, and go to state 142

    KEYWORD_FROM  [reduce using rule 65 (raise_statement)]
    $default      reduce using rule 65 (raise_statement)


state 79

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block
   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 143
    COLON           shift, and go to state 144


state 80

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   60 return_statement: KEYWORD_RETURN expression .
  113 logical_expression: expression .
  114                   | expression . GREATEROREQUAL expression
  115                   | expression . GREATERTHAN expression
  116                   | expression . LESSOREQUAL expression
  117                   | expression . LESSTHAN expression
  118                   | expression . EQUAL expression
  119                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 124
    MINUS           shift, and go to state 125
    MULTIPLY        shift, and go to state 126
    DIVIDE          shift, and go to state 127
    POWER           shift, and go to state 128
    MODULO          shift, and go to state 129
    EQUAL           shift, and go to state 130
    NOTEQUAL        shift, and go to state 131
    GREATERTHAN     shift, and go to state 132
    GREATEROREQUAL  shift, and go to state 133
    LESSTHAN        shift, and go to state 134
    LESSOREQUAL     shift, and go to state 135

    $end              reduce using rule 60 (return_statement)
    $end              [reduce using rule 113 (logical_expression)]
    IDENTIFIER        reduce using rule 60 (return_statement)
    IDENTIFIER        [reduce using rule 113 (logical_expression)]
    KEYWORD_IF        reduce using rule 60 (return_statement)
    KEYWORD_IF        [reduce using rule 113 (logical_expression)]
    KEYWORD_IMPORT    reduce using rule 60 (return_statement)
    KEYWORD_IMPORT    [reduce using rule 113 (logical_expression)]
    KEYWORD_PASS      reduce using rule 60 (return_statement)
    KEYWORD_PASS      [reduce using rule 113 (logical_expression)]
    KEYWORD_BREAK     reduce using rule 60 (return_statement)
    KEYWORD_BREAK     [reduce using rule 113 (logical_expression)]
    KEYWORD_RAISE     reduce using rule 60 (return_statement)
    KEYWORD_RAISE     [reduce using rule 113 (logical_expression)]
    KEYWORD_CLASS     reduce using rule 60 (return_statement)
    KEYWORD_CLASS     [reduce using rule 113 (logical_expression)]
    KEYWORD_RETURN    reduce using rule 60 (return_statement)
    KEYWORD_RETURN    [reduce using rule 113 (logical_expression)]
    KEYWORD_AND       reduce using rule 113 (logical_expression)
    KEYWORD_CONTINUE  reduce using rule 60 (return_statement)
    KEYWORD_CONTINUE  [reduce using rule 113 (logical_expression)]
    KEYWORD_FOR       reduce using rule 60 (return_statement)
    KEYWORD_FOR       [reduce using rule 113 (logical_expression)]
    KEYWORD_TRY       reduce using rule 60 (return_statement)
    KEYWORD_TRY       [reduce using rule 113 (logical_expression)]
    KEYWORD_DEF       reduce using rule 60 (return_statement)
    KEYWORD_DEF       [reduce using rule 113 (logical_expression)]
    KEYWORD_FROM      reduce using rule 60 (return_statement)
    KEYWORD_FROM      [reduce using rule 113 (logical_expression)]
    KEYWORD_NONLOCAL  reduce using rule 60 (return_statement)
    KEYWORD_NONLOCAL  [reduce using rule 113 (logical_expression)]
    KEYWORD_WHILE     reduce using rule 60 (return_statement)
    KEYWORD_WHILE     [reduce using rule 113 (logical_expression)]
    KEYWORD_ASSERT    reduce using rule 60 (return_statement)
    KEYWORD_ASSERT    [reduce using rule 113 (logical_expression)]
    KEYWORD_DEL       reduce using rule 60 (return_statement)
    KEYWORD_DEL       [reduce using rule 113 (logical_expression)]
    KEYWORD_GLOBAL    reduce using rule 60 (return_statement)
    KEYWORD_GLOBAL    [reduce using rule 113 (logical_expression)]
    KEYWORD_WITH      reduce using rule 60 (return_statement)
    KEYWORD_WITH      [reduce using rule 113 (logical_expression)]
    KEYWORD_OR        reduce using rule 113 (logical_expression)
    KEYWORD_YIELD     reduce using rule 60 (return_statement)
    KEYWORD_YIELD     [reduce using rule 113 (logical_expression)]
    COMMENT           reduce using rule 60 (return_statement)
    COMMENT           [reduce using rule 113 (logical_expression)]
    MULTILINECOMMENT  reduce using rule 60 (return_statement)
    MULTILINECOMMENT  [reduce using rule 113 (logical_expression)]
    DEDENT            reduce using rule 60 (return_statement)
    DEDENT            [reduce using rule 113 (logical_expression)]
    NEWLINE           reduce using rule 60 (return_statement)
    NEWLINE           [reduce using rule 113 (logical_expression)]
    KEYWORD_MATCH     reduce using rule 60 (return_statement)
    KEYWORD_MATCH     [reduce using rule 113 (logical_expression)]
    $default          reduce using rule 60 (return_statement)


state 81

   61 return_statement: KEYWORD_RETURN logical_expression .
  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139

    $default  reduce using rule 61 (return_statement)


state 82

  137 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
  138              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
  140              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
  141              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block
  142              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    KEYWORD_IN  shift, and go to state 145


state 83

  139 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    IDENTIFIER     [reduce using rule 105 (args)]
    LIST           [reduce using rule 105 (args)]
    LITERALSTRING  [reduce using rule 105 (args)]
    KEYWORD_NONE   [reduce using rule 105 (args)]
    INTEGER        [reduce using rule 105 (args)]
    FLOAT          [reduce using rule 105 (args)]
    '-'            [reduce using rule 105 (args)]
    '|'            [reduce using rule 105 (args)]
    '('            [reduce using rule 105 (args)]
    $default       reduce using rule 105 (args)

    expression         go to state 115
    number             go to state 71
    function_call      go to state 72
    args               go to state 146
    member_expression  go to state 73


state 84

   81 try: KEYWORD_TRY COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 148


state 85

  103 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 149


state 86

   36 import_statment: KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM member_expression . KEYWORD_IMPORT MULTIPLY
   39                | KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER
  111 member_expression: member_expression . IDENTIFIER
  112                  | member_expression . function_call

    IDENTIFIER      shift, and go to state 136
    KEYWORD_IMPORT  shift, and go to state 150

    function_call  go to state 137


state 87

   69 global_nonlocal_targets: IDENTIFIER .
   70                        | IDENTIFIER . COMMA global_nonlocal_targets

    COMMA  shift, and go to state 151

    $default  reduce using rule 69 (global_nonlocal_targets)


state 88

   68 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets .

    $default  reduce using rule 68 (nonlocal_statement)


state 89

  144 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 152


state 90

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  143 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139
    COLON        shift, and go to state 153


state 91

   63 assert_statement: KEYWORD_ASSERT logical_expression .
   64                 | KEYWORD_ASSERT logical_expression . COMMA LITERALSTRING
  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139
    COMMA        shift, and go to state 154

    $default  reduce using rule 63 (assert_statement)


state 92

   58 del_statment: KEYWORD_DEL IDENTIFIER .
   59             | KEYWORD_DEL IDENTIFIER . LIST

    LIST  shift, and go to state 155

    $default  reduce using rule 58 (del_statment)


state 93

   67 global_statement: KEYWORD_GLOBAL global_nonlocal_targets .

    $default  reduce using rule 67 (global_statement)


state 94

   87 with_statment: KEYWORD_WITH with_stmt . COLON block
   89 with_stmt: with_stmt . COMMA function_call KEYWORD_AS IDENTIFIER

    COLON  shift, and go to state 156
    COMMA  shift, and go to state 157


state 95

   88 with_stmt: function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 158


state 96

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   62 yield_statement: KEYWORD_YIELD expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 62 (yield_statement)


state 97

   71 match_statement: KEYWORD_MATCH IDENTIFIER . COLON match_block

    COLON  shift, and go to state 159


state 98

    6 statements: statements NEWLINE .
    9 statement: NEWLINE .

    $end              reduce using rule 6 (statements)
    $end              [reduce using rule 9 (statement)]
    IDENTIFIER        reduce using rule 6 (statements)
    IDENTIFIER        [reduce using rule 9 (statement)]
    KEYWORD_IF        reduce using rule 6 (statements)
    KEYWORD_IF        [reduce using rule 9 (statement)]
    KEYWORD_IMPORT    reduce using rule 6 (statements)
    KEYWORD_IMPORT    [reduce using rule 9 (statement)]
    KEYWORD_PASS      reduce using rule 6 (statements)
    KEYWORD_PASS      [reduce using rule 9 (statement)]
    KEYWORD_BREAK     reduce using rule 6 (statements)
    KEYWORD_BREAK     [reduce using rule 9 (statement)]
    KEYWORD_RAISE     reduce using rule 6 (statements)
    KEYWORD_RAISE     [reduce using rule 9 (statement)]
    KEYWORD_CLASS     reduce using rule 6 (statements)
    KEYWORD_CLASS     [reduce using rule 9 (statement)]
    KEYWORD_RETURN    reduce using rule 6 (statements)
    KEYWORD_RETURN    [reduce using rule 9 (statement)]
    KEYWORD_CONTINUE  reduce using rule 6 (statements)
    KEYWORD_CONTINUE  [reduce using rule 9 (statement)]
    KEYWORD_FOR       reduce using rule 6 (statements)
    KEYWORD_FOR       [reduce using rule 9 (statement)]
    KEYWORD_TRY       reduce using rule 6 (statements)
    KEYWORD_TRY       [reduce using rule 9 (statement)]
    KEYWORD_DEF       reduce using rule 6 (statements)
    KEYWORD_DEF       [reduce using rule 9 (statement)]
    KEYWORD_FROM      reduce using rule 6 (statements)
    KEYWORD_FROM      [reduce using rule 9 (statement)]
    KEYWORD_NONLOCAL  reduce using rule 6 (statements)
    KEYWORD_NONLOCAL  [reduce using rule 9 (statement)]
    KEYWORD_WHILE     reduce using rule 6 (statements)
    KEYWORD_WHILE     [reduce using rule 9 (statement)]
    KEYWORD_ASSERT    reduce using rule 6 (statements)
    KEYWORD_ASSERT    [reduce using rule 9 (statement)]
    KEYWORD_DEL       reduce using rule 6 (statements)
    KEYWORD_DEL       [reduce using rule 9 (statement)]
    KEYWORD_GLOBAL    reduce using rule 6 (statements)
    KEYWORD_GLOBAL    [reduce using rule 9 (statement)]
    KEYWORD_WITH      reduce using rule 6 (statements)
    KEYWORD_WITH      [reduce using rule 9 (statement)]
    KEYWORD_YIELD     reduce using rule 6 (statements)
    KEYWORD_YIELD     [reduce using rule 9 (statement)]
    COMMENT           reduce using rule 6 (statements)
    COMMENT           [reduce using rule 9 (statement)]
    MULTILINECOMMENT  reduce using rule 6 (statements)
    MULTILINECOMMENT  [reduce using rule 9 (statement)]
    DEDENT            reduce using rule 6 (statements)
    DEDENT            [reduce using rule 9 (statement)]
    NEWLINE           reduce using rule 6 (statements)
    NEWLINE           [reduce using rule 9 (statement)]
    KEYWORD_MATCH     reduce using rule 6 (statements)
    KEYWORD_MATCH     [reduce using rule 9 (statement)]
    $default          reduce using rule 6 (statements)


state 99

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 100

   34 import_statments: import_statments import_statment .

    $default  reduce using rule 34 (import_statments)


state 101

   33 import_statments: import_statment NEWLINE .

    $default  reduce using rule 33 (import_statments)


state 102

   82 except: KEYWORD_EXCEPT . COLON block
   83       | KEYWORD_EXCEPT . member_expression COLON block

    IDENTIFIER  shift, and go to state 75
    COLON       shift, and go to state 160

    member_expression  go to state 161


state 103

   84 finally: KEYWORD_FINALLY . COLON block

    COLON  shift, and go to state 162


state 104

   86 except_statements: except .

    $default  reduce using rule 86 (except_statements)


state 105

   76 try_statement: try finally .

    $default  reduce using rule 76 (try_statement)


state 106

   77 try_statement: try except_statements .
   78              | try except_statements . finally
   79              | try except_statements . else_statement
   80              | try except_statements . else_statement finally
   85 except_statements: except_statements . except

    KEYWORD_ELSE     shift, and go to state 107
    KEYWORD_EXCEPT   shift, and go to state 102
    KEYWORD_FINALLY  shift, and go to state 103

    $default  reduce using rule 77 (try_statement)

    except          go to state 163
    finally         go to state 164
    else_statement  go to state 165


state 107

  134 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 166


state 108

  135 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
  136               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 57
    LIST            shift, and go to state 58
    LITERALSTRING   shift, and go to state 59
    KEYWORD_FALSE   shift, and go to state 60
    KEYWORD_TRUE    shift, and go to state 61
    KEYWORD_NONE    shift, and go to state 62
    KEYWORD_NOT     shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 167
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    '-'             shift, and go to state 67
    '|'             shift, and go to state 68
    '('             shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 168


state 109

  125 conditional_statement: if_statement elif_else .

    $default  reduce using rule 125 (conditional_statement)


state 110

  127 elif_else: elif_stmts . else_statement
  128          | elif_stmts .
  131 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 107
    KEYWORD_ELSE_IF  shift, and go to state 108

    $default  reduce using rule 128 (elif_else)

    else_statement  go to state 169
    elif_statement  go to state 170


state 111

  129 elif_else: else_statement .

    $default  reduce using rule 129 (elif_else)


state 112

  130 elif_stmts: elif_statement .

    $default  reduce using rule 130 (elif_stmts)


state 113

   40 assignment: IDENTIFIER ASSIGN number .

    $default  reduce using rule 40 (assignment)


state 114

   53 expression: LITERALSTRING .
  101 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 171

    RIGHT_PARENTHES  [reduce using rule 53 (expression)]
    $default         reduce using rule 53 (expression)


state 115

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  108 args: expression . COMMA
  109     | expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129
    COMMA     shift, and go to state 172

    $default  reduce using rule 109 (args)


state 116

   50 expression: number .
  100 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 173

    RIGHT_PARENTHES  [reduce using rule 50 (expression)]
    $default         reduce using rule 50 (expression)


state 117

   52 expression: function_call .
  102 function_call: IDENTIFIER LEFT_PARENTHES function_call . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 174

    RIGHT_PARENTHES  [reduce using rule 52 (expression)]
    $default         reduce using rule 52 (expression)


state 118

   99 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES
  106 args: args . expression COMMA
  107     | args . expression

    IDENTIFIER       shift, and go to state 57
    LIST             shift, and go to state 58
    LITERALSTRING    shift, and go to state 59
    KEYWORD_NONE     shift, and go to state 62
    RIGHT_PARENTHES  shift, and go to state 175
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    '-'              shift, and go to state 67
    '|'              shift, and go to state 68
    '('              shift, and go to state 69

    expression         go to state 176
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 119

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  122                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139

    KEYWORD_AND  [reduce using rule 122 (logical_expression)]
    KEYWORD_OR   [reduce using rule 122 (logical_expression)]
    $default     reduce using rule 122 (logical_expression)


state 120

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  133 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 138
    KEYWORD_OR       shift, and go to state 139
    RIGHT_PARENTHES  shift, and go to state 177


state 121

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   49           | '-' expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 49 (expression)]
    MINUS     [reduce using rule 49 (expression)]
    MULTIPLY  [reduce using rule 49 (expression)]
    DIVIDE    [reduce using rule 49 (expression)]
    POWER     [reduce using rule 49 (expression)]
    MODULO    [reduce using rule 49 (expression)]
    $default  reduce using rule 49 (expression)


state 122

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   47           | '|' expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 47 (expression)]
    MINUS     [reduce using rule 47 (expression)]
    MULTIPLY  [reduce using rule 47 (expression)]
    DIVIDE    [reduce using rule 47 (expression)]
    POWER     [reduce using rule 47 (expression)]
    MODULO    [reduce using rule 47 (expression)]
    $default  reduce using rule 47 (expression)


state 123

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   48           | '(' expression . ')'

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129
    ')'       shift, and go to state 178


state 124

   41 expression: expression ADD . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 179
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 125

   42 expression: expression MINUS . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 180
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 126

   43 expression: expression MULTIPLY . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 181
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 127

   44 expression: expression DIVIDE . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 182
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 128

   45 expression: expression POWER . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 183
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 129

   46 expression: expression MODULO . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 184
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 130

  118 logical_expression: expression EQUAL . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 185
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 131

  119 logical_expression: expression NOTEQUAL . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 186
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 132

  115 logical_expression: expression GREATERTHAN . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 187
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 133

  114 logical_expression: expression GREATEROREQUAL . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 188
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 134

  117 logical_expression: expression LESSTHAN . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 189
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 135

  116 logical_expression: expression LESSOREQUAL . expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 190
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 136

   99 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  100              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  101              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  102              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
  111 member_expression: member_expression IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 56

    $default  reduce using rule 111 (member_expression)


state 137

  112 member_expression: member_expression function_call .

    $default  reduce using rule 112 (member_expression)


state 138

  120 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 191


state 139

  121 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 192


state 140

  132 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 193


state 141

   38 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 194


state 142

   66 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM . IDENTIFIER

    IDENTIFIER  shift, and go to state 195


state 143

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON class_block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    IDENTIFIER     [reduce using rule 105 (args)]
    LIST           [reduce using rule 105 (args)]
    LITERALSTRING  [reduce using rule 105 (args)]
    KEYWORD_NONE   [reduce using rule 105 (args)]
    INTEGER        [reduce using rule 105 (args)]
    FLOAT          [reduce using rule 105 (args)]
    '-'            [reduce using rule 105 (args)]
    '|'            [reduce using rule 105 (args)]
    '('            [reduce using rule 105 (args)]
    $default       reduce using rule 105 (args)

    expression         go to state 115
    number             go to state 71
    function_call      go to state 72
    args               go to state 196
    member_expression  go to state 73


state 144

   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 197


state 145

  137 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
  138              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
  140              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
  141              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block
  142              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 57
    LIST        shift, and go to state 198

    function_call      go to state 199
    member_expression  go to state 200


state 146

  106 args: args . expression COMMA
  107     | args . expression
  139 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 57
    LIST             shift, and go to state 58
    LITERALSTRING    shift, and go to state 59
    KEYWORD_NONE     shift, and go to state 62
    RIGHT_PARENTHES  shift, and go to state 201
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    '-'              shift, and go to state 67
    '|'              shift, and go to state 68
    '('              shift, and go to state 69

    expression         go to state 176
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 147

  104 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 202


state 148

   81 try: KEYWORD_TRY COLON block .

    $default  reduce using rule 81 (try)


state 149

  103 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    IDENTIFIER     [reduce using rule 105 (args)]
    LIST           [reduce using rule 105 (args)]
    LITERALSTRING  [reduce using rule 105 (args)]
    KEYWORD_NONE   [reduce using rule 105 (args)]
    INTEGER        [reduce using rule 105 (args)]
    FLOAT          [reduce using rule 105 (args)]
    '-'            [reduce using rule 105 (args)]
    '|'            [reduce using rule 105 (args)]
    '('            [reduce using rule 105 (args)]
    $default       reduce using rule 105 (args)

    expression         go to state 115
    number             go to state 71
    function_call      go to state 72
    args               go to state 203
    member_expression  go to state 73


state 150

   36 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER
   37                | KEYWORD_FROM member_expression KEYWORD_IMPORT . MULTIPLY
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 204
    MULTIPLY    shift, and go to state 205


state 151

   70 global_nonlocal_targets: IDENTIFIER COMMA . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 87

    global_nonlocal_targets  go to state 206


state 152

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  144 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 138
    KEYWORD_OR       shift, and go to state 139
    RIGHT_PARENTHES  shift, and go to state 207


state 153

  143 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 208


state 154

   64 assert_statement: KEYWORD_ASSERT logical_expression COMMA . LITERALSTRING

    LITERALSTRING  shift, and go to state 209


state 155

   59 del_statment: KEYWORD_DEL IDENTIFIER LIST .

    $default  reduce using rule 59 (del_statment)


state 156

   87 with_statment: KEYWORD_WITH with_stmt COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 210


state 157

   89 with_stmt: with_stmt COMMA . function_call KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 77

    function_call  go to state 211


state 158

   88 with_stmt: function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 212


state 159

   71 match_statement: KEYWORD_MATCH IDENTIFIER COLON . match_block

    NEWLINE  shift, and go to state 213

    match_block  go to state 214


state 160

   82 except: KEYWORD_EXCEPT COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 215


state 161

   83 except: KEYWORD_EXCEPT member_expression . COLON block
  111 member_expression: member_expression . IDENTIFIER
  112                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 136
    COLON       shift, and go to state 216

    function_call  go to state 137


state 162

   84 finally: KEYWORD_FINALLY COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 217


state 163

   85 except_statements: except_statements except .

    $default  reduce using rule 85 (except_statements)


state 164

   78 try_statement: try except_statements finally .

    $default  reduce using rule 78 (try_statement)


state 165

   79 try_statement: try except_statements else_statement .
   80              | try except_statements else_statement . finally

    KEYWORD_FINALLY  shift, and go to state 103

    $default  reduce using rule 79 (try_statement)

    finally  go to state 218


state 166

  134 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 219


state 167

  136 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_FALSE  shift, and go to state 60
    KEYWORD_TRUE   shift, and go to state 61
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 63
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression          go to state 70
    number              go to state 71
    function_call       go to state 72
    member_expression   go to state 73
    logical_expression  go to state 220


state 168

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  135 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139
    COLON        shift, and go to state 221


state 169

  127 elif_else: elif_stmts else_statement .

    $default  reduce using rule 127 (elif_else)


state 170

  131 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 131 (elif_stmts)


state 171

  101 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES .

    $default  reduce using rule 101 (function_call)


state 172

  108 args: expression COMMA .

    $default  reduce using rule 108 (args)


state 173

  100 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 100 (function_call)


state 174

  102 function_call: IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES .

    $default  reduce using rule 102 (function_call)


state 175

   99 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 99 (function_call)


state 176

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  106 args: args expression . COMMA
  107     | args expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129
    COMMA     shift, and go to state 222

    $default  reduce using rule 107 (args)


state 177

  133 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 223


state 178

   48 expression: '(' expression ')' .

    $default  reduce using rule 48 (expression)


state 179

   41 expression: expression . ADD expression
   41           | expression ADD expression .
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 41 (expression)]
    MINUS     [reduce using rule 41 (expression)]
    MULTIPLY  [reduce using rule 41 (expression)]
    DIVIDE    [reduce using rule 41 (expression)]
    POWER     [reduce using rule 41 (expression)]
    MODULO    [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


state 180

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   42           | expression MINUS expression .
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 42 (expression)]
    MINUS     [reduce using rule 42 (expression)]
    MULTIPLY  [reduce using rule 42 (expression)]
    DIVIDE    [reduce using rule 42 (expression)]
    POWER     [reduce using rule 42 (expression)]
    MODULO    [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


state 181

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   43           | expression MULTIPLY expression .
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 43 (expression)]
    MINUS     [reduce using rule 43 (expression)]
    MULTIPLY  [reduce using rule 43 (expression)]
    DIVIDE    [reduce using rule 43 (expression)]
    POWER     [reduce using rule 43 (expression)]
    MODULO    [reduce using rule 43 (expression)]
    $default  reduce using rule 43 (expression)


state 182

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   44           | expression DIVIDE expression .
   45           | expression . POWER expression
   46           | expression . MODULO expression

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 44 (expression)]
    MINUS     [reduce using rule 44 (expression)]
    MULTIPLY  [reduce using rule 44 (expression)]
    DIVIDE    [reduce using rule 44 (expression)]
    POWER     [reduce using rule 44 (expression)]
    MODULO    [reduce using rule 44 (expression)]
    $default  reduce using rule 44 (expression)


state 183

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   45           | expression POWER expression .
   46           | expression . MODULO expression

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 45 (expression)]
    MINUS     [reduce using rule 45 (expression)]
    MULTIPLY  [reduce using rule 45 (expression)]
    DIVIDE    [reduce using rule 45 (expression)]
    POWER     [reduce using rule 45 (expression)]
    MODULO    [reduce using rule 45 (expression)]
    $default  reduce using rule 45 (expression)


state 184

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   46           | expression MODULO expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    ADD       [reduce using rule 46 (expression)]
    MINUS     [reduce using rule 46 (expression)]
    MULTIPLY  [reduce using rule 46 (expression)]
    DIVIDE    [reduce using rule 46 (expression)]
    POWER     [reduce using rule 46 (expression)]
    MODULO    [reduce using rule 46 (expression)]
    $default  reduce using rule 46 (expression)


state 185

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  118 logical_expression: expression EQUAL expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 118 (logical_expression)


state 186

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  119 logical_expression: expression NOTEQUAL expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 119 (logical_expression)


state 187

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  115 logical_expression: expression GREATERTHAN expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 115 (logical_expression)


state 188

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  114 logical_expression: expression GREATEROREQUAL expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 114 (logical_expression)


state 189

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  117 logical_expression: expression LESSTHAN expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 117 (logical_expression)


state 190

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
  116 logical_expression: expression LESSOREQUAL expression .

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129

    $default  reduce using rule 116 (logical_expression)


state 191

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  120                   | logical_expression KEYWORD_AND logical_expression .
  121                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139

    KEYWORD_AND  [reduce using rule 120 (logical_expression)]
    KEYWORD_OR   [reduce using rule 120 (logical_expression)]
    $default     reduce using rule 120 (logical_expression)


state 192

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  121                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 138
    KEYWORD_OR   shift, and go to state 139

    KEYWORD_AND  [reduce using rule 121 (logical_expression)]
    KEYWORD_OR   [reduce using rule 121 (logical_expression)]
    $default     reduce using rule 121 (logical_expression)


state 193

  132 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 132 (if_statement)


state 194

   38 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 38 (import_statment)


state 195

   66 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER .

    $default  reduce using rule 66 (raise_statement)


state 196

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON class_block
  106 args: args . expression COMMA
  107     | args . expression

    IDENTIFIER       shift, and go to state 57
    LIST             shift, and go to state 58
    LITERALSTRING    shift, and go to state 59
    KEYWORD_NONE     shift, and go to state 62
    RIGHT_PARENTHES  shift, and go to state 224
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    '-'              shift, and go to state 67
    '|'              shift, and go to state 68
    '('              shift, and go to state 69

    expression         go to state 176
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 197

   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 225


state 198

  138 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 226


state 199

  137 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 227


state 200

  111 member_expression: member_expression . IDENTIFIER
  112                  | member_expression . function_call
  140 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
  141              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block
  142              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 136
    COLON       shift, and go to state 228

    function_call  go to state 229


state 201

  139 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 230


state 202

  104 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 26
    KEYWORD_MATCH     shift, and go to state 27

    statements                 go to state 231
    statement                  go to state 29
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    conditional_statement      go to state 51
    if_statement               go to state 52
    for_statement              go to state 53
    while_statement            go to state 54


state 203

  103 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
  106 args: args . expression COMMA
  107     | args . expression

    IDENTIFIER       shift, and go to state 57
    LIST             shift, and go to state 58
    LITERALSTRING    shift, and go to state 59
    KEYWORD_NONE     shift, and go to state 62
    RIGHT_PARENTHES  shift, and go to state 232
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    '-'              shift, and go to state 67
    '|'              shift, and go to state 68
    '('              shift, and go to state 69

    expression         go to state 176
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 204

   36 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER .
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 233

    $default  reduce using rule 36 (import_statment)


state 205

   37 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT MULTIPLY .

    $default  reduce using rule 37 (import_statment)


state 206

   70 global_nonlocal_targets: IDENTIFIER COMMA global_nonlocal_targets .

    $default  reduce using rule 70 (global_nonlocal_targets)


state 207

  144 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 234


state 208

  143 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 143 (while_statement)


state 209

   64 assert_statement: KEYWORD_ASSERT logical_expression COMMA LITERALSTRING .

    $default  reduce using rule 64 (assert_statement)


state 210

   87 with_statment: KEYWORD_WITH with_stmt COLON block .

    $default  reduce using rule 87 (with_statment)


state 211

   89 with_stmt: with_stmt COMMA function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 235


state 212

   88 with_stmt: function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 88 (with_stmt)


state 213

   72 match_block: NEWLINE . INDENT cases DEDENT

    INDENT  shift, and go to state 236


state 214

   71 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block .

    $default  reduce using rule 71 (match_statement)


state 215

   82 except: KEYWORD_EXCEPT COLON block .

    $default  reduce using rule 82 (except)


state 216

   83 except: KEYWORD_EXCEPT member_expression COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 237


state 217

   84 finally: KEYWORD_FINALLY COLON block .

    $default  reduce using rule 84 (finally)


state 218

   80 try_statement: try except_statements else_statement finally .

    $default  reduce using rule 80 (try_statement)


state 219

  134 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 134 (else_statement)


state 220

  120 logical_expression: logical_expression . KEYWORD_AND logical_expression
  121                   | logical_expression . KEYWORD_OR logical_expression
  136 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 138
    KEYWORD_OR       shift, and go to state 139
    RIGHT_PARENTHES  shift, and go to state 238


state 221

  135 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 239


state 222

  106 args: args expression COMMA .

    $default  reduce using rule 106 (args)


state 223

  133 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 240


state 224

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON class_block

    COLON  shift, and go to state 241


state 225

   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    NEWLINE  shift, and go to state 242

    class_block  go to state 243


state 226

  138 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 244


state 227

  137 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 245


state 228

  140 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 246


state 229

  112 member_expression: member_expression function_call .
  141 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block
  142              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . '.' IDENTIFIER COLON block

    COLON  shift, and go to state 247
    '.'    shift, and go to state 248

    COLON     [reduce using rule 112 (member_expression)]
    $default  reduce using rule 112 (member_expression)


state 230

  139 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 77

    function_call  go to state 249


state 231

    4 statements: statements . statement
    6           | statements . NEWLINE
  104 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    DEDENT            shift, and go to state 250
    NEWLINE           shift, and go to state 98
    KEYWORD_MATCH     shift, and go to state 27

    statement                  go to state 99
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    conditional_statement      go to state 51
    if_statement               go to state 52
    for_statement              go to state 53
    while_statement            go to state 54


state 232

  103 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 251


state 233

   39 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 252


state 234

  144 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 253


state 235

   89 with_stmt: with_stmt COMMA function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 254


state 236

   72 match_block: NEWLINE INDENT . cases DEDENT

    KEYWORD_CASE  shift, and go to state 255

    cases  go to state 256
    case   go to state 257


state 237

   83 except: KEYWORD_EXCEPT member_expression COLON block .

    $default  reduce using rule 83 (except)


state 238

  136 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 258


state 239

  135 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 135 (elif_statement)


state 240

  133 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 133 (if_statement)


state 241

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . class_block

    NEWLINE  shift, and go to state 242

    class_block  go to state 259


state 242

   93 class_block: NEWLINE . INDENT class_body DEDENT

    INDENT  shift, and go to state 260


state 243

   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    DEDENT  shift, and go to state 261


state 244

  138 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 138 (for_statement)


state 245

  137 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 137 (for_statement)


state 246

  140 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 140 (for_statement)


state 247

  141 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 262


state 248

  142 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 263


state 249

  139 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 264


state 250

  104 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 104 (block)


state 251

  103 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 265


state 252

   39 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 39 (import_statment)


state 253

  144 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 144 (while_statement)


state 254

   89 with_stmt: with_stmt COMMA function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 89 (with_stmt)


state 255

   75 case: KEYWORD_CASE . expression COLON block

    IDENTIFIER     shift, and go to state 57
    LIST           shift, and go to state 58
    LITERALSTRING  shift, and go to state 59
    KEYWORD_NONE   shift, and go to state 62
    INTEGER        shift, and go to state 65
    FLOAT          shift, and go to state 66
    '-'            shift, and go to state 67
    '|'            shift, and go to state 68
    '('            shift, and go to state 69

    expression         go to state 266
    number             go to state 71
    function_call      go to state 72
    member_expression  go to state 73


state 256

   72 match_block: NEWLINE INDENT cases . DEDENT
   73 cases: cases . case

    DEDENT        shift, and go to state 267
    KEYWORD_CASE  shift, and go to state 255

    case  go to state 268


state 257

   74 cases: case .

    $default  reduce using rule 74 (cases)


state 258

  136 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 269


state 259

   92 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block .

    $default  reduce using rule 92 (class_with_inheritance)


state 260

   93 class_block: NEWLINE INDENT . class_body DEDENT

    $default  reduce using rule 94 (class_body)

    class_body  go to state 270


state 261

   98 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 98 (class_without_inheritance)


state 262

  141 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 141 (for_statement)


state 263

  142 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER . COLON block

    COLON  shift, and go to state 271


state 264

  139 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 272


state 265

  103 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 103 (function)


state 266

   41 expression: expression . ADD expression
   42           | expression . MINUS expression
   43           | expression . MULTIPLY expression
   44           | expression . DIVIDE expression
   45           | expression . POWER expression
   46           | expression . MODULO expression
   75 case: KEYWORD_CASE expression . COLON block

    ADD       shift, and go to state 124
    MINUS     shift, and go to state 125
    MULTIPLY  shift, and go to state 126
    DIVIDE    shift, and go to state 127
    POWER     shift, and go to state 128
    MODULO    shift, and go to state 129
    COLON     shift, and go to state 273


state 267

   72 match_block: NEWLINE INDENT cases DEDENT .

    $default  reduce using rule 72 (match_block)


state 268

   73 cases: cases case .

    $default  reduce using rule 73 (cases)


state 269

  136 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 136 (elif_statement)


state 270

   93 class_block: NEWLINE INDENT class_body . DEDENT
   95 class_body: class_body . assignment
   96           | class_body . function
   97           | class_body . NEWLINE

    IDENTIFIER   shift, and go to state 274
    KEYWORD_DEF  shift, and go to state 15
    DEDENT       shift, and go to state 275
    NEWLINE      shift, and go to state 276

    assignment  go to state 277
    function    go to state 278


state 271

  142 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 279


state 272

  139 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 139 (for_statement)


state 273

   75 case: KEYWORD_CASE expression COLON . block

    NEWLINE  shift, and go to state 147

    block  go to state 280


state 274

   40 assignment: IDENTIFIER . ASSIGN number

    ASSIGN  shift, and go to state 55


state 275

   93 class_block: NEWLINE INDENT class_body DEDENT .

    $default  reduce using rule 93 (class_block)


state 276

   97 class_body: class_body NEWLINE .

    $default  reduce using rule 97 (class_body)


state 277

   95 class_body: class_body assignment .

    $default  reduce using rule 95 (class_body)


state 278

   96 class_body: class_body function .

    $default  reduce using rule 96 (class_body)


state 279

  142 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block .

    $default  reduce using rule 142 (for_statement)


state 280

   75 case: KEYWORD_CASE expression COLON block .

    $default  reduce using rule 75 (case)
