Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALCHAR
   MULTILINESTRING
   KEYWORD_AWAIT
   KEYWORD_IS
   KEYWORD_LAMBDA
   KEYWORD_ASYNC
   OPERATORS
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   '+'
   '*'
   '/'


State 0 conflicts: 1 shift/reduce
State 28 conflicts: 24 shift/reduce
State 32 conflicts: 2 shift/reduce
State 56 conflicts: 9 shift/reduce
State 72 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 79 conflicts: 26 reduce/reduce
State 82 conflicts: 9 shift/reduce
State 97 conflicts: 26 reduce/reduce
State 124 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 129 conflicts: 2 shift/reduce
State 131 conflicts: 6 shift/reduce
State 132 conflicts: 6 shift/reduce
State 151 conflicts: 9 shift/reduce
State 157 conflicts: 9 shift/reduce
State 197 conflicts: 6 shift/reduce
State 198 conflicts: 6 shift/reduce
State 199 conflicts: 6 shift/reduce
State 200 conflicts: 6 shift/reduce
State 201 conflicts: 6 shift/reduce
State 202 conflicts: 6 shift/reduce
State 209 conflicts: 2 shift/reduce
State 210 conflicts: 2 shift/reduce
State 247 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | prog statements

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement
    9          | NEWLINE
   10          | COMMENT
   11          | MULTILINECOMMENT

   12 simple_statement: assignment
   13                 | return_statement
   14                 | yield_statement
   15                 | assert_statement
   16                 | raise_statement
   17                 | global_statement
   18                 | nonlocal_statement
   19                 | del_statment
   20                 | import_statments
   21                 | function_call
   22                 | with_statment
   23                 | KEYWORD_PASS
   24                 | KEYWORD_BREAK
   25                 | KEYWORD_CONTINUE

   26 compound_statement: function
   27                   | conditional_statement
   28                   | class
   29                   | for_statement
   30                   | while_statement
   31                   | match_statement
   32                   | try_statement

   33 import_statments: import_statment NEWLINE
   34                 | import_statments import_statment

   35 import_statment: KEYWORD_IMPORT member_expression
   36                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM member_expression KEYWORD_IMPORT MULTIPLY
   38                | KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

   40 assignment: member_expression ASSIGN expression
   41           | member_expression ASSIGNADD expression
   42           | member_expression ASSIGNDIVIDE expression
   43           | member_expression ASSIGNEXPONINTIATION expression
   44           | member_expression ASSIGNMULTIPLY expression
   45           | member_expression ASSIGNMODULO expression
   46           | member_expression ASSIGNMINUS expression
   47           | member_expression ASSIGNFLOORDIVISION expression
   48           | member_expression ASSIGNRIGHTSHIFT expression
   49           | member_expression ASSIGNLEFTSHIFT expression

   50 expression: expression ADD expression
   51           | expression MINUS expression
   52           | expression MULTIPLY expression
   53           | expression DIVIDE expression
   54           | expression POWER expression
   55           | expression MODULO expression
   56           | '|' expression
   57           | '(' expression ')'
   58           | '-' expression
   59           | number
   60           | member_expression
   61           | function_call
   62           | LITERALSTRING
   63           | LIST
   64           | KEYWORD_NONE

   65 number: INTEGER
   66       | FLOAT

   67 del_statment: KEYWORD_DEL IDENTIFIER
   68             | KEYWORD_DEL IDENTIFIER LIST

   69 return_statement: KEYWORD_RETURN expression
   70                 | KEYWORD_RETURN logical_expression

   71 yield_statement: KEYWORD_YIELD expression

   72 assert_statement: KEYWORD_ASSERT logical_expression
   73                 | KEYWORD_ASSERT logical_expression COMMA LITERALSTRING

   74 raise_statement: KEYWORD_RAISE function_call
   75                | KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER

   76 global_statement: KEYWORD_GLOBAL global_nonlocal_targets

   77 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets

   78 global_nonlocal_targets: IDENTIFIER
   79                        | IDENTIFIER COMMA global_nonlocal_targets

   80 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block

   81 match_block: NEWLINE INDENT cases DEDENT

   82 cases: cases case
   83      | case

   84 case: KEYWORD_CASE expression COLON block

   85 try_statement: try finally
   86              | try except_statements
   87              | try except_statements finally
   88              | try except_statements else_statement
   89              | try except_statements else_statement finally

   90 try: KEYWORD_TRY COLON block

   91 except: KEYWORD_EXCEPT COLON block
   92       | KEYWORD_EXCEPT member_expression COLON block

   93 finally: KEYWORD_FINALLY COLON block

   94 except_statements: except_statements except
   95                  | except

   96 with_statment: KEYWORD_WITH with_stmt COLON block

   97 with_stmt: function_call KEYWORD_AS IDENTIFIER
   98          | with_stmt COMMA function_call KEYWORD_AS IDENTIFIER

   99 class: class_with_inheritance
  100      | class_without_inheritance

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

  102 class_block: /* empty */
  103            | class_block assignment
  104            | class_block function
  105            | class_block NEWLINE

  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

  107 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
  108              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES
  109              | IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  110              | IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES

  111 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

  112 block: NEWLINE INDENT statements DEDENT

  113 args: /* empty */
  114     | args expression COMMA
  115     | args expression
  116     | expression COMMA
  117     | expression

  118 member_expression: IDENTIFIER
  119                  | member_expression IDENTIFIER
  120                  | member_expression function_call

  121 logical_expression: expression
  122                   | expression GREATEROREQUAL expression
  123                   | expression GREATERTHAN expression
  124                   | expression LESSOREQUAL expression
  125                   | expression LESSTHAN expression
  126                   | expression EQUAL expression
  127                   | expression NOTEQUAL expression
  128                   | logical_expression KEYWORD_AND logical_expression
  129                   | logical_expression KEYWORD_OR logical_expression
  130                   | KEYWORD_NOT logical_expression
  131                   | KEYWORD_TRUE
  132                   | KEYWORD_FALSE

  133 conditional_statement: if_statement elif_else

  134 elif_else: /* empty */
  135          | elif_stmts else_statement
  136          | elif_stmts
  137          | else_statement

  138 elif_stmts: elif_statement
  139           | elif_stmts elif_statement

  140 if_statement: KEYWORD_IF logical_expression COLON block
  141             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  142 else_statement: KEYWORD_ELSE COLON block

  143 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
  144               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  145 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
  146              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
  147              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  148              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
  149              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

  151 while_statement: KEYWORD_WHILE logical_expression COLON block
  152                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 57
')' (41) 57
'*' (42)
'+' (43)
'-' (45) 58
'.' (46) 150
'/' (47)
'|' (124) 56
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 36 38 39 67 68 75 78 79 80 97 98 101 106 107 108 109
    110 111 118 119 145 146 148 149 150
LIST (262) 63 68 146
LITERALSTRING (263) 62 73 109
LITERALCHAR (264)
KEYWORD_FALSE (265) 132
KEYWORD_TRUE (266) 131
MULTILINESTRING (267)
KEYWORD_AWAIT (268)
KEYWORD_IF (269) 140 141
KEYWORD_ELSE (270) 142
KEYWORD_ELSE_IF (271) 143 144
KEYWORD_IMPORT (272) 35 36 37 38 39
KEYWORD_PASS (273) 23
KEYWORD_NONE (274) 64
KEYWORD_BREAK (275) 24
KEYWORD_EXCEPT (276) 91 92
KEYWORD_IN (277) 145 146 147 148 149 150
KEYWORD_RAISE (278) 74 75
KEYWORD_CLASS (279) 101 106
KEYWORD_FINALLY (280) 93
KEYWORD_IS (281)
KEYWORD_RETURN (282) 69 70
KEYWORD_AND (283) 128
KEYWORD_CONTINUE (284) 25
KEYWORD_FOR (285) 145 146 147 148 149 150
KEYWORD_LAMBDA (286)
KEYWORD_TRY (287) 90
KEYWORD_AS (288) 38 39 97 98
KEYWORD_DEF (289) 111
KEYWORD_FROM (290) 36 37 39 75
KEYWORD_NONLOCAL (291) 77
KEYWORD_WHILE (292) 151 152
KEYWORD_ASSERT (293) 72 73
KEYWORD_DEL (294) 67 68
KEYWORD_GLOBAL (295) 76
KEYWORD_NOT (296) 130
KEYWORD_WITH (297) 96
KEYWORD_ASYNC (298)
KEYWORD_OR (299) 129
KEYWORD_YIELD (300) 71
OPERATORS (301)
COMMENT (302) 10
ADD (303) 50
MINUS (304) 51
MULTIPLY (305) 37 52
MULTILINECOMMENT (306) 11
DIVIDE (307) 53
POWER (308) 54
MODULO (309) 55
ASSIGN (310) 40
ASSIGNADD (311) 41
ASSIGNMINUS (312) 46
ASSIGNMULTIPLY (313) 44
ASSIGNDIVIDE (314) 42
ASSIGNMODULO (315) 45
ASSIGNFLOORDIVISION (316) 47
ASSIGNEXPONINTIATION (317) 43
ASSIGNBITWISEAND (318)
ASSIGNBITWISEOR (319)
ASSIGNBITWISEXOR (320)
ASSIGNRIGHTSHIFT (321) 48
ASSIGNLEFTSHIFT (322) 49
EQUAL (323) 126
NOT (324)
NOTEQUAL (325) 127
GREATERTHAN (326) 123
GREATEROREQUAL (327) 122
LESSTHAN (328) 125
LESSOREQUAL (329) 124
LEFT_PARENTHES (330) 101 107 108 109 110 111 141 144 147 152
RIGHT_PARENTHES (331) 101 107 108 109 110 111 141 144 147 152
LEFT_BRACES (332)
RIGHT_BRACES (333)
LEFT_BRACKETS (334)
RIGHT_BRACKETS (335)
COLON (336) 80 84 90 91 92 93 96 101 106 111 140 141 142 143 144 145
    146 147 148 149 150 151 152
COMMA (337) 73 79 98 114 116
SEMICOLON (338)
INTEGER (339) 65
FLOAT (340) 66
DEDENT (341) 81 101 106 112
INDENT (342) 81 101 106 112
NEWLINE (343) 2 6 9 33 81 101 105 106 112
KEYWORD_MATCH (344) 80
KEYWORD_CASE (345) 84
UMINUS (346)


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
prog (101)
    on left: 1 2 3, on right: 0 3
statements (102)
    on left: 4 5 6, on right: 3 4 6 112
statement (103)
    on left: 7 8 9 10 11, on right: 4 5
simple_statement (104)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right: 8
compound_statement (105)
    on left: 26 27 28 29 30 31 32, on right: 7
import_statments (106)
    on left: 33 34, on right: 20 34
import_statment (107)
    on left: 35 36 37 38 39, on right: 33 34
assignment (108)
    on left: 40 41 42 43 44 45 46 47 48 49, on right: 12 103
expression (109)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64, on right:
    40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 69 71
    84 114 115 116 117 121 122 123 124 125 126 127
number (110)
    on left: 65 66, on right: 59 108
del_statment (111)
    on left: 67 68, on right: 19
return_statement (112)
    on left: 69 70, on right: 13
yield_statement (113)
    on left: 71, on right: 14
assert_statement (114)
    on left: 72 73, on right: 15
raise_statement (115)
    on left: 74 75, on right: 16
global_statement (116)
    on left: 76, on right: 17
nonlocal_statement (117)
    on left: 77, on right: 18
global_nonlocal_targets (118)
    on left: 78 79, on right: 76 77 79
match_statement (119)
    on left: 80, on right: 31
match_block (120)
    on left: 81, on right: 80
cases (121)
    on left: 82 83, on right: 81 82
case (122)
    on left: 84, on right: 82 83
try_statement (123)
    on left: 85 86 87 88 89, on right: 32
try (124)
    on left: 90, on right: 85 86 87 88 89
except (125)
    on left: 91 92, on right: 94 95
finally (126)
    on left: 93, on right: 85 87 89
except_statements (127)
    on left: 94 95, on right: 86 87 88 89 94
with_statment (128)
    on left: 96, on right: 22
with_stmt (129)
    on left: 97 98, on right: 96 98
class (130)
    on left: 99 100, on right: 28
class_with_inheritance (131)
    on left: 101, on right: 99
class_block (132)
    on left: 102 103 104 105, on right: 101 103 104 105 106
class_without_inheritance (133)
    on left: 106, on right: 100
function_call (134)
    on left: 107 108 109 110, on right: 21 61 74 75 97 98 110 120 145
    147 149 150
function (135)
    on left: 111, on right: 26 104
block (136)
    on left: 112, on right: 84 90 91 92 93 96 111 140 141 142 143 144
    145 146 147 148 149 150 151 152
args (137)
    on left: 113 114 115 116 117, on right: 101 107 111 114 115 147
member_expression (138)
    on left: 118 119 120, on right: 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 60 92 119 120 148 149 150
logical_expression (139)
    on left: 121 122 123 124 125 126 127 128 129 130 131 132, on right:
    70 72 73 128 129 130 140 141 143 144 151 152
conditional_statement (140)
    on left: 133, on right: 27
elif_else (141)
    on left: 134 135 136 137, on right: 133
elif_stmts (142)
    on left: 138 139, on right: 135 136 139
if_statement (143)
    on left: 140 141, on right: 133
else_statement (144)
    on left: 142, on right: 88 89 135 137
elif_statement (145)
    on left: 143 144, on right: 138 139
for_statement (146)
    on left: 145 146 147 148 149 150, on right: 29
while_statement (147)
    on left: 151 152, on right: 30


state 0

    0 $accept: . prog $end

    NEWLINE  shift, and go to state 1

    NEWLINE   [reduce using rule 1 (prog)]
    $default  reduce using rule 1 (prog)

    prog  go to state 2


state 1

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 2

    0 $accept: prog . $end
    3 prog: prog . statements

    $end              shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 26
    KEYWORD_MATCH     shift, and go to state 27

    statements                 go to state 28
    statement                  go to state 29
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 3

    0 $accept: prog $end .

    $default  accept


state 4

  107 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  108              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  109              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  110              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
  118 member_expression: IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 56

    $default  reduce using rule 118 (member_expression)


state 5

  140 if_statement: KEYWORD_IF . logical_expression COLON block
  141             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    LEFT_PARENTHES  shift, and go to state 63
    INTEGER         shift, and go to state 64
    FLOAT           shift, and go to state 65
    '-'             shift, and go to state 66
    '|'             shift, and go to state 67
    '('             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 73


state 6

   35 import_statment: KEYWORD_IMPORT . member_expression
   38                | KEYWORD_IMPORT . member_expression KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 74

    member_expression  go to state 75


state 7

   23 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 23 (simple_statement)


state 8

   24 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 24 (simple_statement)


state 9

   74 raise_statement: KEYWORD_RAISE . function_call
   75                | KEYWORD_RAISE . function_call KEYWORD_FROM IDENTIFIER

    IDENTIFIER  shift, and go to state 76

    function_call  go to state 77


state 10

  101 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
  106 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 78


state 11

   69 return_statement: KEYWORD_RETURN . expression
   70                 | KEYWORD_RETURN . logical_expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 79
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 80


state 12

   25 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 25 (simple_statement)


state 13

  145 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
  146              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
  147              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  148              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
  149              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  150              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER      shift, and go to state 81
    LEFT_PARENTHES  shift, and go to state 82


state 14

   90 try: KEYWORD_TRY . COLON block

    COLON  shift, and go to state 83


state 15

  111 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 84


state 16

   36 import_statment: KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM . member_expression KEYWORD_IMPORT MULTIPLY
   39                | KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 74

    member_expression  go to state 85


state 17

   77 nonlocal_statement: KEYWORD_NONLOCAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 86

    global_nonlocal_targets  go to state 87


state 18

  151 while_statement: KEYWORD_WHILE . logical_expression COLON block
  152                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    LEFT_PARENTHES  shift, and go to state 88
    INTEGER         shift, and go to state 64
    FLOAT           shift, and go to state 65
    '-'             shift, and go to state 66
    '|'             shift, and go to state 67
    '('             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 89


state 19

   72 assert_statement: KEYWORD_ASSERT . logical_expression
   73                 | KEYWORD_ASSERT . logical_expression COMMA LITERALSTRING

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 90


state 20

   67 del_statment: KEYWORD_DEL . IDENTIFIER
   68             | KEYWORD_DEL . IDENTIFIER LIST

    IDENTIFIER  shift, and go to state 91


state 21

   76 global_statement: KEYWORD_GLOBAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 86

    global_nonlocal_targets  go to state 92


state 22

   96 with_statment: KEYWORD_WITH . with_stmt COLON block

    IDENTIFIER  shift, and go to state 76

    with_stmt      go to state 93
    function_call  go to state 94


state 23

   71 yield_statement: KEYWORD_YIELD . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 95
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 24

   10 statement: COMMENT .

    $default  reduce using rule 10 (statement)


state 25

   11 statement: MULTILINECOMMENT .

    $default  reduce using rule 11 (statement)


state 26

    9 statement: NEWLINE .

    $default  reduce using rule 9 (statement)


state 27

   80 match_statement: KEYWORD_MATCH . IDENTIFIER COLON match_block

    IDENTIFIER  shift, and go to state 96


state 28

    3 prog: prog statements .
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 97
    KEYWORD_MATCH     shift, and go to state 27

    IDENTIFIER        [reduce using rule 3 (prog)]
    KEYWORD_IF        [reduce using rule 3 (prog)]
    KEYWORD_IMPORT    [reduce using rule 3 (prog)]
    KEYWORD_PASS      [reduce using rule 3 (prog)]
    KEYWORD_BREAK     [reduce using rule 3 (prog)]
    KEYWORD_RAISE     [reduce using rule 3 (prog)]
    KEYWORD_CLASS     [reduce using rule 3 (prog)]
    KEYWORD_RETURN    [reduce using rule 3 (prog)]
    KEYWORD_CONTINUE  [reduce using rule 3 (prog)]
    KEYWORD_FOR       [reduce using rule 3 (prog)]
    KEYWORD_TRY       [reduce using rule 3 (prog)]
    KEYWORD_DEF       [reduce using rule 3 (prog)]
    KEYWORD_FROM      [reduce using rule 3 (prog)]
    KEYWORD_NONLOCAL  [reduce using rule 3 (prog)]
    KEYWORD_WHILE     [reduce using rule 3 (prog)]
    KEYWORD_ASSERT    [reduce using rule 3 (prog)]
    KEYWORD_DEL       [reduce using rule 3 (prog)]
    KEYWORD_GLOBAL    [reduce using rule 3 (prog)]
    KEYWORD_WITH      [reduce using rule 3 (prog)]
    KEYWORD_YIELD     [reduce using rule 3 (prog)]
    COMMENT           [reduce using rule 3 (prog)]
    MULTILINECOMMENT  [reduce using rule 3 (prog)]
    NEWLINE           [reduce using rule 3 (prog)]
    KEYWORD_MATCH     [reduce using rule 3 (prog)]
    $default          reduce using rule 3 (prog)

    statement                  go to state 98
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 29

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 30

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 31

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 32

   20 simple_statement: import_statments .
   34 import_statments: import_statments . import_statment

    KEYWORD_IMPORT  shift, and go to state 6
    KEYWORD_FROM    shift, and go to state 16

    KEYWORD_IMPORT  [reduce using rule 20 (simple_statement)]
    KEYWORD_FROM    [reduce using rule 20 (simple_statement)]
    $default        reduce using rule 20 (simple_statement)

    import_statment  go to state 99


state 33

   33 import_statments: import_statment . NEWLINE

    NEWLINE  shift, and go to state 100


state 34

   12 simple_statement: assignment .

    $default  reduce using rule 12 (simple_statement)


state 35

   19 simple_statement: del_statment .

    $default  reduce using rule 19 (simple_statement)


state 36

   13 simple_statement: return_statement .

    $default  reduce using rule 13 (simple_statement)


state 37

   14 simple_statement: yield_statement .

    $default  reduce using rule 14 (simple_statement)


state 38

   15 simple_statement: assert_statement .

    $default  reduce using rule 15 (simple_statement)


state 39

   16 simple_statement: raise_statement .

    $default  reduce using rule 16 (simple_statement)


state 40

   17 simple_statement: global_statement .

    $default  reduce using rule 17 (simple_statement)


state 41

   18 simple_statement: nonlocal_statement .

    $default  reduce using rule 18 (simple_statement)


state 42

   31 compound_statement: match_statement .

    $default  reduce using rule 31 (compound_statement)


state 43

   32 compound_statement: try_statement .

    $default  reduce using rule 32 (compound_statement)


state 44

   85 try_statement: try . finally
   86              | try . except_statements
   87              | try . except_statements finally
   88              | try . except_statements else_statement
   89              | try . except_statements else_statement finally

    KEYWORD_EXCEPT   shift, and go to state 101
    KEYWORD_FINALLY  shift, and go to state 102

    except             go to state 103
    finally            go to state 104
    except_statements  go to state 105


state 45

   22 simple_statement: with_statment .

    $default  reduce using rule 22 (simple_statement)


state 46

   28 compound_statement: class .

    $default  reduce using rule 28 (compound_statement)


state 47

   99 class: class_with_inheritance .

    $default  reduce using rule 99 (class)


state 48

  100 class: class_without_inheritance .

    $default  reduce using rule 100 (class)


state 49

   21 simple_statement: function_call .

    $default  reduce using rule 21 (simple_statement)


state 50

   26 compound_statement: function .

    $default  reduce using rule 26 (compound_statement)


state 51

   40 assignment: member_expression . ASSIGN expression
   41           | member_expression . ASSIGNADD expression
   42           | member_expression . ASSIGNDIVIDE expression
   43           | member_expression . ASSIGNEXPONINTIATION expression
   44           | member_expression . ASSIGNMULTIPLY expression
   45           | member_expression . ASSIGNMODULO expression
   46           | member_expression . ASSIGNMINUS expression
   47           | member_expression . ASSIGNFLOORDIVISION expression
   48           | member_expression . ASSIGNRIGHTSHIFT expression
   49           | member_expression . ASSIGNLEFTSHIFT expression
  119 member_expression: member_expression . IDENTIFIER
  120                  | member_expression . function_call

    IDENTIFIER            shift, and go to state 106
    ASSIGN                shift, and go to state 107
    ASSIGNADD             shift, and go to state 108
    ASSIGNMINUS           shift, and go to state 109
    ASSIGNMULTIPLY        shift, and go to state 110
    ASSIGNDIVIDE          shift, and go to state 111
    ASSIGNMODULO          shift, and go to state 112
    ASSIGNFLOORDIVISION   shift, and go to state 113
    ASSIGNEXPONINTIATION  shift, and go to state 114
    ASSIGNRIGHTSHIFT      shift, and go to state 115
    ASSIGNLEFTSHIFT       shift, and go to state 116

    function_call  go to state 117


state 52

   27 compound_statement: conditional_statement .

    $default  reduce using rule 27 (compound_statement)


state 53

  133 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 118
    KEYWORD_ELSE_IF  shift, and go to state 119

    $default  reduce using rule 134 (elif_else)

    elif_else       go to state 120
    elif_stmts      go to state 121
    else_statement  go to state 122
    elif_statement  go to state 123


state 54

   29 compound_statement: for_statement .

    $default  reduce using rule 29 (compound_statement)


state 55

   30 compound_statement: while_statement .

    $default  reduce using rule 30 (compound_statement)


state 56

  107 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
  108              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES
  109              | IDENTIFIER LEFT_PARENTHES . LITERALSTRING RIGHT_PARENTHES
  110              | IDENTIFIER LEFT_PARENTHES . function_call RIGHT_PARENTHES

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 124
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    IDENTIFIER     [reduce using rule 113 (args)]
    LIST           [reduce using rule 113 (args)]
    LITERALSTRING  [reduce using rule 113 (args)]
    KEYWORD_NONE   [reduce using rule 113 (args)]
    INTEGER        [reduce using rule 113 (args)]
    FLOAT          [reduce using rule 113 (args)]
    '-'            [reduce using rule 113 (args)]
    '|'            [reduce using rule 113 (args)]
    '('            [reduce using rule 113 (args)]
    $default       reduce using rule 113 (args)

    expression         go to state 125
    number             go to state 126
    function_call      go to state 127
    args               go to state 128
    member_expression  go to state 72


state 57

   63 expression: LIST .

    $default  reduce using rule 63 (expression)


state 58

   62 expression: LITERALSTRING .

    $default  reduce using rule 62 (expression)


state 59

  132 logical_expression: KEYWORD_FALSE .

    $default  reduce using rule 132 (logical_expression)


state 60

  131 logical_expression: KEYWORD_TRUE .

    $default  reduce using rule 131 (logical_expression)


state 61

   64 expression: KEYWORD_NONE .

    $default  reduce using rule 64 (expression)


state 62

  130 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 129


state 63

  141 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 130


state 64

   65 number: INTEGER .

    $default  reduce using rule 65 (number)


state 65

   66 number: FLOAT .

    $default  reduce using rule 66 (number)


state 66

   58 expression: '-' . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 131
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 67

   56 expression: '|' . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 132
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 68

   57 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 133
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 69

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  121 logical_expression: expression .
  122                   | expression . GREATEROREQUAL expression
  123                   | expression . GREATERTHAN expression
  124                   | expression . LESSOREQUAL expression
  125                   | expression . LESSTHAN expression
  126                   | expression . EQUAL expression
  127                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 134
    MINUS           shift, and go to state 135
    MULTIPLY        shift, and go to state 136
    DIVIDE          shift, and go to state 137
    POWER           shift, and go to state 138
    MODULO          shift, and go to state 139
    EQUAL           shift, and go to state 140
    NOTEQUAL        shift, and go to state 141
    GREATERTHAN     shift, and go to state 142
    GREATEROREQUAL  shift, and go to state 143
    LESSTHAN        shift, and go to state 144
    LESSOREQUAL     shift, and go to state 145

    $default  reduce using rule 121 (logical_expression)


state 70

   59 expression: number .

    $default  reduce using rule 59 (expression)


state 71

   61 expression: function_call .

    $default  reduce using rule 61 (expression)


state 72

   60 expression: member_expression .
  119 member_expression: member_expression . IDENTIFIER
  120                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 106

    IDENTIFIER  [reduce using rule 60 (expression)]
    $default    reduce using rule 60 (expression)

    function_call  go to state 117


state 73

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  140 if_statement: KEYWORD_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147
    COLON        shift, and go to state 148


state 74

  118 member_expression: IDENTIFIER .

    $default  reduce using rule 118 (member_expression)


state 75

   35 import_statment: KEYWORD_IMPORT member_expression .
   38                | KEYWORD_IMPORT member_expression . KEYWORD_AS IDENTIFIER
  119 member_expression: member_expression . IDENTIFIER
  120                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 106
    KEYWORD_AS  shift, and go to state 149

    IDENTIFIER  [reduce using rule 35 (import_statment)]
    $default    reduce using rule 35 (import_statment)

    function_call  go to state 117


state 76

  107 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  108              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  109              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  110              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 56


state 77

   74 raise_statement: KEYWORD_RAISE function_call .
   75                | KEYWORD_RAISE function_call . KEYWORD_FROM IDENTIFIER

    KEYWORD_FROM  shift, and go to state 150

    KEYWORD_FROM  [reduce using rule 74 (raise_statement)]
    $default      reduce using rule 74 (raise_statement)


state 78

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 151
    COLON           shift, and go to state 152


state 79

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   69 return_statement: KEYWORD_RETURN expression .
  121 logical_expression: expression .
  122                   | expression . GREATEROREQUAL expression
  123                   | expression . GREATERTHAN expression
  124                   | expression . LESSOREQUAL expression
  125                   | expression . LESSTHAN expression
  126                   | expression . EQUAL expression
  127                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 134
    MINUS           shift, and go to state 135
    MULTIPLY        shift, and go to state 136
    DIVIDE          shift, and go to state 137
    POWER           shift, and go to state 138
    MODULO          shift, and go to state 139
    EQUAL           shift, and go to state 140
    NOTEQUAL        shift, and go to state 141
    GREATERTHAN     shift, and go to state 142
    GREATEROREQUAL  shift, and go to state 143
    LESSTHAN        shift, and go to state 144
    LESSOREQUAL     shift, and go to state 145

    $end              reduce using rule 69 (return_statement)
    $end              [reduce using rule 121 (logical_expression)]
    IDENTIFIER        reduce using rule 69 (return_statement)
    IDENTIFIER        [reduce using rule 121 (logical_expression)]
    KEYWORD_IF        reduce using rule 69 (return_statement)
    KEYWORD_IF        [reduce using rule 121 (logical_expression)]
    KEYWORD_IMPORT    reduce using rule 69 (return_statement)
    KEYWORD_IMPORT    [reduce using rule 121 (logical_expression)]
    KEYWORD_PASS      reduce using rule 69 (return_statement)
    KEYWORD_PASS      [reduce using rule 121 (logical_expression)]
    KEYWORD_BREAK     reduce using rule 69 (return_statement)
    KEYWORD_BREAK     [reduce using rule 121 (logical_expression)]
    KEYWORD_RAISE     reduce using rule 69 (return_statement)
    KEYWORD_RAISE     [reduce using rule 121 (logical_expression)]
    KEYWORD_CLASS     reduce using rule 69 (return_statement)
    KEYWORD_CLASS     [reduce using rule 121 (logical_expression)]
    KEYWORD_RETURN    reduce using rule 69 (return_statement)
    KEYWORD_RETURN    [reduce using rule 121 (logical_expression)]
    KEYWORD_AND       reduce using rule 121 (logical_expression)
    KEYWORD_CONTINUE  reduce using rule 69 (return_statement)
    KEYWORD_CONTINUE  [reduce using rule 121 (logical_expression)]
    KEYWORD_FOR       reduce using rule 69 (return_statement)
    KEYWORD_FOR       [reduce using rule 121 (logical_expression)]
    KEYWORD_TRY       reduce using rule 69 (return_statement)
    KEYWORD_TRY       [reduce using rule 121 (logical_expression)]
    KEYWORD_DEF       reduce using rule 69 (return_statement)
    KEYWORD_DEF       [reduce using rule 121 (logical_expression)]
    KEYWORD_FROM      reduce using rule 69 (return_statement)
    KEYWORD_FROM      [reduce using rule 121 (logical_expression)]
    KEYWORD_NONLOCAL  reduce using rule 69 (return_statement)
    KEYWORD_NONLOCAL  [reduce using rule 121 (logical_expression)]
    KEYWORD_WHILE     reduce using rule 69 (return_statement)
    KEYWORD_WHILE     [reduce using rule 121 (logical_expression)]
    KEYWORD_ASSERT    reduce using rule 69 (return_statement)
    KEYWORD_ASSERT    [reduce using rule 121 (logical_expression)]
    KEYWORD_DEL       reduce using rule 69 (return_statement)
    KEYWORD_DEL       [reduce using rule 121 (logical_expression)]
    KEYWORD_GLOBAL    reduce using rule 69 (return_statement)
    KEYWORD_GLOBAL    [reduce using rule 121 (logical_expression)]
    KEYWORD_WITH      reduce using rule 69 (return_statement)
    KEYWORD_WITH      [reduce using rule 121 (logical_expression)]
    KEYWORD_OR        reduce using rule 121 (logical_expression)
    KEYWORD_YIELD     reduce using rule 69 (return_statement)
    KEYWORD_YIELD     [reduce using rule 121 (logical_expression)]
    COMMENT           reduce using rule 69 (return_statement)
    COMMENT           [reduce using rule 121 (logical_expression)]
    MULTILINECOMMENT  reduce using rule 69 (return_statement)
    MULTILINECOMMENT  [reduce using rule 121 (logical_expression)]
    DEDENT            reduce using rule 69 (return_statement)
    DEDENT            [reduce using rule 121 (logical_expression)]
    NEWLINE           reduce using rule 69 (return_statement)
    NEWLINE           [reduce using rule 121 (logical_expression)]
    KEYWORD_MATCH     reduce using rule 69 (return_statement)
    KEYWORD_MATCH     [reduce using rule 121 (logical_expression)]
    $default          reduce using rule 69 (return_statement)


state 80

   70 return_statement: KEYWORD_RETURN logical_expression .
  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147

    $default  reduce using rule 70 (return_statement)


state 81

  145 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
  146              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
  148              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
  149              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    KEYWORD_IN  shift, and go to state 153


state 82

  147 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    IDENTIFIER     [reduce using rule 113 (args)]
    LIST           [reduce using rule 113 (args)]
    LITERALSTRING  [reduce using rule 113 (args)]
    KEYWORD_NONE   [reduce using rule 113 (args)]
    INTEGER        [reduce using rule 113 (args)]
    FLOAT          [reduce using rule 113 (args)]
    '-'            [reduce using rule 113 (args)]
    '|'            [reduce using rule 113 (args)]
    '('            [reduce using rule 113 (args)]
    $default       reduce using rule 113 (args)

    expression         go to state 125
    number             go to state 70
    function_call      go to state 71
    args               go to state 154
    member_expression  go to state 72


state 83

   90 try: KEYWORD_TRY COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 156


state 84

  111 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 157


state 85

   36 import_statment: KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM member_expression . KEYWORD_IMPORT MULTIPLY
   39                | KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER
  119 member_expression: member_expression . IDENTIFIER
  120                  | member_expression . function_call

    IDENTIFIER      shift, and go to state 106
    KEYWORD_IMPORT  shift, and go to state 158

    function_call  go to state 117


state 86

   78 global_nonlocal_targets: IDENTIFIER .
   79                        | IDENTIFIER . COMMA global_nonlocal_targets

    COMMA  shift, and go to state 159

    $default  reduce using rule 78 (global_nonlocal_targets)


state 87

   77 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets .

    $default  reduce using rule 77 (nonlocal_statement)


state 88

  152 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 160


state 89

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  151 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147
    COLON        shift, and go to state 161


state 90

   72 assert_statement: KEYWORD_ASSERT logical_expression .
   73                 | KEYWORD_ASSERT logical_expression . COMMA LITERALSTRING
  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147
    COMMA        shift, and go to state 162

    $default  reduce using rule 72 (assert_statement)


state 91

   67 del_statment: KEYWORD_DEL IDENTIFIER .
   68             | KEYWORD_DEL IDENTIFIER . LIST

    LIST  shift, and go to state 163

    $default  reduce using rule 67 (del_statment)


state 92

   76 global_statement: KEYWORD_GLOBAL global_nonlocal_targets .

    $default  reduce using rule 76 (global_statement)


state 93

   96 with_statment: KEYWORD_WITH with_stmt . COLON block
   98 with_stmt: with_stmt . COMMA function_call KEYWORD_AS IDENTIFIER

    COLON  shift, and go to state 164
    COMMA  shift, and go to state 165


state 94

   97 with_stmt: function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 166


state 95

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   71 yield_statement: KEYWORD_YIELD expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 71 (yield_statement)


state 96

   80 match_statement: KEYWORD_MATCH IDENTIFIER . COLON match_block

    COLON  shift, and go to state 167


state 97

    6 statements: statements NEWLINE .
    9 statement: NEWLINE .

    $end              reduce using rule 6 (statements)
    $end              [reduce using rule 9 (statement)]
    IDENTIFIER        reduce using rule 6 (statements)
    IDENTIFIER        [reduce using rule 9 (statement)]
    KEYWORD_IF        reduce using rule 6 (statements)
    KEYWORD_IF        [reduce using rule 9 (statement)]
    KEYWORD_IMPORT    reduce using rule 6 (statements)
    KEYWORD_IMPORT    [reduce using rule 9 (statement)]
    KEYWORD_PASS      reduce using rule 6 (statements)
    KEYWORD_PASS      [reduce using rule 9 (statement)]
    KEYWORD_BREAK     reduce using rule 6 (statements)
    KEYWORD_BREAK     [reduce using rule 9 (statement)]
    KEYWORD_RAISE     reduce using rule 6 (statements)
    KEYWORD_RAISE     [reduce using rule 9 (statement)]
    KEYWORD_CLASS     reduce using rule 6 (statements)
    KEYWORD_CLASS     [reduce using rule 9 (statement)]
    KEYWORD_RETURN    reduce using rule 6 (statements)
    KEYWORD_RETURN    [reduce using rule 9 (statement)]
    KEYWORD_CONTINUE  reduce using rule 6 (statements)
    KEYWORD_CONTINUE  [reduce using rule 9 (statement)]
    KEYWORD_FOR       reduce using rule 6 (statements)
    KEYWORD_FOR       [reduce using rule 9 (statement)]
    KEYWORD_TRY       reduce using rule 6 (statements)
    KEYWORD_TRY       [reduce using rule 9 (statement)]
    KEYWORD_DEF       reduce using rule 6 (statements)
    KEYWORD_DEF       [reduce using rule 9 (statement)]
    KEYWORD_FROM      reduce using rule 6 (statements)
    KEYWORD_FROM      [reduce using rule 9 (statement)]
    KEYWORD_NONLOCAL  reduce using rule 6 (statements)
    KEYWORD_NONLOCAL  [reduce using rule 9 (statement)]
    KEYWORD_WHILE     reduce using rule 6 (statements)
    KEYWORD_WHILE     [reduce using rule 9 (statement)]
    KEYWORD_ASSERT    reduce using rule 6 (statements)
    KEYWORD_ASSERT    [reduce using rule 9 (statement)]
    KEYWORD_DEL       reduce using rule 6 (statements)
    KEYWORD_DEL       [reduce using rule 9 (statement)]
    KEYWORD_GLOBAL    reduce using rule 6 (statements)
    KEYWORD_GLOBAL    [reduce using rule 9 (statement)]
    KEYWORD_WITH      reduce using rule 6 (statements)
    KEYWORD_WITH      [reduce using rule 9 (statement)]
    KEYWORD_YIELD     reduce using rule 6 (statements)
    KEYWORD_YIELD     [reduce using rule 9 (statement)]
    COMMENT           reduce using rule 6 (statements)
    COMMENT           [reduce using rule 9 (statement)]
    MULTILINECOMMENT  reduce using rule 6 (statements)
    MULTILINECOMMENT  [reduce using rule 9 (statement)]
    DEDENT            reduce using rule 6 (statements)
    DEDENT            [reduce using rule 9 (statement)]
    NEWLINE           reduce using rule 6 (statements)
    NEWLINE           [reduce using rule 9 (statement)]
    KEYWORD_MATCH     reduce using rule 6 (statements)
    KEYWORD_MATCH     [reduce using rule 9 (statement)]
    $default          reduce using rule 6 (statements)


state 98

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 99

   34 import_statments: import_statments import_statment .

    $default  reduce using rule 34 (import_statments)


state 100

   33 import_statments: import_statment NEWLINE .

    $default  reduce using rule 33 (import_statments)


state 101

   91 except: KEYWORD_EXCEPT . COLON block
   92       | KEYWORD_EXCEPT . member_expression COLON block

    IDENTIFIER  shift, and go to state 74
    COLON       shift, and go to state 168

    member_expression  go to state 169


state 102

   93 finally: KEYWORD_FINALLY . COLON block

    COLON  shift, and go to state 170


state 103

   95 except_statements: except .

    $default  reduce using rule 95 (except_statements)


state 104

   85 try_statement: try finally .

    $default  reduce using rule 85 (try_statement)


state 105

   86 try_statement: try except_statements .
   87              | try except_statements . finally
   88              | try except_statements . else_statement
   89              | try except_statements . else_statement finally
   94 except_statements: except_statements . except

    KEYWORD_ELSE     shift, and go to state 118
    KEYWORD_EXCEPT   shift, and go to state 101
    KEYWORD_FINALLY  shift, and go to state 102

    $default  reduce using rule 86 (try_statement)

    except          go to state 171
    finally         go to state 172
    else_statement  go to state 173


state 106

  107 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  108              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  109              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  110              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
  119 member_expression: member_expression IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 56

    $default  reduce using rule 119 (member_expression)


state 107

   40 assignment: member_expression ASSIGN . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 174
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 108

   41 assignment: member_expression ASSIGNADD . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 175
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 109

   46 assignment: member_expression ASSIGNMINUS . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 176
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 110

   44 assignment: member_expression ASSIGNMULTIPLY . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 177
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 111

   42 assignment: member_expression ASSIGNDIVIDE . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 178
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 112

   45 assignment: member_expression ASSIGNMODULO . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 179
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 113

   47 assignment: member_expression ASSIGNFLOORDIVISION . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 180
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 114

   43 assignment: member_expression ASSIGNEXPONINTIATION . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 181
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 115

   48 assignment: member_expression ASSIGNRIGHTSHIFT . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 182
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 116

   49 assignment: member_expression ASSIGNLEFTSHIFT . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 183
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 117

  120 member_expression: member_expression function_call .

    $default  reduce using rule 120 (member_expression)


state 118

  142 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 184


state 119

  143 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
  144               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    LEFT_PARENTHES  shift, and go to state 185
    INTEGER         shift, and go to state 64
    FLOAT           shift, and go to state 65
    '-'             shift, and go to state 66
    '|'             shift, and go to state 67
    '('             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 186


state 120

  133 conditional_statement: if_statement elif_else .

    $default  reduce using rule 133 (conditional_statement)


state 121

  135 elif_else: elif_stmts . else_statement
  136          | elif_stmts .
  139 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 118
    KEYWORD_ELSE_IF  shift, and go to state 119

    $default  reduce using rule 136 (elif_else)

    else_statement  go to state 187
    elif_statement  go to state 188


state 122

  137 elif_else: else_statement .

    $default  reduce using rule 137 (elif_else)


state 123

  138 elif_stmts: elif_statement .

    $default  reduce using rule 138 (elif_stmts)


state 124

   62 expression: LITERALSTRING .
  109 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 189

    RIGHT_PARENTHES  [reduce using rule 62 (expression)]
    $default         reduce using rule 62 (expression)


state 125

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  116 args: expression . COMMA
  117     | expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139
    COMMA     shift, and go to state 190

    $default  reduce using rule 117 (args)


state 126

   59 expression: number .
  108 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 191

    RIGHT_PARENTHES  [reduce using rule 59 (expression)]
    $default         reduce using rule 59 (expression)


state 127

   61 expression: function_call .
  110 function_call: IDENTIFIER LEFT_PARENTHES function_call . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 192

    RIGHT_PARENTHES  [reduce using rule 61 (expression)]
    $default         reduce using rule 61 (expression)


state 128

  107 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES
  114 args: args . expression COMMA
  115     | args . expression

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_NONE     shift, and go to state 61
    RIGHT_PARENTHES  shift, and go to state 193
    INTEGER          shift, and go to state 64
    FLOAT            shift, and go to state 65
    '-'              shift, and go to state 66
    '|'              shift, and go to state 67
    '('              shift, and go to state 68

    expression         go to state 194
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 129

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  130                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147

    KEYWORD_AND  [reduce using rule 130 (logical_expression)]
    KEYWORD_OR   [reduce using rule 130 (logical_expression)]
    $default     reduce using rule 130 (logical_expression)


state 130

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  141 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 146
    KEYWORD_OR       shift, and go to state 147
    RIGHT_PARENTHES  shift, and go to state 195


state 131

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   58           | '-' expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 58 (expression)]
    MINUS     [reduce using rule 58 (expression)]
    MULTIPLY  [reduce using rule 58 (expression)]
    DIVIDE    [reduce using rule 58 (expression)]
    POWER     [reduce using rule 58 (expression)]
    MODULO    [reduce using rule 58 (expression)]
    $default  reduce using rule 58 (expression)


state 132

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   56           | '|' expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 56 (expression)]
    MINUS     [reduce using rule 56 (expression)]
    MULTIPLY  [reduce using rule 56 (expression)]
    DIVIDE    [reduce using rule 56 (expression)]
    POWER     [reduce using rule 56 (expression)]
    MODULO    [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)


state 133

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   57           | '(' expression . ')'

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139
    ')'       shift, and go to state 196


state 134

   50 expression: expression ADD . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 197
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 135

   51 expression: expression MINUS . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 198
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 136

   52 expression: expression MULTIPLY . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 199
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 137

   53 expression: expression DIVIDE . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 200
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 138

   54 expression: expression POWER . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 201
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 139

   55 expression: expression MODULO . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 202
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 140

  126 logical_expression: expression EQUAL . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 203
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 141

  127 logical_expression: expression NOTEQUAL . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 204
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 142

  123 logical_expression: expression GREATERTHAN . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 205
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 143

  122 logical_expression: expression GREATEROREQUAL . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 206
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 144

  125 logical_expression: expression LESSTHAN . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 207
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 145

  124 logical_expression: expression LESSOREQUAL . expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 208
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 146

  128 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 209


state 147

  129 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 210


state 148

  140 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 211


state 149

   38 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 212


state 150

   75 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM . IDENTIFIER

    IDENTIFIER  shift, and go to state 213


state 151

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    IDENTIFIER     [reduce using rule 113 (args)]
    LIST           [reduce using rule 113 (args)]
    LITERALSTRING  [reduce using rule 113 (args)]
    KEYWORD_NONE   [reduce using rule 113 (args)]
    INTEGER        [reduce using rule 113 (args)]
    FLOAT          [reduce using rule 113 (args)]
    '-'            [reduce using rule 113 (args)]
    '|'            [reduce using rule 113 (args)]
    '('            [reduce using rule 113 (args)]
    $default       reduce using rule 113 (args)

    expression         go to state 125
    number             go to state 70
    function_call      go to state 71
    args               go to state 214
    member_expression  go to state 72


state 152

  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 215


state 153

  145 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
  146              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
  148              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
  149              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 4
    LIST        shift, and go to state 216

    function_call      go to state 217
    member_expression  go to state 218


state 154

  114 args: args . expression COMMA
  115     | args . expression
  147 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_NONE     shift, and go to state 61
    RIGHT_PARENTHES  shift, and go to state 219
    INTEGER          shift, and go to state 64
    FLOAT            shift, and go to state 65
    '-'              shift, and go to state 66
    '|'              shift, and go to state 67
    '('              shift, and go to state 68

    expression         go to state 194
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 155

  112 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 220


state 156

   90 try: KEYWORD_TRY COLON block .

    $default  reduce using rule 90 (try)


state 157

  111 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    IDENTIFIER     [reduce using rule 113 (args)]
    LIST           [reduce using rule 113 (args)]
    LITERALSTRING  [reduce using rule 113 (args)]
    KEYWORD_NONE   [reduce using rule 113 (args)]
    INTEGER        [reduce using rule 113 (args)]
    FLOAT          [reduce using rule 113 (args)]
    '-'            [reduce using rule 113 (args)]
    '|'            [reduce using rule 113 (args)]
    '('            [reduce using rule 113 (args)]
    $default       reduce using rule 113 (args)

    expression         go to state 125
    number             go to state 70
    function_call      go to state 71
    args               go to state 221
    member_expression  go to state 72


state 158

   36 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER
   37                | KEYWORD_FROM member_expression KEYWORD_IMPORT . MULTIPLY
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 222
    MULTIPLY    shift, and go to state 223


state 159

   79 global_nonlocal_targets: IDENTIFIER COMMA . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 86

    global_nonlocal_targets  go to state 224


state 160

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  152 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 146
    KEYWORD_OR       shift, and go to state 147
    RIGHT_PARENTHES  shift, and go to state 225


state 161

  151 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 226


state 162

   73 assert_statement: KEYWORD_ASSERT logical_expression COMMA . LITERALSTRING

    LITERALSTRING  shift, and go to state 227


state 163

   68 del_statment: KEYWORD_DEL IDENTIFIER LIST .

    $default  reduce using rule 68 (del_statment)


state 164

   96 with_statment: KEYWORD_WITH with_stmt COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 228


state 165

   98 with_stmt: with_stmt COMMA . function_call KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 76

    function_call  go to state 229


state 166

   97 with_stmt: function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 230


state 167

   80 match_statement: KEYWORD_MATCH IDENTIFIER COLON . match_block

    NEWLINE  shift, and go to state 231

    match_block  go to state 232


state 168

   91 except: KEYWORD_EXCEPT COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 233


state 169

   92 except: KEYWORD_EXCEPT member_expression . COLON block
  119 member_expression: member_expression . IDENTIFIER
  120                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 106
    COLON       shift, and go to state 234

    function_call  go to state 117


state 170

   93 finally: KEYWORD_FINALLY COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 235


state 171

   94 except_statements: except_statements except .

    $default  reduce using rule 94 (except_statements)


state 172

   87 try_statement: try except_statements finally .

    $default  reduce using rule 87 (try_statement)


state 173

   88 try_statement: try except_statements else_statement .
   89              | try except_statements else_statement . finally

    KEYWORD_FINALLY  shift, and go to state 102

    $default  reduce using rule 88 (try_statement)

    finally  go to state 236


state 174

   40 assignment: member_expression ASSIGN expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 40 (assignment)


state 175

   41 assignment: member_expression ASSIGNADD expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 41 (assignment)


state 176

   46 assignment: member_expression ASSIGNMINUS expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 46 (assignment)


state 177

   44 assignment: member_expression ASSIGNMULTIPLY expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 44 (assignment)


state 178

   42 assignment: member_expression ASSIGNDIVIDE expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 42 (assignment)


state 179

   45 assignment: member_expression ASSIGNMODULO expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 45 (assignment)


state 180

   47 assignment: member_expression ASSIGNFLOORDIVISION expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 47 (assignment)


state 181

   43 assignment: member_expression ASSIGNEXPONINTIATION expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 43 (assignment)


state 182

   48 assignment: member_expression ASSIGNRIGHTSHIFT expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 48 (assignment)


state 183

   49 assignment: member_expression ASSIGNLEFTSHIFT expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 49 (assignment)


state 184

  142 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 237


state 185

  144 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_FALSE  shift, and go to state 59
    KEYWORD_TRUE   shift, and go to state 60
    KEYWORD_NONE   shift, and go to state 61
    KEYWORD_NOT    shift, and go to state 62
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 238


state 186

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  143 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147
    COLON        shift, and go to state 239


state 187

  135 elif_else: elif_stmts else_statement .

    $default  reduce using rule 135 (elif_else)


state 188

  139 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 139 (elif_stmts)


state 189

  109 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES .

    $default  reduce using rule 109 (function_call)


state 190

  116 args: expression COMMA .

    $default  reduce using rule 116 (args)


state 191

  108 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 108 (function_call)


state 192

  110 function_call: IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES .

    $default  reduce using rule 110 (function_call)


state 193

  107 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 107 (function_call)


state 194

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  114 args: args expression . COMMA
  115     | args expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139
    COMMA     shift, and go to state 240

    $default  reduce using rule 115 (args)


state 195

  141 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 241


state 196

   57 expression: '(' expression ')' .

    $default  reduce using rule 57 (expression)


state 197

   50 expression: expression . ADD expression
   50           | expression ADD expression .
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 50 (expression)]
    MINUS     [reduce using rule 50 (expression)]
    MULTIPLY  [reduce using rule 50 (expression)]
    DIVIDE    [reduce using rule 50 (expression)]
    POWER     [reduce using rule 50 (expression)]
    MODULO    [reduce using rule 50 (expression)]
    $default  reduce using rule 50 (expression)


state 198

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   51           | expression MINUS expression .
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 51 (expression)]
    MINUS     [reduce using rule 51 (expression)]
    MULTIPLY  [reduce using rule 51 (expression)]
    DIVIDE    [reduce using rule 51 (expression)]
    POWER     [reduce using rule 51 (expression)]
    MODULO    [reduce using rule 51 (expression)]
    $default  reduce using rule 51 (expression)


state 199

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   52           | expression MULTIPLY expression .
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 52 (expression)]
    MINUS     [reduce using rule 52 (expression)]
    MULTIPLY  [reduce using rule 52 (expression)]
    DIVIDE    [reduce using rule 52 (expression)]
    POWER     [reduce using rule 52 (expression)]
    MODULO    [reduce using rule 52 (expression)]
    $default  reduce using rule 52 (expression)


state 200

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   53           | expression DIVIDE expression .
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 53 (expression)]
    MINUS     [reduce using rule 53 (expression)]
    MULTIPLY  [reduce using rule 53 (expression)]
    DIVIDE    [reduce using rule 53 (expression)]
    POWER     [reduce using rule 53 (expression)]
    MODULO    [reduce using rule 53 (expression)]
    $default  reduce using rule 53 (expression)


state 201

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   54           | expression POWER expression .
   55           | expression . MODULO expression

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 54 (expression)]
    MINUS     [reduce using rule 54 (expression)]
    MULTIPLY  [reduce using rule 54 (expression)]
    DIVIDE    [reduce using rule 54 (expression)]
    POWER     [reduce using rule 54 (expression)]
    MODULO    [reduce using rule 54 (expression)]
    $default  reduce using rule 54 (expression)


state 202

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   55           | expression MODULO expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    ADD       [reduce using rule 55 (expression)]
    MINUS     [reduce using rule 55 (expression)]
    MULTIPLY  [reduce using rule 55 (expression)]
    DIVIDE    [reduce using rule 55 (expression)]
    POWER     [reduce using rule 55 (expression)]
    MODULO    [reduce using rule 55 (expression)]
    $default  reduce using rule 55 (expression)


state 203

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  126 logical_expression: expression EQUAL expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 126 (logical_expression)


state 204

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  127 logical_expression: expression NOTEQUAL expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 127 (logical_expression)


state 205

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  123 logical_expression: expression GREATERTHAN expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 123 (logical_expression)


state 206

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  122 logical_expression: expression GREATEROREQUAL expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 122 (logical_expression)


state 207

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  125 logical_expression: expression LESSTHAN expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 125 (logical_expression)


state 208

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  124 logical_expression: expression LESSOREQUAL expression .

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139

    $default  reduce using rule 124 (logical_expression)


state 209

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  128                   | logical_expression KEYWORD_AND logical_expression .
  129                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147

    KEYWORD_AND  [reduce using rule 128 (logical_expression)]
    KEYWORD_OR   [reduce using rule 128 (logical_expression)]
    $default     reduce using rule 128 (logical_expression)


state 210

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  129                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 146
    KEYWORD_OR   shift, and go to state 147

    KEYWORD_AND  [reduce using rule 129 (logical_expression)]
    KEYWORD_OR   [reduce using rule 129 (logical_expression)]
    $default     reduce using rule 129 (logical_expression)


state 211

  140 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 140 (if_statement)


state 212

   38 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 38 (import_statment)


state 213

   75 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER .

    $default  reduce using rule 75 (raise_statement)


state 214

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
  114 args: args . expression COMMA
  115     | args . expression

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_NONE     shift, and go to state 61
    RIGHT_PARENTHES  shift, and go to state 242
    INTEGER          shift, and go to state 64
    FLOAT            shift, and go to state 65
    '-'              shift, and go to state 66
    '|'              shift, and go to state 67
    '('              shift, and go to state 68

    expression         go to state 194
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 215

  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 243


state 216

  146 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 244


state 217

  145 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 245


state 218

  119 member_expression: member_expression . IDENTIFIER
  120                  | member_expression . function_call
  148 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
  149              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 106
    COLON       shift, and go to state 246

    function_call  go to state 247


state 219

  147 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 248


state 220

  112 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 26
    KEYWORD_MATCH     shift, and go to state 27

    statements                 go to state 249
    statement                  go to state 29
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 221

  111 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
  114 args: args . expression COMMA
  115     | args . expression

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_NONE     shift, and go to state 61
    RIGHT_PARENTHES  shift, and go to state 250
    INTEGER          shift, and go to state 64
    FLOAT            shift, and go to state 65
    '-'              shift, and go to state 66
    '|'              shift, and go to state 67
    '('              shift, and go to state 68

    expression         go to state 194
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 222

   36 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER .
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 251

    $default  reduce using rule 36 (import_statment)


state 223

   37 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT MULTIPLY .

    $default  reduce using rule 37 (import_statment)


state 224

   79 global_nonlocal_targets: IDENTIFIER COMMA global_nonlocal_targets .

    $default  reduce using rule 79 (global_nonlocal_targets)


state 225

  152 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 252


state 226

  151 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 151 (while_statement)


state 227

   73 assert_statement: KEYWORD_ASSERT logical_expression COMMA LITERALSTRING .

    $default  reduce using rule 73 (assert_statement)


state 228

   96 with_statment: KEYWORD_WITH with_stmt COLON block .

    $default  reduce using rule 96 (with_statment)


state 229

   98 with_stmt: with_stmt COMMA function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 253


state 230

   97 with_stmt: function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 97 (with_stmt)


state 231

   81 match_block: NEWLINE . INDENT cases DEDENT

    INDENT  shift, and go to state 254


state 232

   80 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block .

    $default  reduce using rule 80 (match_statement)


state 233

   91 except: KEYWORD_EXCEPT COLON block .

    $default  reduce using rule 91 (except)


state 234

   92 except: KEYWORD_EXCEPT member_expression COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 255


state 235

   93 finally: KEYWORD_FINALLY COLON block .

    $default  reduce using rule 93 (finally)


state 236

   89 try_statement: try except_statements else_statement finally .

    $default  reduce using rule 89 (try_statement)


state 237

  142 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 142 (else_statement)


state 238

  128 logical_expression: logical_expression . KEYWORD_AND logical_expression
  129                   | logical_expression . KEYWORD_OR logical_expression
  144 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 146
    KEYWORD_OR       shift, and go to state 147
    RIGHT_PARENTHES  shift, and go to state 256


state 239

  143 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 257


state 240

  114 args: args expression COMMA .

    $default  reduce using rule 114 (args)


state 241

  141 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 258


state 242

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON NEWLINE INDENT class_block DEDENT

    COLON  shift, and go to state 259


state 243

  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 102 (class_block)

    class_block  go to state 260


state 244

  146 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 261


state 245

  145 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 262


state 246

  148 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 263


state 247

  120 member_expression: member_expression function_call .
  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block
  150              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . '.' IDENTIFIER COLON block

    COLON  shift, and go to state 264
    '.'    shift, and go to state 265

    COLON     [reduce using rule 120 (member_expression)]
    $default  reduce using rule 120 (member_expression)


state 248

  147 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 76

    function_call  go to state 266


state 249

    4 statements: statements . statement
    6           | statements . NEWLINE
  112 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    DEDENT            shift, and go to state 267
    NEWLINE           shift, and go to state 97
    KEYWORD_MATCH     shift, and go to state 27

    statement                  go to state 98
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 250

  111 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 268


state 251

   39 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 269


state 252

  152 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 270


state 253

   98 with_stmt: with_stmt COMMA function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 271


state 254

   81 match_block: NEWLINE INDENT . cases DEDENT

    KEYWORD_CASE  shift, and go to state 272

    cases  go to state 273
    case   go to state 274


state 255

   92 except: KEYWORD_EXCEPT member_expression COLON block .

    $default  reduce using rule 92 (except)


state 256

  144 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 275


state 257

  143 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 143 (elif_statement)


state 258

  141 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 141 (if_statement)


state 259

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 276


state 260

  103 class_block: class_block . assignment
  104            | class_block . function
  105            | class_block . NEWLINE
  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    IDENTIFIER   shift, and go to state 74
    KEYWORD_DEF  shift, and go to state 15
    DEDENT       shift, and go to state 277
    NEWLINE      shift, and go to state 278

    assignment         go to state 279
    function           go to state 280
    member_expression  go to state 51


state 261

  146 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 146 (for_statement)


state 262

  145 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 145 (for_statement)


state 263

  148 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 148 (for_statement)


state 264

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 281


state 265

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 282


state 266

  147 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 283


state 267

  112 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 112 (block)


state 268

  111 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 284


state 269

   39 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 39 (import_statment)


state 270

  152 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 152 (while_statement)


state 271

   98 with_stmt: with_stmt COMMA function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 98 (with_stmt)


state 272

   84 case: KEYWORD_CASE . expression COLON block

    IDENTIFIER     shift, and go to state 4
    LIST           shift, and go to state 57
    LITERALSTRING  shift, and go to state 58
    KEYWORD_NONE   shift, and go to state 61
    INTEGER        shift, and go to state 64
    FLOAT          shift, and go to state 65
    '-'            shift, and go to state 66
    '|'            shift, and go to state 67
    '('            shift, and go to state 68

    expression         go to state 285
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 273

   81 match_block: NEWLINE INDENT cases . DEDENT
   82 cases: cases . case

    DEDENT        shift, and go to state 286
    KEYWORD_CASE  shift, and go to state 272

    case  go to state 287


state 274

   83 cases: case .

    $default  reduce using rule 83 (cases)


state 275

  144 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 288


state 276

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 289


state 277

  106 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 106 (class_without_inheritance)


state 278

  105 class_block: class_block NEWLINE .

    $default  reduce using rule 105 (class_block)


state 279

  103 class_block: class_block assignment .

    $default  reduce using rule 103 (class_block)


state 280

  104 class_block: class_block function .

    $default  reduce using rule 104 (class_block)


state 281

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 149 (for_statement)


state 282

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER . COLON block

    COLON  shift, and go to state 290


state 283

  147 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 291


state 284

  111 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 111 (function)


state 285

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   84 case: KEYWORD_CASE expression . COLON block

    ADD       shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    POWER     shift, and go to state 138
    MODULO    shift, and go to state 139
    COLON     shift, and go to state 292


state 286

   81 match_block: NEWLINE INDENT cases DEDENT .

    $default  reduce using rule 81 (match_block)


state 287

   82 cases: cases case .

    $default  reduce using rule 82 (cases)


state 288

  144 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 144 (elif_statement)


state 289

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 102 (class_block)

    class_block  go to state 293


state 290

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 294


state 291

  147 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 147 (for_statement)


state 292

   84 case: KEYWORD_CASE expression COLON . block

    NEWLINE  shift, and go to state 155

    block  go to state 295


state 293

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block . DEDENT
  103 class_block: class_block . assignment
  104            | class_block . function
  105            | class_block . NEWLINE

    IDENTIFIER   shift, and go to state 74
    KEYWORD_DEF  shift, and go to state 15
    DEDENT       shift, and go to state 296
    NEWLINE      shift, and go to state 278

    assignment         go to state 279
    function           go to state 280
    member_expression  go to state 51


state 294

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block .

    $default  reduce using rule 150 (for_statement)


state 295

   84 case: KEYWORD_CASE expression COLON block .

    $default  reduce using rule 84 (case)


state 296

  101 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 101 (class_with_inheritance)
