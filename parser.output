Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALCHAR
   KEYWORD_AWAIT
   KEYWORD_IMPORT
   KEYWORD_IS
   KEYWORD_LAMBDA
   KEYWORD_AS
   KEYWORD_DEL
   KEYWORD_WITH
   KEYWORD_ASYNC
   OPERATORS
   COMMENT
   ASSIGNADD
   ASSIGNMINUS
   ASSIGNMULTIPLY
   ASSIGNDIVIDE
   ASSIGNMODULO
   ASSIGNFLOORDIVISION
   ASSIGNEXPONINTIATION
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   ASSIGNRIGHTSHIFT
   ASSIGNLEFTSHIFT
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   INCREMENT
   DECREMENT
   '+'
   '*'
   '/'


State 17 conflicts: 1 reduce/reduce
State 61 conflicts: 20 reduce/reduce
State 63 conflicts: 20 reduce/reduce
State 64 conflicts: 1 shift/reduce
State 67 conflicts: 7 shift/reduce
State 77 conflicts: 1 shift/reduce
State 80 conflicts: 19 reduce/reduce
State 82 conflicts: 19 reduce/reduce
State 96 conflicts: 7 shift/reduce
State 97 conflicts: 2 shift/reduce
State 99 conflicts: 6 shift/reduce
State 100 conflicts: 6 shift/reduce
State 118 conflicts: 7 shift/reduce
State 125 conflicts: 7 shift/reduce
State 143 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 148 conflicts: 6 shift/reduce
State 149 conflicts: 6 shift/reduce
State 150 conflicts: 6 shift/reduce
State 151 conflicts: 6 shift/reduce
State 152 conflicts: 6 shift/reduce
State 153 conflicts: 6 shift/reduce
State 160 conflicts: 2 shift/reduce
State 161 conflicts: 2 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | statements prog

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE
    7           | NEWLINE

    8 statement: compound_statement
    9          | simple_statement

   10 simple_statement: assignment
   11                 | return_statement
   12                 | yield_statement
   13                 | assert_statement
   14                 | raise_statement
   15                 | global_statement
   16                 | nonlocal_statement
   17                 | KEYWORD_PASS
   18                 | KEYWORD_BREAK
   19                 | KEYWORD_CONTINUE

   20 compound_statement: function
   21                   | conditional_statement
   22                   | class
   23                   | for_statement
   24                   | while_statement
   25                   | match_statement
   26                   | try_statement

   27 assignment: member_expression ASSIGN expression

   28 expression: expression ADD expression
   29           | expression MINUS expression
   30           | expression MULTIPLY expression
   31           | expression DIVIDE expression
   32           | expression POWER expression
   33           | expression MODULO expression
   34           | '|' expression
   35           | '(' expression ')'
   36           | '-' expression
   37           | number
   38           | IDENTIFIER
   39           | function_call
   40           | LITERALSTRING

   41 number: INTEGER
   42       | FLOAT

   43 return_statement: KEYWORD_RETURN member_expression
   44                 | KEYWORD_RETURN expression
   45                 | KEYWORD_RETURN KEYWORD_NONE
   46                 | KEYWORD_RETURN logical_expression

   47 yield_statement: KEYWORD_YIELD member_expression
   48                | KEYWORD_YIELD expression

   49 assert_statement: KEYWORD_ASSERT logical_expression
   50                 | KEYWORD_ASSERT logical_expression COMMA LITERALSTRING

   51 raise_statement: KEYWORD_RAISE function_call
   52                | KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER

   53 global_statement: KEYWORD_GLOBAL global_nonlocal_targets

   54 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets

   55 global_nonlocal_targets: IDENTIFIER
   56                        | IDENTIFIER COMMA global_nonlocal_targets

   57 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block

   58 match_block: NEWLINE INDENT cases DEDENT

   59 cases: cases case
   60      | case

   61 case: KEYWORD_CASE expression COLON block

   62 try_statement: try finally
   63              | try except_statements
   64              | try except_statements finally
   65              | try except_statements else_statement
   66              | try except_statements else_statement finally

   67 try: KEYWORD_TRY COLON block

   68 except: KEYWORD_EXCEPT COLON block
   69       | KEYWORD_EXCEPT member_expression COLON block

   70 finally: KEYWORD_FINALLY COLON block

   71 except_statements: except_statements except
   72                  | except

   73 class: class_with_inheritance
   74      | class_without_inheritance

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

   76 class_block: /* empty */
   77            | class_block assignment
   78            | class_block function
   79            | class_block NEWLINE

   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

   81 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

   82 block: NEWLINE INDENT statements DEDENT

   83 args: /* empty */
   84     | args expression COMMA
   85     | args expression
   86     | expression COMMA
   87     | expression

   88 member_expression: IDENTIFIER
   89                  | member_expression IDENTIFIER

   90 conditional_statement: if_statement elif_else

   91 elif_else: /* empty */
   92          | elif_stmts else_statement
   93          | elif_stmts
   94          | else_statement

   95 elif_stmts: elif_statement
   96           | elif_stmts elif_statement

   97 if_statement: KEYWORD_IF logical_expression COLON block
   98             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

   99 else_statement: KEYWORD_ELSE COLON block

  100 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
  101               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  102 logical_expression: expression
  103                   | expression GREATEROREQUAL expression
  104                   | expression GREATERTHAN expression
  105                   | expression LESSOREQUAL expression
  106                   | expression LESSTHAN expression
  107                   | expression EQUAL expression
  108                   | expression NOTEQUAL expression
  109                   | logical_expression KEYWORD_AND logical_expression
  110                   | logical_expression KEYWORD_OR logical_expression
  111                   | KEYWORD_NOT logical_expression
  112                   | KEYWORD_TRUE
  113                   | KEYWORD_FALSE

  114 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
  115              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES
  116              | IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES

  117 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
  118              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
  119              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  120              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
  121              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  122              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

  123 while_statement: KEYWORD_WHILE logical_expression COLON block
  124                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 35
')' (41) 35
'*' (42)
'+' (43)
'-' (45) 36
'.' (46) 122
'/' (47)
'|' (124) 34
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 38 52 55 56 57 75 80 81 88 89 114 115 116 117 118
    120 121 122
LIST (262) 118
LITERALSTRING (263) 40 50
LITERALCHAR (264)
KEYWORD_FALSE (265) 113
KEYWORD_TRUE (266) 112
KEYWORD_AWAIT (267)
KEYWORD_IF (268) 97 98
KEYWORD_ELSE (269) 99
KEYWORD_ELSE_IF (270) 100 101
KEYWORD_IMPORT (271)
KEYWORD_PASS (272) 17
KEYWORD_NONE (273) 45
KEYWORD_BREAK (274) 18
KEYWORD_EXCEPT (275) 68 69
KEYWORD_IN (276) 117 118 119 120 121 122
KEYWORD_RAISE (277) 51 52
KEYWORD_CLASS (278) 75 80
KEYWORD_FINALLY (279) 70
KEYWORD_IS (280)
KEYWORD_RETURN (281) 43 44 45 46
KEYWORD_AND (282) 109
KEYWORD_CONTINUE (283) 19
KEYWORD_FOR (284) 117 118 119 120 121 122
KEYWORD_LAMBDA (285)
KEYWORD_TRY (286) 67
KEYWORD_AS (287)
KEYWORD_DEF (288) 81
KEYWORD_FROM (289) 52
KEYWORD_NONLOCAL (290) 54
KEYWORD_WHILE (291) 123 124
KEYWORD_ASSERT (292) 49 50
KEYWORD_DEL (293)
KEYWORD_GLOBAL (294) 53
KEYWORD_NOT (295) 111
KEYWORD_WITH (296)
KEYWORD_ASYNC (297)
KEYWORD_OR (298) 110
KEYWORD_YIELD (299) 47 48
OPERATORS (300)
COMMENT (301)
ADD (302) 28
MINUS (303) 29
MULTIPLY (304) 30
DIVIDE (305) 31
POWER (306) 32
MODULO (307) 33
ASSIGN (308) 27
ASSIGNADD (309)
ASSIGNMINUS (310)
ASSIGNMULTIPLY (311)
ASSIGNDIVIDE (312)
ASSIGNMODULO (313)
ASSIGNFLOORDIVISION (314)
ASSIGNEXPONINTIATION (315)
ASSIGNBITWISEAND (316)
ASSIGNBITWISEOR (317)
ASSIGNBITWISEXOR (318)
ASSIGNRIGHTSHIFT (319)
ASSIGNLEFTSHIFT (320)
EQUAL (321) 107
NOT (322)
NOTEQUAL (323) 108
GREATERTHAN (324) 104
GREATEROREQUAL (325) 103
LESSTHAN (326) 106
LESSOREQUAL (327) 105
LEFT_PARENTHES (328) 75 81 98 101 114 115 116 119 124
RIGHT_PARENTHES (329) 75 81 98 101 114 115 116 119 124
LEFT_BRACES (330)
RIGHT_BRACES (331)
LEFT_BRACKETS (332)
RIGHT_BRACKETS (333)
COLON (334) 57 61 67 68 69 70 75 80 81 97 98 99 100 101 117 118 119
    120 121 122 123 124
COMMA (335) 50 56 84 86
SEMICOLON (336)
INCREMENT (337)
DECREMENT (338)
INTEGER (339) 41
FLOAT (340) 42
DEDENT (341) 58 75 80 82
INDENT (342) 58 75 80 82
NEWLINE (343) 2 6 7 58 75 79 80 82
KEYWORD_MATCH (344) 57
KEYWORD_CASE (345) 61
UMINUS (346)


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
prog (101)
    on left: 1 2 3, on right: 0 3
statements (102)
    on left: 4 5 6 7, on right: 3 4 6 82
statement (103)
    on left: 8 9, on right: 4 5
simple_statement (104)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 9
compound_statement (105)
    on left: 20 21 22 23 24 25 26, on right: 8
assignment (106)
    on left: 27, on right: 10 77
expression (107)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40, on right: 27 28
    29 30 31 32 33 34 35 36 44 48 61 84 85 86 87 102 103 104 105 106
    107 108
number (108)
    on left: 41 42, on right: 37 115
return_statement (109)
    on left: 43 44 45 46, on right: 11
yield_statement (110)
    on left: 47 48, on right: 12
assert_statement (111)
    on left: 49 50, on right: 13
raise_statement (112)
    on left: 51 52, on right: 14
global_statement (113)
    on left: 53, on right: 15
nonlocal_statement (114)
    on left: 54, on right: 16
global_nonlocal_targets (115)
    on left: 55 56, on right: 53 54 56
match_statement (116)
    on left: 57, on right: 25
match_block (117)
    on left: 58, on right: 57
cases (118)
    on left: 59 60, on right: 58 59
case (119)
    on left: 61, on right: 59 60
try_statement (120)
    on left: 62 63 64 65 66, on right: 26
try (121)
    on left: 67, on right: 62 63 64 65 66
except (122)
    on left: 68 69, on right: 71 72
finally (123)
    on left: 70, on right: 62 64 66
except_statements (124)
    on left: 71 72, on right: 63 64 65 66 71
class (125)
    on left: 73 74, on right: 22
class_with_inheritance (126)
    on left: 75, on right: 73
class_block (127)
    on left: 76 77 78 79, on right: 75 77 78 79 80
class_without_inheritance (128)
    on left: 80, on right: 74
function (129)
    on left: 81, on right: 20 78
block (130)
    on left: 82, on right: 61 67 68 69 70 81 97 98 99 100 101 117 118
    119 120 121 122 123 124
args (131)
    on left: 83 84 85 86 87, on right: 75 81 84 85 114 119
member_expression (132)
    on left: 88 89, on right: 27 43 47 69 89 120 121 122
conditional_statement (133)
    on left: 90, on right: 21
elif_else (134)
    on left: 91 92 93 94, on right: 90
elif_stmts (135)
    on left: 95 96, on right: 92 93 96
if_statement (136)
    on left: 97 98, on right: 90
else_statement (137)
    on left: 99, on right: 65 66 92 94
elif_statement (138)
    on left: 100 101, on right: 95 96
logical_expression (139)
    on left: 102 103 104 105 106 107 108 109 110 111 112 113, on right:
    46 49 50 97 98 100 101 109 110 111 123 124
function_call (140)
    on left: 114 115 116, on right: 39 51 52 116 117 119 121 122
for_statement (141)
    on left: 117 118 119 120 121 122, on right: 23
while_statement (142)
    on left: 123 124, on right: 24


state 0

    0 $accept: . prog $end

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_RAISE     shift, and go to state 5
    KEYWORD_CLASS     shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_FOR       shift, and go to state 9
    KEYWORD_TRY       shift, and go to state 10
    KEYWORD_DEF       shift, and go to state 11
    KEYWORD_NONLOCAL  shift, and go to state 12
    KEYWORD_WHILE     shift, and go to state 13
    KEYWORD_ASSERT    shift, and go to state 14
    KEYWORD_GLOBAL    shift, and go to state 15
    KEYWORD_YIELD     shift, and go to state 16
    NEWLINE           shift, and go to state 17
    KEYWORD_MATCH     shift, and go to state 18

    $default  reduce using rule 1 (prog)

    prog                       go to state 19
    statements                 go to state 20
    statement                  go to state 21
    simple_statement           go to state 22
    compound_statement         go to state 23
    assignment                 go to state 24
    return_statement           go to state 25
    yield_statement            go to state 26
    assert_statement           go to state 27
    raise_statement            go to state 28
    global_statement           go to state 29
    nonlocal_statement         go to state 30
    match_statement            go to state 31
    try_statement              go to state 32
    try                        go to state 33
    class                      go to state 34
    class_with_inheritance     go to state 35
    class_without_inheritance  go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 1

   88 member_expression: IDENTIFIER .

    $default  reduce using rule 88 (member_expression)


state 2

   97 if_statement: KEYWORD_IF . logical_expression COLON block
   98             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 43
    LITERALSTRING   shift, and go to state 44
    KEYWORD_FALSE   shift, and go to state 45
    KEYWORD_TRUE    shift, and go to state 46
    KEYWORD_NOT     shift, and go to state 47
    LEFT_PARENTHES  shift, and go to state 48
    INTEGER         shift, and go to state 49
    FLOAT           shift, and go to state 50
    '-'             shift, and go to state 51
    '|'             shift, and go to state 52
    '('             shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 56
    function_call       go to state 57


state 3

   17 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 17 (simple_statement)


state 4

   18 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 18 (simple_statement)


state 5

   51 raise_statement: KEYWORD_RAISE . function_call
   52                | KEYWORD_RAISE . function_call KEYWORD_FROM IDENTIFIER

    IDENTIFIER  shift, and go to state 58

    function_call  go to state 59


state 6

   75 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   80 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 60


state 7

   43 return_statement: KEYWORD_RETURN . member_expression
   44                 | KEYWORD_RETURN . expression
   45                 | KEYWORD_RETURN . KEYWORD_NONE
   46                 | KEYWORD_RETURN . logical_expression

    IDENTIFIER     shift, and go to state 61
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NONE   shift, and go to state 62
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 63
    number              go to state 55
    member_expression   go to state 64
    logical_expression  go to state 65
    function_call       go to state 57


state 8

   19 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 19 (simple_statement)


state 9

  117 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
  118              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
  119              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  120              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
  121              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  122              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER      shift, and go to state 66
    LEFT_PARENTHES  shift, and go to state 67


state 10

   67 try: KEYWORD_TRY . COLON block

    COLON  shift, and go to state 68


state 11

   81 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 69


state 12

   54 nonlocal_statement: KEYWORD_NONLOCAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 70

    global_nonlocal_targets  go to state 71


state 13

  123 while_statement: KEYWORD_WHILE . logical_expression COLON block
  124                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 43
    LITERALSTRING   shift, and go to state 44
    KEYWORD_FALSE   shift, and go to state 45
    KEYWORD_TRUE    shift, and go to state 46
    KEYWORD_NOT     shift, and go to state 47
    LEFT_PARENTHES  shift, and go to state 72
    INTEGER         shift, and go to state 49
    FLOAT           shift, and go to state 50
    '-'             shift, and go to state 51
    '|'             shift, and go to state 52
    '('             shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 73
    function_call       go to state 57


state 14

   49 assert_statement: KEYWORD_ASSERT . logical_expression
   50                 | KEYWORD_ASSERT . logical_expression COMMA LITERALSTRING

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 74
    function_call       go to state 57


state 15

   53 global_statement: KEYWORD_GLOBAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 70

    global_nonlocal_targets  go to state 75


state 16

   47 yield_statement: KEYWORD_YIELD . member_expression
   48                | KEYWORD_YIELD . expression

    IDENTIFIER     shift, and go to state 61
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression         go to state 76
    number             go to state 55
    member_expression  go to state 77
    function_call      go to state 57


state 17

    2 prog: NEWLINE .
    7 statements: NEWLINE .

    $end      reduce using rule 2 (prog)
    $end      [reduce using rule 7 (statements)]
    $default  reduce using rule 7 (statements)


state 18

   57 match_statement: KEYWORD_MATCH . IDENTIFIER COLON match_block

    IDENTIFIER  shift, and go to state 78


state 19

    0 $accept: prog . $end

    $end  shift, and go to state 79


state 20

    3 prog: statements . prog
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_RAISE     shift, and go to state 5
    KEYWORD_CLASS     shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_FOR       shift, and go to state 9
    KEYWORD_TRY       shift, and go to state 10
    KEYWORD_DEF       shift, and go to state 11
    KEYWORD_NONLOCAL  shift, and go to state 12
    KEYWORD_WHILE     shift, and go to state 13
    KEYWORD_ASSERT    shift, and go to state 14
    KEYWORD_GLOBAL    shift, and go to state 15
    KEYWORD_YIELD     shift, and go to state 16
    NEWLINE           shift, and go to state 80
    KEYWORD_MATCH     shift, and go to state 18

    $default  reduce using rule 1 (prog)

    prog                       go to state 81
    statements                 go to state 20
    statement                  go to state 82
    simple_statement           go to state 22
    compound_statement         go to state 23
    assignment                 go to state 24
    return_statement           go to state 25
    yield_statement            go to state 26
    assert_statement           go to state 27
    raise_statement            go to state 28
    global_statement           go to state 29
    nonlocal_statement         go to state 30
    match_statement            go to state 31
    try_statement              go to state 32
    try                        go to state 33
    class                      go to state 34
    class_with_inheritance     go to state 35
    class_without_inheritance  go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 21

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 22

    9 statement: simple_statement .

    $default  reduce using rule 9 (statement)


state 23

    8 statement: compound_statement .

    $default  reduce using rule 8 (statement)


state 24

   10 simple_statement: assignment .

    $default  reduce using rule 10 (simple_statement)


state 25

   11 simple_statement: return_statement .

    $default  reduce using rule 11 (simple_statement)


state 26

   12 simple_statement: yield_statement .

    $default  reduce using rule 12 (simple_statement)


state 27

   13 simple_statement: assert_statement .

    $default  reduce using rule 13 (simple_statement)


state 28

   14 simple_statement: raise_statement .

    $default  reduce using rule 14 (simple_statement)


state 29

   15 simple_statement: global_statement .

    $default  reduce using rule 15 (simple_statement)


state 30

   16 simple_statement: nonlocal_statement .

    $default  reduce using rule 16 (simple_statement)


state 31

   25 compound_statement: match_statement .

    $default  reduce using rule 25 (compound_statement)


state 32

   26 compound_statement: try_statement .

    $default  reduce using rule 26 (compound_statement)


state 33

   62 try_statement: try . finally
   63              | try . except_statements
   64              | try . except_statements finally
   65              | try . except_statements else_statement
   66              | try . except_statements else_statement finally

    KEYWORD_EXCEPT   shift, and go to state 83
    KEYWORD_FINALLY  shift, and go to state 84

    except             go to state 85
    finally            go to state 86
    except_statements  go to state 87


state 34

   22 compound_statement: class .

    $default  reduce using rule 22 (compound_statement)


state 35

   73 class: class_with_inheritance .

    $default  reduce using rule 73 (class)


state 36

   74 class: class_without_inheritance .

    $default  reduce using rule 74 (class)


state 37

   20 compound_statement: function .

    $default  reduce using rule 20 (compound_statement)


state 38

   27 assignment: member_expression . ASSIGN expression
   89 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 88
    ASSIGN      shift, and go to state 89


state 39

   21 compound_statement: conditional_statement .

    $default  reduce using rule 21 (compound_statement)


state 40

   90 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 90
    KEYWORD_ELSE_IF  shift, and go to state 91

    $default  reduce using rule 91 (elif_else)

    elif_else       go to state 92
    elif_stmts      go to state 93
    else_statement  go to state 94
    elif_statement  go to state 95


state 41

   23 compound_statement: for_statement .

    $default  reduce using rule 23 (compound_statement)


state 42

   24 compound_statement: while_statement .

    $default  reduce using rule 24 (compound_statement)


state 43

   38 expression: IDENTIFIER .
  114 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  116              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 96

    $default  reduce using rule 38 (expression)


state 44

   40 expression: LITERALSTRING .

    $default  reduce using rule 40 (expression)


state 45

  113 logical_expression: KEYWORD_FALSE .

    $default  reduce using rule 113 (logical_expression)


state 46

  112 logical_expression: KEYWORD_TRUE .

    $default  reduce using rule 112 (logical_expression)


state 47

  111 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 97
    function_call       go to state 57


state 48

   98 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 98
    function_call       go to state 57


state 49

   41 number: INTEGER .

    $default  reduce using rule 41 (number)


state 50

   42 number: FLOAT .

    $default  reduce using rule 42 (number)


state 51

   36 expression: '-' . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 99
    number         go to state 55
    function_call  go to state 57


state 52

   34 expression: '|' . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 100
    number         go to state 55
    function_call  go to state 57


state 53

   35 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 101
    number         go to state 55
    function_call  go to state 57


state 54

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  102 logical_expression: expression .
  103                   | expression . GREATEROREQUAL expression
  104                   | expression . GREATERTHAN expression
  105                   | expression . LESSOREQUAL expression
  106                   | expression . LESSTHAN expression
  107                   | expression . EQUAL expression
  108                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 102
    MINUS           shift, and go to state 103
    MULTIPLY        shift, and go to state 104
    DIVIDE          shift, and go to state 105
    POWER           shift, and go to state 106
    MODULO          shift, and go to state 107
    EQUAL           shift, and go to state 108
    NOTEQUAL        shift, and go to state 109
    GREATERTHAN     shift, and go to state 110
    GREATEROREQUAL  shift, and go to state 111
    LESSTHAN        shift, and go to state 112
    LESSOREQUAL     shift, and go to state 113

    $default  reduce using rule 102 (logical_expression)


state 55

   37 expression: number .

    $default  reduce using rule 37 (expression)


state 56

   97 if_statement: KEYWORD_IF logical_expression . COLON block
  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115
    COLON        shift, and go to state 116


state 57

   39 expression: function_call .

    $default  reduce using rule 39 (expression)


state 58

  114 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  116              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 96


state 59

   51 raise_statement: KEYWORD_RAISE function_call .
   52                | KEYWORD_RAISE function_call . KEYWORD_FROM IDENTIFIER

    KEYWORD_FROM  shift, and go to state 117

    $default  reduce using rule 51 (raise_statement)


state 60

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 118
    COLON           shift, and go to state 119


state 61

   38 expression: IDENTIFIER .
   88 member_expression: IDENTIFIER .
  114 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  116              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 96

    $end              reduce using rule 38 (expression)
    $end              [reduce using rule 88 (member_expression)]
    IDENTIFIER        reduce using rule 38 (expression)
    IDENTIFIER        [reduce using rule 88 (member_expression)]
    KEYWORD_IF        reduce using rule 38 (expression)
    KEYWORD_IF        [reduce using rule 88 (member_expression)]
    KEYWORD_PASS      reduce using rule 38 (expression)
    KEYWORD_PASS      [reduce using rule 88 (member_expression)]
    KEYWORD_BREAK     reduce using rule 38 (expression)
    KEYWORD_BREAK     [reduce using rule 88 (member_expression)]
    KEYWORD_RAISE     reduce using rule 38 (expression)
    KEYWORD_RAISE     [reduce using rule 88 (member_expression)]
    KEYWORD_CLASS     reduce using rule 38 (expression)
    KEYWORD_CLASS     [reduce using rule 88 (member_expression)]
    KEYWORD_RETURN    reduce using rule 38 (expression)
    KEYWORD_RETURN    [reduce using rule 88 (member_expression)]
    KEYWORD_CONTINUE  reduce using rule 38 (expression)
    KEYWORD_CONTINUE  [reduce using rule 88 (member_expression)]
    KEYWORD_FOR       reduce using rule 38 (expression)
    KEYWORD_FOR       [reduce using rule 88 (member_expression)]
    KEYWORD_TRY       reduce using rule 38 (expression)
    KEYWORD_TRY       [reduce using rule 88 (member_expression)]
    KEYWORD_DEF       reduce using rule 38 (expression)
    KEYWORD_DEF       [reduce using rule 88 (member_expression)]
    KEYWORD_NONLOCAL  reduce using rule 38 (expression)
    KEYWORD_NONLOCAL  [reduce using rule 88 (member_expression)]
    KEYWORD_WHILE     reduce using rule 38 (expression)
    KEYWORD_WHILE     [reduce using rule 88 (member_expression)]
    KEYWORD_ASSERT    reduce using rule 38 (expression)
    KEYWORD_ASSERT    [reduce using rule 88 (member_expression)]
    KEYWORD_GLOBAL    reduce using rule 38 (expression)
    KEYWORD_GLOBAL    [reduce using rule 88 (member_expression)]
    KEYWORD_YIELD     reduce using rule 38 (expression)
    KEYWORD_YIELD     [reduce using rule 88 (member_expression)]
    DEDENT            reduce using rule 38 (expression)
    DEDENT            [reduce using rule 88 (member_expression)]
    NEWLINE           reduce using rule 38 (expression)
    NEWLINE           [reduce using rule 88 (member_expression)]
    KEYWORD_MATCH     reduce using rule 38 (expression)
    KEYWORD_MATCH     [reduce using rule 88 (member_expression)]
    $default          reduce using rule 38 (expression)


state 62

   45 return_statement: KEYWORD_RETURN KEYWORD_NONE .

    $default  reduce using rule 45 (return_statement)


state 63

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   44 return_statement: KEYWORD_RETURN expression .
  102 logical_expression: expression .
  103                   | expression . GREATEROREQUAL expression
  104                   | expression . GREATERTHAN expression
  105                   | expression . LESSOREQUAL expression
  106                   | expression . LESSTHAN expression
  107                   | expression . EQUAL expression
  108                   | expression . NOTEQUAL expression

    ADD             shift, and go to state 102
    MINUS           shift, and go to state 103
    MULTIPLY        shift, and go to state 104
    DIVIDE          shift, and go to state 105
    POWER           shift, and go to state 106
    MODULO          shift, and go to state 107
    EQUAL           shift, and go to state 108
    NOTEQUAL        shift, and go to state 109
    GREATERTHAN     shift, and go to state 110
    GREATEROREQUAL  shift, and go to state 111
    LESSTHAN        shift, and go to state 112
    LESSOREQUAL     shift, and go to state 113

    $end              reduce using rule 44 (return_statement)
    $end              [reduce using rule 102 (logical_expression)]
    IDENTIFIER        reduce using rule 44 (return_statement)
    IDENTIFIER        [reduce using rule 102 (logical_expression)]
    KEYWORD_IF        reduce using rule 44 (return_statement)
    KEYWORD_IF        [reduce using rule 102 (logical_expression)]
    KEYWORD_PASS      reduce using rule 44 (return_statement)
    KEYWORD_PASS      [reduce using rule 102 (logical_expression)]
    KEYWORD_BREAK     reduce using rule 44 (return_statement)
    KEYWORD_BREAK     [reduce using rule 102 (logical_expression)]
    KEYWORD_RAISE     reduce using rule 44 (return_statement)
    KEYWORD_RAISE     [reduce using rule 102 (logical_expression)]
    KEYWORD_CLASS     reduce using rule 44 (return_statement)
    KEYWORD_CLASS     [reduce using rule 102 (logical_expression)]
    KEYWORD_RETURN    reduce using rule 44 (return_statement)
    KEYWORD_RETURN    [reduce using rule 102 (logical_expression)]
    KEYWORD_AND       reduce using rule 102 (logical_expression)
    KEYWORD_CONTINUE  reduce using rule 44 (return_statement)
    KEYWORD_CONTINUE  [reduce using rule 102 (logical_expression)]
    KEYWORD_FOR       reduce using rule 44 (return_statement)
    KEYWORD_FOR       [reduce using rule 102 (logical_expression)]
    KEYWORD_TRY       reduce using rule 44 (return_statement)
    KEYWORD_TRY       [reduce using rule 102 (logical_expression)]
    KEYWORD_DEF       reduce using rule 44 (return_statement)
    KEYWORD_DEF       [reduce using rule 102 (logical_expression)]
    KEYWORD_NONLOCAL  reduce using rule 44 (return_statement)
    KEYWORD_NONLOCAL  [reduce using rule 102 (logical_expression)]
    KEYWORD_WHILE     reduce using rule 44 (return_statement)
    KEYWORD_WHILE     [reduce using rule 102 (logical_expression)]
    KEYWORD_ASSERT    reduce using rule 44 (return_statement)
    KEYWORD_ASSERT    [reduce using rule 102 (logical_expression)]
    KEYWORD_GLOBAL    reduce using rule 44 (return_statement)
    KEYWORD_GLOBAL    [reduce using rule 102 (logical_expression)]
    KEYWORD_OR        reduce using rule 102 (logical_expression)
    KEYWORD_YIELD     reduce using rule 44 (return_statement)
    KEYWORD_YIELD     [reduce using rule 102 (logical_expression)]
    DEDENT            reduce using rule 44 (return_statement)
    DEDENT            [reduce using rule 102 (logical_expression)]
    NEWLINE           reduce using rule 44 (return_statement)
    NEWLINE           [reduce using rule 102 (logical_expression)]
    KEYWORD_MATCH     reduce using rule 44 (return_statement)
    KEYWORD_MATCH     [reduce using rule 102 (logical_expression)]
    $default          reduce using rule 44 (return_statement)


state 64

   43 return_statement: KEYWORD_RETURN member_expression .
   89 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 88

    IDENTIFIER  [reduce using rule 43 (return_statement)]
    $default    reduce using rule 43 (return_statement)


state 65

   46 return_statement: KEYWORD_RETURN logical_expression .
  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115

    $default  reduce using rule 46 (return_statement)


state 66

  117 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
  118              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
  120              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
  121              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block
  122              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    KEYWORD_IN  shift, and go to state 120


state 67

  119 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    IDENTIFIER     [reduce using rule 83 (args)]
    LITERALSTRING  [reduce using rule 83 (args)]
    INTEGER        [reduce using rule 83 (args)]
    FLOAT          [reduce using rule 83 (args)]
    '-'            [reduce using rule 83 (args)]
    '|'            [reduce using rule 83 (args)]
    '('            [reduce using rule 83 (args)]
    $default       reduce using rule 83 (args)

    expression     go to state 121
    number         go to state 55
    args           go to state 122
    function_call  go to state 57


state 68

   67 try: KEYWORD_TRY COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 124


state 69

   81 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 125


state 70

   55 global_nonlocal_targets: IDENTIFIER .
   56                        | IDENTIFIER . COMMA global_nonlocal_targets

    COMMA  shift, and go to state 126

    $default  reduce using rule 55 (global_nonlocal_targets)


state 71

   54 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets .

    $default  reduce using rule 54 (nonlocal_statement)


state 72

  124 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 127
    function_call       go to state 57


state 73

  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression
  123 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115
    COLON        shift, and go to state 128


state 74

   49 assert_statement: KEYWORD_ASSERT logical_expression .
   50                 | KEYWORD_ASSERT logical_expression . COMMA LITERALSTRING
  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115
    COMMA        shift, and go to state 129

    $default  reduce using rule 49 (assert_statement)


state 75

   53 global_statement: KEYWORD_GLOBAL global_nonlocal_targets .

    $default  reduce using rule 53 (global_statement)


state 76

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   48 yield_statement: KEYWORD_YIELD expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 48 (yield_statement)


state 77

   47 yield_statement: KEYWORD_YIELD member_expression .
   89 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 88

    IDENTIFIER  [reduce using rule 47 (yield_statement)]
    $default    reduce using rule 47 (yield_statement)


state 78

   57 match_statement: KEYWORD_MATCH IDENTIFIER . COLON match_block

    COLON  shift, and go to state 130


state 79

    0 $accept: prog $end .

    $default  accept


state 80

    2 prog: NEWLINE .
    6 statements: statements NEWLINE .
    7           | NEWLINE .

    $end              reduce using rule 2 (prog)
    $end              [reduce using rule 6 (statements)]
    $end              [reduce using rule 7 (statements)]
    IDENTIFIER        reduce using rule 6 (statements)
    IDENTIFIER        [reduce using rule 7 (statements)]
    KEYWORD_IF        reduce using rule 6 (statements)
    KEYWORD_IF        [reduce using rule 7 (statements)]
    KEYWORD_PASS      reduce using rule 6 (statements)
    KEYWORD_PASS      [reduce using rule 7 (statements)]
    KEYWORD_BREAK     reduce using rule 6 (statements)
    KEYWORD_BREAK     [reduce using rule 7 (statements)]
    KEYWORD_RAISE     reduce using rule 6 (statements)
    KEYWORD_RAISE     [reduce using rule 7 (statements)]
    KEYWORD_CLASS     reduce using rule 6 (statements)
    KEYWORD_CLASS     [reduce using rule 7 (statements)]
    KEYWORD_RETURN    reduce using rule 6 (statements)
    KEYWORD_RETURN    [reduce using rule 7 (statements)]
    KEYWORD_CONTINUE  reduce using rule 6 (statements)
    KEYWORD_CONTINUE  [reduce using rule 7 (statements)]
    KEYWORD_FOR       reduce using rule 6 (statements)
    KEYWORD_FOR       [reduce using rule 7 (statements)]
    KEYWORD_TRY       reduce using rule 6 (statements)
    KEYWORD_TRY       [reduce using rule 7 (statements)]
    KEYWORD_DEF       reduce using rule 6 (statements)
    KEYWORD_DEF       [reduce using rule 7 (statements)]
    KEYWORD_NONLOCAL  reduce using rule 6 (statements)
    KEYWORD_NONLOCAL  [reduce using rule 7 (statements)]
    KEYWORD_WHILE     reduce using rule 6 (statements)
    KEYWORD_WHILE     [reduce using rule 7 (statements)]
    KEYWORD_ASSERT    reduce using rule 6 (statements)
    KEYWORD_ASSERT    [reduce using rule 7 (statements)]
    KEYWORD_GLOBAL    reduce using rule 6 (statements)
    KEYWORD_GLOBAL    [reduce using rule 7 (statements)]
    KEYWORD_YIELD     reduce using rule 6 (statements)
    KEYWORD_YIELD     [reduce using rule 7 (statements)]
    NEWLINE           reduce using rule 6 (statements)
    NEWLINE           [reduce using rule 7 (statements)]
    KEYWORD_MATCH     reduce using rule 6 (statements)
    KEYWORD_MATCH     [reduce using rule 7 (statements)]
    $default          reduce using rule 6 (statements)


state 81

    3 prog: statements prog .

    $default  reduce using rule 3 (prog)


state 82

    4 statements: statements statement .
    5           | statement .

    $end              reduce using rule 4 (statements)
    $end              [reduce using rule 5 (statements)]
    IDENTIFIER        reduce using rule 4 (statements)
    IDENTIFIER        [reduce using rule 5 (statements)]
    KEYWORD_IF        reduce using rule 4 (statements)
    KEYWORD_IF        [reduce using rule 5 (statements)]
    KEYWORD_PASS      reduce using rule 4 (statements)
    KEYWORD_PASS      [reduce using rule 5 (statements)]
    KEYWORD_BREAK     reduce using rule 4 (statements)
    KEYWORD_BREAK     [reduce using rule 5 (statements)]
    KEYWORD_RAISE     reduce using rule 4 (statements)
    KEYWORD_RAISE     [reduce using rule 5 (statements)]
    KEYWORD_CLASS     reduce using rule 4 (statements)
    KEYWORD_CLASS     [reduce using rule 5 (statements)]
    KEYWORD_RETURN    reduce using rule 4 (statements)
    KEYWORD_RETURN    [reduce using rule 5 (statements)]
    KEYWORD_CONTINUE  reduce using rule 4 (statements)
    KEYWORD_CONTINUE  [reduce using rule 5 (statements)]
    KEYWORD_FOR       reduce using rule 4 (statements)
    KEYWORD_FOR       [reduce using rule 5 (statements)]
    KEYWORD_TRY       reduce using rule 4 (statements)
    KEYWORD_TRY       [reduce using rule 5 (statements)]
    KEYWORD_DEF       reduce using rule 4 (statements)
    KEYWORD_DEF       [reduce using rule 5 (statements)]
    KEYWORD_NONLOCAL  reduce using rule 4 (statements)
    KEYWORD_NONLOCAL  [reduce using rule 5 (statements)]
    KEYWORD_WHILE     reduce using rule 4 (statements)
    KEYWORD_WHILE     [reduce using rule 5 (statements)]
    KEYWORD_ASSERT    reduce using rule 4 (statements)
    KEYWORD_ASSERT    [reduce using rule 5 (statements)]
    KEYWORD_GLOBAL    reduce using rule 4 (statements)
    KEYWORD_GLOBAL    [reduce using rule 5 (statements)]
    KEYWORD_YIELD     reduce using rule 4 (statements)
    KEYWORD_YIELD     [reduce using rule 5 (statements)]
    NEWLINE           reduce using rule 4 (statements)
    NEWLINE           [reduce using rule 5 (statements)]
    KEYWORD_MATCH     reduce using rule 4 (statements)
    KEYWORD_MATCH     [reduce using rule 5 (statements)]
    $default          reduce using rule 4 (statements)


state 83

   68 except: KEYWORD_EXCEPT . COLON block
   69       | KEYWORD_EXCEPT . member_expression COLON block

    IDENTIFIER  shift, and go to state 1
    COLON       shift, and go to state 131

    member_expression  go to state 132


state 84

   70 finally: KEYWORD_FINALLY . COLON block

    COLON  shift, and go to state 133


state 85

   72 except_statements: except .

    $default  reduce using rule 72 (except_statements)


state 86

   62 try_statement: try finally .

    $default  reduce using rule 62 (try_statement)


state 87

   63 try_statement: try except_statements .
   64              | try except_statements . finally
   65              | try except_statements . else_statement
   66              | try except_statements . else_statement finally
   71 except_statements: except_statements . except

    KEYWORD_ELSE     shift, and go to state 90
    KEYWORD_EXCEPT   shift, and go to state 83
    KEYWORD_FINALLY  shift, and go to state 84

    $default  reduce using rule 63 (try_statement)

    except          go to state 134
    finally         go to state 135
    else_statement  go to state 136


state 88

   89 member_expression: member_expression IDENTIFIER .

    $default  reduce using rule 89 (member_expression)


state 89

   27 assignment: member_expression ASSIGN . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 137
    number         go to state 55
    function_call  go to state 57


state 90

   99 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 138


state 91

  100 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
  101               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 43
    LITERALSTRING   shift, and go to state 44
    KEYWORD_FALSE   shift, and go to state 45
    KEYWORD_TRUE    shift, and go to state 46
    KEYWORD_NOT     shift, and go to state 47
    LEFT_PARENTHES  shift, and go to state 139
    INTEGER         shift, and go to state 49
    FLOAT           shift, and go to state 50
    '-'             shift, and go to state 51
    '|'             shift, and go to state 52
    '('             shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 140
    function_call       go to state 57


state 92

   90 conditional_statement: if_statement elif_else .

    $default  reduce using rule 90 (conditional_statement)


state 93

   92 elif_else: elif_stmts . else_statement
   93          | elif_stmts .
   96 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 90
    KEYWORD_ELSE_IF  shift, and go to state 91

    $default  reduce using rule 93 (elif_else)

    else_statement  go to state 141
    elif_statement  go to state 142


state 94

   94 elif_else: else_statement .

    $default  reduce using rule 94 (elif_else)


state 95

   95 elif_stmts: elif_statement .

    $default  reduce using rule 95 (elif_stmts)


state 96

  114 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
  115              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES
  116              | IDENTIFIER LEFT_PARENTHES . function_call RIGHT_PARENTHES

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    IDENTIFIER     [reduce using rule 83 (args)]
    LITERALSTRING  [reduce using rule 83 (args)]
    INTEGER        [reduce using rule 83 (args)]
    FLOAT          [reduce using rule 83 (args)]
    '-'            [reduce using rule 83 (args)]
    '|'            [reduce using rule 83 (args)]
    '('            [reduce using rule 83 (args)]
    $default       reduce using rule 83 (args)

    expression     go to state 121
    number         go to state 143
    args           go to state 144
    function_call  go to state 145


state 97

  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression
  111                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115

    KEYWORD_AND  [reduce using rule 111 (logical_expression)]
    KEYWORD_OR   [reduce using rule 111 (logical_expression)]
    $default     reduce using rule 111 (logical_expression)


state 98

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block
  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND      shift, and go to state 114
    KEYWORD_OR       shift, and go to state 115
    RIGHT_PARENTHES  shift, and go to state 146


state 99

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   36           | '-' expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 36 (expression)]
    MINUS     [reduce using rule 36 (expression)]
    MULTIPLY  [reduce using rule 36 (expression)]
    DIVIDE    [reduce using rule 36 (expression)]
    POWER     [reduce using rule 36 (expression)]
    MODULO    [reduce using rule 36 (expression)]
    $default  reduce using rule 36 (expression)


state 100

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   34           | '|' expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 34 (expression)]
    MINUS     [reduce using rule 34 (expression)]
    MULTIPLY  [reduce using rule 34 (expression)]
    DIVIDE    [reduce using rule 34 (expression)]
    POWER     [reduce using rule 34 (expression)]
    MODULO    [reduce using rule 34 (expression)]
    $default  reduce using rule 34 (expression)


state 101

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   35           | '(' expression . ')'

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107
    ')'       shift, and go to state 147


state 102

   28 expression: expression ADD . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 148
    number         go to state 55
    function_call  go to state 57


state 103

   29 expression: expression MINUS . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 149
    number         go to state 55
    function_call  go to state 57


state 104

   30 expression: expression MULTIPLY . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 150
    number         go to state 55
    function_call  go to state 57


state 105

   31 expression: expression DIVIDE . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 151
    number         go to state 55
    function_call  go to state 57


state 106

   32 expression: expression POWER . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 152
    number         go to state 55
    function_call  go to state 57


state 107

   33 expression: expression MODULO . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 153
    number         go to state 55
    function_call  go to state 57


state 108

  107 logical_expression: expression EQUAL . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 154
    number         go to state 55
    function_call  go to state 57


state 109

  108 logical_expression: expression NOTEQUAL . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 155
    number         go to state 55
    function_call  go to state 57


state 110

  104 logical_expression: expression GREATERTHAN . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 156
    number         go to state 55
    function_call  go to state 57


state 111

  103 logical_expression: expression GREATEROREQUAL . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 157
    number         go to state 55
    function_call  go to state 57


state 112

  106 logical_expression: expression LESSTHAN . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 158
    number         go to state 55
    function_call  go to state 57


state 113

  105 logical_expression: expression LESSOREQUAL . expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 159
    number         go to state 55
    function_call  go to state 57


state 114

  109 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 160
    function_call       go to state 57


state 115

  110 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 161
    function_call       go to state 57


state 116

   97 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 162


state 117

   52 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM . IDENTIFIER

    IDENTIFIER  shift, and go to state 163


state 118

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    IDENTIFIER     [reduce using rule 83 (args)]
    LITERALSTRING  [reduce using rule 83 (args)]
    INTEGER        [reduce using rule 83 (args)]
    FLOAT          [reduce using rule 83 (args)]
    '-'            [reduce using rule 83 (args)]
    '|'            [reduce using rule 83 (args)]
    '('            [reduce using rule 83 (args)]
    $default       reduce using rule 83 (args)

    expression     go to state 121
    number         go to state 55
    args           go to state 164
    function_call  go to state 57


state 119

   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 165


state 120

  117 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
  118              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
  120              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
  121              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block
  122              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 166
    LIST        shift, and go to state 167

    member_expression  go to state 168
    function_call      go to state 169


state 121

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   86 args: expression . COMMA
   87     | expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107
    COMMA     shift, and go to state 170

    $default  reduce using rule 87 (args)


state 122

   84 args: args . expression COMMA
   85     | args . expression
  119 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 43
    LITERALSTRING    shift, and go to state 44
    RIGHT_PARENTHES  shift, and go to state 171
    INTEGER          shift, and go to state 49
    FLOAT            shift, and go to state 50
    '-'              shift, and go to state 51
    '|'              shift, and go to state 52
    '('              shift, and go to state 53

    expression     go to state 172
    number         go to state 55
    function_call  go to state 57


state 123

   82 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 173


state 124

   67 try: KEYWORD_TRY COLON block .

    $default  reduce using rule 67 (try)


state 125

   81 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    IDENTIFIER     [reduce using rule 83 (args)]
    LITERALSTRING  [reduce using rule 83 (args)]
    INTEGER        [reduce using rule 83 (args)]
    FLOAT          [reduce using rule 83 (args)]
    '-'            [reduce using rule 83 (args)]
    '|'            [reduce using rule 83 (args)]
    '('            [reduce using rule 83 (args)]
    $default       reduce using rule 83 (args)

    expression     go to state 121
    number         go to state 55
    args           go to state 174
    function_call  go to state 57


state 126

   56 global_nonlocal_targets: IDENTIFIER COMMA . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 70

    global_nonlocal_targets  go to state 175


state 127

  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression
  124 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 114
    KEYWORD_OR       shift, and go to state 115
    RIGHT_PARENTHES  shift, and go to state 176


state 128

  123 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 177


state 129

   50 assert_statement: KEYWORD_ASSERT logical_expression COMMA . LITERALSTRING

    LITERALSTRING  shift, and go to state 178


state 130

   57 match_statement: KEYWORD_MATCH IDENTIFIER COLON . match_block

    NEWLINE  shift, and go to state 179

    match_block  go to state 180


state 131

   68 except: KEYWORD_EXCEPT COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 181


state 132

   69 except: KEYWORD_EXCEPT member_expression . COLON block
   89 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 88
    COLON       shift, and go to state 182


state 133

   70 finally: KEYWORD_FINALLY COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 183


state 134

   71 except_statements: except_statements except .

    $default  reduce using rule 71 (except_statements)


state 135

   64 try_statement: try except_statements finally .

    $default  reduce using rule 64 (try_statement)


state 136

   65 try_statement: try except_statements else_statement .
   66              | try except_statements else_statement . finally

    KEYWORD_FINALLY  shift, and go to state 84

    $default  reduce using rule 65 (try_statement)

    finally  go to state 184


state 137

   27 assignment: member_expression ASSIGN expression .
   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 27 (assignment)


state 138

   99 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 185


state 139

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    KEYWORD_FALSE  shift, and go to state 45
    KEYWORD_TRUE   shift, and go to state 46
    KEYWORD_NOT    shift, and go to state 47
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression          go to state 54
    number              go to state 55
    logical_expression  go to state 186
    function_call       go to state 57


state 140

  100 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block
  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115
    COLON        shift, and go to state 187


state 141

   92 elif_else: elif_stmts else_statement .

    $default  reduce using rule 92 (elif_else)


state 142

   96 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 96 (elif_stmts)


state 143

   37 expression: number .
  115 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 188

    RIGHT_PARENTHES  [reduce using rule 37 (expression)]
    $default         reduce using rule 37 (expression)


state 144

   84 args: args . expression COMMA
   85     | args . expression
  114 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES

    IDENTIFIER       shift, and go to state 43
    LITERALSTRING    shift, and go to state 44
    RIGHT_PARENTHES  shift, and go to state 189
    INTEGER          shift, and go to state 49
    FLOAT            shift, and go to state 50
    '-'              shift, and go to state 51
    '|'              shift, and go to state 52
    '('              shift, and go to state 53

    expression     go to state 172
    number         go to state 55
    function_call  go to state 57


state 145

   39 expression: function_call .
  116 function_call: IDENTIFIER LEFT_PARENTHES function_call . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 190

    RIGHT_PARENTHES  [reduce using rule 39 (expression)]
    $default         reduce using rule 39 (expression)


state 146

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 191


state 147

   35 expression: '(' expression ')' .

    $default  reduce using rule 35 (expression)


state 148

   28 expression: expression . ADD expression
   28           | expression ADD expression .
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 28 (expression)]
    MINUS     [reduce using rule 28 (expression)]
    MULTIPLY  [reduce using rule 28 (expression)]
    DIVIDE    [reduce using rule 28 (expression)]
    POWER     [reduce using rule 28 (expression)]
    MODULO    [reduce using rule 28 (expression)]
    $default  reduce using rule 28 (expression)


state 149

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   29           | expression MINUS expression .
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 29 (expression)]
    MINUS     [reduce using rule 29 (expression)]
    MULTIPLY  [reduce using rule 29 (expression)]
    DIVIDE    [reduce using rule 29 (expression)]
    POWER     [reduce using rule 29 (expression)]
    MODULO    [reduce using rule 29 (expression)]
    $default  reduce using rule 29 (expression)


state 150

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   30           | expression MULTIPLY expression .
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 30 (expression)]
    MINUS     [reduce using rule 30 (expression)]
    MULTIPLY  [reduce using rule 30 (expression)]
    DIVIDE    [reduce using rule 30 (expression)]
    POWER     [reduce using rule 30 (expression)]
    MODULO    [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)


state 151

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   31           | expression DIVIDE expression .
   32           | expression . POWER expression
   33           | expression . MODULO expression

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 31 (expression)]
    MINUS     [reduce using rule 31 (expression)]
    MULTIPLY  [reduce using rule 31 (expression)]
    DIVIDE    [reduce using rule 31 (expression)]
    POWER     [reduce using rule 31 (expression)]
    MODULO    [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)


state 152

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   32           | expression POWER expression .
   33           | expression . MODULO expression

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 32 (expression)]
    MINUS     [reduce using rule 32 (expression)]
    MULTIPLY  [reduce using rule 32 (expression)]
    DIVIDE    [reduce using rule 32 (expression)]
    POWER     [reduce using rule 32 (expression)]
    MODULO    [reduce using rule 32 (expression)]
    $default  reduce using rule 32 (expression)


state 153

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   33           | expression MODULO expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    ADD       [reduce using rule 33 (expression)]
    MINUS     [reduce using rule 33 (expression)]
    MULTIPLY  [reduce using rule 33 (expression)]
    DIVIDE    [reduce using rule 33 (expression)]
    POWER     [reduce using rule 33 (expression)]
    MODULO    [reduce using rule 33 (expression)]
    $default  reduce using rule 33 (expression)


state 154

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  107 logical_expression: expression EQUAL expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 107 (logical_expression)


state 155

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  108 logical_expression: expression NOTEQUAL expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 108 (logical_expression)


state 156

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  104 logical_expression: expression GREATERTHAN expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 104 (logical_expression)


state 157

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  103 logical_expression: expression GREATEROREQUAL expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 103 (logical_expression)


state 158

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  106 logical_expression: expression LESSTHAN expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 106 (logical_expression)


state 159

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
  105 logical_expression: expression LESSOREQUAL expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107

    $default  reduce using rule 105 (logical_expression)


state 160

  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  109                   | logical_expression KEYWORD_AND logical_expression .
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115

    KEYWORD_AND  [reduce using rule 109 (logical_expression)]
    KEYWORD_OR   [reduce using rule 109 (logical_expression)]
    $default     reduce using rule 109 (logical_expression)


state 161

  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression
  110                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 114
    KEYWORD_OR   shift, and go to state 115

    KEYWORD_AND  [reduce using rule 110 (logical_expression)]
    KEYWORD_OR   [reduce using rule 110 (logical_expression)]
    $default     reduce using rule 110 (logical_expression)


state 162

   97 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 97 (if_statement)


state 163

   52 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER .

    $default  reduce using rule 52 (raise_statement)


state 164

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   84 args: args . expression COMMA
   85     | args . expression

    IDENTIFIER       shift, and go to state 43
    LITERALSTRING    shift, and go to state 44
    RIGHT_PARENTHES  shift, and go to state 192
    INTEGER          shift, and go to state 49
    FLOAT            shift, and go to state 50
    '-'              shift, and go to state 51
    '|'              shift, and go to state 52
    '('              shift, and go to state 53

    expression     go to state 172
    number         go to state 55
    function_call  go to state 57


state 165

   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 193


state 166

   88 member_expression: IDENTIFIER .
  114 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  116              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 96

    $default  reduce using rule 88 (member_expression)


state 167

  118 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 194


state 168

   89 member_expression: member_expression . IDENTIFIER
  120 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
  121              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block
  122              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 195
    COLON       shift, and go to state 196

    function_call  go to state 197


state 169

  117 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 198


state 170

   86 args: expression COMMA .

    $default  reduce using rule 86 (args)


state 171

  119 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 199


state 172

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   84 args: args expression . COMMA
   85     | args expression .

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107
    COMMA     shift, and go to state 200

    $default  reduce using rule 85 (args)


state 173

   82 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_RAISE     shift, and go to state 5
    KEYWORD_CLASS     shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_FOR       shift, and go to state 9
    KEYWORD_TRY       shift, and go to state 10
    KEYWORD_DEF       shift, and go to state 11
    KEYWORD_NONLOCAL  shift, and go to state 12
    KEYWORD_WHILE     shift, and go to state 13
    KEYWORD_ASSERT    shift, and go to state 14
    KEYWORD_GLOBAL    shift, and go to state 15
    KEYWORD_YIELD     shift, and go to state 16
    NEWLINE           shift, and go to state 201
    KEYWORD_MATCH     shift, and go to state 18

    statements                 go to state 202
    statement                  go to state 21
    simple_statement           go to state 22
    compound_statement         go to state 23
    assignment                 go to state 24
    return_statement           go to state 25
    yield_statement            go to state 26
    assert_statement           go to state 27
    raise_statement            go to state 28
    global_statement           go to state 29
    nonlocal_statement         go to state 30
    match_statement            go to state 31
    try_statement              go to state 32
    try                        go to state 33
    class                      go to state 34
    class_with_inheritance     go to state 35
    class_without_inheritance  go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 174

   81 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
   84 args: args . expression COMMA
   85     | args . expression

    IDENTIFIER       shift, and go to state 43
    LITERALSTRING    shift, and go to state 44
    RIGHT_PARENTHES  shift, and go to state 203
    INTEGER          shift, and go to state 49
    FLOAT            shift, and go to state 50
    '-'              shift, and go to state 51
    '|'              shift, and go to state 52
    '('              shift, and go to state 53

    expression     go to state 172
    number         go to state 55
    function_call  go to state 57


state 175

   56 global_nonlocal_targets: IDENTIFIER COMMA global_nonlocal_targets .

    $default  reduce using rule 56 (global_nonlocal_targets)


state 176

  124 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 204


state 177

  123 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 123 (while_statement)


state 178

   50 assert_statement: KEYWORD_ASSERT logical_expression COMMA LITERALSTRING .

    $default  reduce using rule 50 (assert_statement)


state 179

   58 match_block: NEWLINE . INDENT cases DEDENT

    INDENT  shift, and go to state 205


state 180

   57 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block .

    $default  reduce using rule 57 (match_statement)


state 181

   68 except: KEYWORD_EXCEPT COLON block .

    $default  reduce using rule 68 (except)


state 182

   69 except: KEYWORD_EXCEPT member_expression COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 206


state 183

   70 finally: KEYWORD_FINALLY COLON block .

    $default  reduce using rule 70 (finally)


state 184

   66 try_statement: try except_statements else_statement finally .

    $default  reduce using rule 66 (try_statement)


state 185

   99 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 99 (else_statement)


state 186

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block
  109 logical_expression: logical_expression . KEYWORD_AND logical_expression
  110                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND      shift, and go to state 114
    KEYWORD_OR       shift, and go to state 115
    RIGHT_PARENTHES  shift, and go to state 207


state 187

  100 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 208


state 188

  115 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 115 (function_call)


state 189

  114 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 114 (function_call)


state 190

  116 function_call: IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES .

    $default  reduce using rule 116 (function_call)


state 191

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 209


state 192

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON NEWLINE INDENT class_block DEDENT

    COLON  shift, and go to state 210


state 193

   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 76 (class_block)

    class_block  go to state 211


state 194

  118 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 212


state 195

   89 member_expression: member_expression IDENTIFIER .
  114 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  116              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 96

    $default  reduce using rule 89 (member_expression)


state 196

  120 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 213


state 197

  121 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block
  122              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . '.' IDENTIFIER COLON block

    COLON  shift, and go to state 214
    '.'    shift, and go to state 215


state 198

  117 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 216


state 199

  119 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 58

    function_call  go to state 217


state 200

   84 args: args expression COMMA .

    $default  reduce using rule 84 (args)


state 201

    7 statements: NEWLINE .

    $default  reduce using rule 7 (statements)


state 202

    4 statements: statements . statement
    6           | statements . NEWLINE
   82 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_RAISE     shift, and go to state 5
    KEYWORD_CLASS     shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_FOR       shift, and go to state 9
    KEYWORD_TRY       shift, and go to state 10
    KEYWORD_DEF       shift, and go to state 11
    KEYWORD_NONLOCAL  shift, and go to state 12
    KEYWORD_WHILE     shift, and go to state 13
    KEYWORD_ASSERT    shift, and go to state 14
    KEYWORD_GLOBAL    shift, and go to state 15
    KEYWORD_YIELD     shift, and go to state 16
    DEDENT            shift, and go to state 218
    NEWLINE           shift, and go to state 219
    KEYWORD_MATCH     shift, and go to state 18

    statement                  go to state 220
    simple_statement           go to state 22
    compound_statement         go to state 23
    assignment                 go to state 24
    return_statement           go to state 25
    yield_statement            go to state 26
    assert_statement           go to state 27
    raise_statement            go to state 28
    global_statement           go to state 29
    nonlocal_statement         go to state 30
    match_statement            go to state 31
    try_statement              go to state 32
    try                        go to state 33
    class                      go to state 34
    class_with_inheritance     go to state 35
    class_without_inheritance  go to state 36
    function                   go to state 37
    member_expression          go to state 38
    conditional_statement      go to state 39
    if_statement               go to state 40
    for_statement              go to state 41
    while_statement            go to state 42


state 203

   81 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 221


state 204

  124 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 222


state 205

   58 match_block: NEWLINE INDENT . cases DEDENT

    KEYWORD_CASE  shift, and go to state 223

    cases  go to state 224
    case   go to state 225


state 206

   69 except: KEYWORD_EXCEPT member_expression COLON block .

    $default  reduce using rule 69 (except)


state 207

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 226


state 208

  100 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 100 (elif_statement)


state 209

   98 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 98 (if_statement)


state 210

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 227


state 211

   77 class_block: class_block . assignment
   78            | class_block . function
   79            | class_block . NEWLINE
   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 11
    DEDENT       shift, and go to state 228
    NEWLINE      shift, and go to state 229

    assignment         go to state 230
    function           go to state 231
    member_expression  go to state 38


state 212

  118 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 118 (for_statement)


state 213

  120 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 120 (for_statement)


state 214

  121 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 232


state 215

  122 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 233


state 216

  117 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 117 (for_statement)


state 217

  119 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 234


state 218

   82 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 82 (block)


state 219

    6 statements: statements NEWLINE .

    $default  reduce using rule 6 (statements)


state 220

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 221

   81 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 235


state 222

  124 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 124 (while_statement)


state 223

   61 case: KEYWORD_CASE . expression COLON block

    IDENTIFIER     shift, and go to state 43
    LITERALSTRING  shift, and go to state 44
    INTEGER        shift, and go to state 49
    FLOAT          shift, and go to state 50
    '-'            shift, and go to state 51
    '|'            shift, and go to state 52
    '('            shift, and go to state 53

    expression     go to state 236
    number         go to state 55
    function_call  go to state 57


state 224

   58 match_block: NEWLINE INDENT cases . DEDENT
   59 cases: cases . case

    DEDENT        shift, and go to state 237
    KEYWORD_CASE  shift, and go to state 223

    case  go to state 238


state 225

   60 cases: case .

    $default  reduce using rule 60 (cases)


state 226

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 239


state 227

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 240


state 228

   80 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 80 (class_without_inheritance)


state 229

   79 class_block: class_block NEWLINE .

    $default  reduce using rule 79 (class_block)


state 230

   77 class_block: class_block assignment .

    $default  reduce using rule 77 (class_block)


state 231

   78 class_block: class_block function .

    $default  reduce using rule 78 (class_block)


state 232

  121 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 121 (for_statement)


state 233

  122 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER . COLON block

    COLON  shift, and go to state 241


state 234

  119 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 242


state 235

   81 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 81 (function)


state 236

   28 expression: expression . ADD expression
   29           | expression . MINUS expression
   30           | expression . MULTIPLY expression
   31           | expression . DIVIDE expression
   32           | expression . POWER expression
   33           | expression . MODULO expression
   61 case: KEYWORD_CASE expression . COLON block

    ADD       shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    POWER     shift, and go to state 106
    MODULO    shift, and go to state 107
    COLON     shift, and go to state 243


state 237

   58 match_block: NEWLINE INDENT cases DEDENT .

    $default  reduce using rule 58 (match_block)


state 238

   59 cases: cases case .

    $default  reduce using rule 59 (cases)


state 239

  101 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 101 (elif_statement)


state 240

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 76 (class_block)

    class_block  go to state 244


state 241

  122 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 245


state 242

  119 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 119 (for_statement)


state 243

   61 case: KEYWORD_CASE expression COLON . block

    NEWLINE  shift, and go to state 123

    block  go to state 246


state 244

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block . DEDENT
   77 class_block: class_block . assignment
   78            | class_block . function
   79            | class_block . NEWLINE

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 11
    DEDENT       shift, and go to state 247
    NEWLINE      shift, and go to state 229

    assignment         go to state 230
    function           go to state 231
    member_expression  go to state 38


state 245

  122 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block .

    $default  reduce using rule 122 (for_statement)


state 246

   61 case: KEYWORD_CASE expression COLON block .

    $default  reduce using rule 61 (case)


state 247

   75 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 75 (class_with_inheritance)
