Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LITERALCHAR
   MULTILINESTRING
   KEYWORD_AWAIT
   KEYWORD_LAMBDA
   KEYWORD_ASYNC
   OPERATORS
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   NOT
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   '+'
   '-'
   '/'


State 0 conflicts: 1 shift/reduce
State 4 conflicts: 1 shift/reduce
State 28 conflicts: 24 shift/reduce
State 32 conflicts: 2 shift/reduce
State 56 conflicts: 12 shift/reduce
State 72 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 80 conflicts: 26 reduce/reduce
State 83 conflicts: 12 shift/reduce
State 98 conflicts: 26 reduce/reduce
State 107 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 130 conflicts: 2 shift/reduce
State 131 conflicts: 6 shift/reduce
State 132 conflicts: 1 shift/reduce
State 134 conflicts: 6 shift/reduce
State 153 conflicts: 12 shift/reduce
State 160 conflicts: 12 shift/reduce
State 197 conflicts: 1 shift/reduce
State 201 conflicts: 6 shift/reduce
State 202 conflicts: 6 shift/reduce
State 203 conflicts: 6 shift/reduce
State 204 conflicts: 6 shift/reduce
State 205 conflicts: 6 shift/reduce
State 206 conflicts: 6 shift/reduce
State 213 conflicts: 2 shift/reduce
State 214 conflicts: 2 shift/reduce
State 253 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | prog statements

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement
    9          | NEWLINE
   10          | COMMENT
   11          | MULTILINECOMMENT

   12 simple_statement: assignment
   13                 | return_statement
   14                 | yield_statement
   15                 | assert_statement
   16                 | raise_statement
   17                 | global_statement
   18                 | nonlocal_statement
   19                 | del_statment
   20                 | import_statments
   21                 | function_call
   22                 | with_statment
   23                 | KEYWORD_PASS
   24                 | KEYWORD_BREAK
   25                 | KEYWORD_CONTINUE

   26 compound_statement: function
   27                   | conditional_statement
   28                   | class
   29                   | for_statement
   30                   | while_statement
   31                   | match_statement
   32                   | try_statement

   33 import_statments: import_statment NEWLINE
   34                 | import_statments import_statment

   35 import_statment: KEYWORD_IMPORT member_expression
   36                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM member_expression KEYWORD_IMPORT '*'
   38                | KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

   40 assignment: member_expression ASSIGN expression
   41           | member_expression ASSIGNADD expression
   42           | member_expression ASSIGNDIVIDE expression
   43           | member_expression ASSIGNEXPONINTIATION expression
   44           | member_expression ASSIGNMULTIPLY expression
   45           | member_expression ASSIGNMODULO expression
   46           | member_expression ASSIGNMINUS expression
   47           | member_expression ASSIGNFLOORDIVISION expression
   48           | member_expression ASSIGNRIGHTSHIFT expression
   49           | member_expression ASSIGNLEFTSHIFT expression

   50 expression: expression ADD expression
   51           | expression MINUS expression
   52           | expression MULTIPLY expression
   53           | expression DIVIDE expression
   54           | expression POWER expression
   55           | expression MODULO expression
   56           | '|' expression
   57           | LEFT_PARENTHES expression RIGHT_PARENTHES
   58           | MINUS expression
   59           | number
   60           | member_expression
   61           | function_call
   62           | LITERALSTRING
   63           | LIST
   64           | TUPLE
   65           | KEYWORD_NONE
   66           | KEYWORD_TRUE
   67           | KEYWORD_FALSE

   68 number: INTEGER
   69       | FLOAT

   70 del_statment: KEYWORD_DEL IDENTIFIER
   71             | KEYWORD_DEL IDENTIFIER LIST

   72 return_statement: KEYWORD_RETURN expression
   73                 | KEYWORD_RETURN logical_expression

   74 yield_statement: KEYWORD_YIELD expression

   75 assert_statement: KEYWORD_ASSERT logical_expression
   76                 | KEYWORD_ASSERT logical_expression COMMA LITERALSTRING

   77 raise_statement: KEYWORD_RAISE function_call
   78                | KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER

   79 global_statement: KEYWORD_GLOBAL global_nonlocal_targets

   80 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets

   81 global_nonlocal_targets: IDENTIFIER
   82                        | IDENTIFIER COMMA global_nonlocal_targets

   83 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block

   84 match_block: NEWLINE INDENT cases DEDENT

   85 cases: cases case
   86      | case

   87 case: KEYWORD_CASE expression COLON block

   88 try_statement: try finally
   89              | try except_statements
   90              | try except_statements finally
   91              | try except_statements else_statement
   92              | try except_statements else_statement finally

   93 try: KEYWORD_TRY COLON block

   94 except: KEYWORD_EXCEPT COLON block
   95       | KEYWORD_EXCEPT member_expression COLON block
   96       | KEYWORD_EXCEPT member_expression KEYWORD_AS IDENTIFIER COLON block

   97 finally: KEYWORD_FINALLY COLON block

   98 except_statements: except_statements except
   99                  | except

  100 with_statment: KEYWORD_WITH with_stmt COLON block

  101 with_stmt: function_call KEYWORD_AS IDENTIFIER
  102          | with_stmt COMMA function_call KEYWORD_AS IDENTIFIER

  103 class: class_with_inheritance
  104      | class_without_inheritance

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block

  106 class_block: NEWLINE INDENT class_body DEDENT

  107 class_body: /* empty */
  108           | class_body assignment
  109           | class_body function
  110           | class_body NEWLINE

  111 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON class_block

  112 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES
  113              | IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES
  114              | IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  115              | IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES

  116 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

  117 block: NEWLINE INDENT statements DEDENT

  118 args: /* empty */
  119     | args expression COMMA
  120     | args expression
  121     | expression COMMA
  122     | expression

  123 member_expression: IDENTIFIER
  124                  | member_expression IDENTIFIER
  125                  | member_expression function_call

  126 logical_expression: expression
  127                   | expression GREATEROREQUAL expression
  128                   | expression GREATERTHAN expression
  129                   | expression LESSOREQUAL expression
  130                   | expression LESSTHAN expression
  131                   | expression EQUAL expression
  132                   | expression NOTEQUAL expression
  133                   | expression KEYWORD_IS expression
  134                   | logical_expression KEYWORD_AND logical_expression
  135                   | logical_expression KEYWORD_OR logical_expression
  136                   | KEYWORD_NOT logical_expression

  137 conditional_statement: if_statement elif_else

  138 elif_else: /* empty */
  139          | elif_stmts else_statement
  140          | elif_stmts
  141          | else_statement

  142 elif_stmts: elif_statement
  143           | elif_stmts elif_statement

  144 if_statement: KEYWORD_IF logical_expression COLON block
  145             | KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  146 else_statement: KEYWORD_ELSE COLON block

  147 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block
  148               | KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block
  151              | KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  152              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block
  153              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  154              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

  155 while_statement: KEYWORD_WHILE logical_expression COLON block
  156                | KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block


Terminals, with rules where they appear

$end (0) 0
'*' (42) 37
'+' (43)
'-' (45)
'.' (46) 154
'/' (47)
'|' (124) 56
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 36 38 39 70 71 78 81 82 83 96 101 102 105 111 112
    113 114 115 116 123 124 149 150 152 153 154
LIST (262) 63 71 150
LITERALSTRING (263) 62 76 114
LITERALCHAR (264)
KEYWORD_FALSE (265) 67
KEYWORD_TRUE (266) 66
MULTILINESTRING (267)
KEYWORD_AWAIT (268)
KEYWORD_IF (269) 144 145
KEYWORD_ELSE (270) 146
KEYWORD_ELSE_IF (271) 147 148
KEYWORD_IMPORT (272) 35 36 37 38 39
KEYWORD_PASS (273) 23
KEYWORD_NONE (274) 65
KEYWORD_BREAK (275) 24
KEYWORD_EXCEPT (276) 94 95 96
KEYWORD_IN (277) 149 150 151 152 153 154
KEYWORD_RAISE (278) 77 78
KEYWORD_CLASS (279) 105 111
KEYWORD_FINALLY (280) 97
KEYWORD_IS (281) 133
KEYWORD_RETURN (282) 72 73
KEYWORD_AND (283) 134
KEYWORD_CONTINUE (284) 25
KEYWORD_FOR (285) 149 150 151 152 153 154
KEYWORD_LAMBDA (286)
KEYWORD_TRY (287) 93
KEYWORD_AS (288) 38 39 96 101 102
KEYWORD_DEF (289) 116
KEYWORD_FROM (290) 36 37 39 78
KEYWORD_NONLOCAL (291) 80
KEYWORD_WHILE (292) 155 156
KEYWORD_ASSERT (293) 75 76
KEYWORD_DEL (294) 70 71
KEYWORD_GLOBAL (295) 79
KEYWORD_NOT (296) 136
KEYWORD_WITH (297) 100
KEYWORD_ASYNC (298)
KEYWORD_OR (299) 135
KEYWORD_YIELD (300) 74
OPERATORS (301)
COMMENT (302) 10
ADD (303) 50
MINUS (304) 51 58
MULTIPLY (305) 52
MULTILINECOMMENT (306) 11
DIVIDE (307) 53
POWER (308) 54
MODULO (309) 55
ASSIGN (310) 40
ASSIGNADD (311) 41
ASSIGNMINUS (312) 46
ASSIGNMULTIPLY (313) 44
ASSIGNDIVIDE (314) 42
ASSIGNMODULO (315) 45
ASSIGNFLOORDIVISION (316) 47
ASSIGNEXPONINTIATION (317) 43
ASSIGNBITWISEAND (318)
ASSIGNBITWISEOR (319)
ASSIGNBITWISEXOR (320)
ASSIGNRIGHTSHIFT (321) 48
ASSIGNLEFTSHIFT (322) 49
EQUAL (323) 131
NOT (324)
NOTEQUAL (325) 132
GREATERTHAN (326) 128
GREATEROREQUAL (327) 127
LESSTHAN (328) 130
LESSOREQUAL (329) 129
LEFT_PARENTHES (330) 57 105 112 113 114 115 116 145 148 151 156
RIGHT_PARENTHES (331) 57 105 112 113 114 115 116 145 148 151 156
LEFT_BRACES (332)
RIGHT_BRACES (333)
LEFT_BRACKETS (334)
RIGHT_BRACKETS (335)
COLON (336) 83 87 93 94 95 96 97 100 105 111 116 144 145 146 147 148
    149 150 151 152 153 154 155 156
COMMA (337) 76 82 102 119 121
SEMICOLON (338)
INTEGER (339) 68
FLOAT (340) 69
DEDENT (341) 84 106 117
INDENT (342) 84 106 117
NEWLINE (343) 2 6 9 33 84 106 110 117
KEYWORD_MATCH (344) 83
KEYWORD_CASE (345) 87
TUPLE (346) 64
UMINUS (347)


Nonterminals, with rules where they appear

$accept (99)
    on left: 0
prog (100)
    on left: 1 2 3, on right: 0 3
statements (101)
    on left: 4 5 6, on right: 3 4 6 117
statement (102)
    on left: 7 8 9 10 11, on right: 4 5
simple_statement (103)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right: 8
compound_statement (104)
    on left: 26 27 28 29 30 31 32, on right: 7
import_statments (105)
    on left: 33 34, on right: 20 34
import_statment (106)
    on left: 35 36 37 38 39, on right: 33 34
assignment (107)
    on left: 40 41 42 43 44 45 46 47 48 49, on right: 12 108
expression (108)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 72 74 87 119 120 121 122 126 127 128 129 130 131 132 133
number (109)
    on left: 68 69, on right: 59 113
del_statment (110)
    on left: 70 71, on right: 19
return_statement (111)
    on left: 72 73, on right: 13
yield_statement (112)
    on left: 74, on right: 14
assert_statement (113)
    on left: 75 76, on right: 15
raise_statement (114)
    on left: 77 78, on right: 16
global_statement (115)
    on left: 79, on right: 17
nonlocal_statement (116)
    on left: 80, on right: 18
global_nonlocal_targets (117)
    on left: 81 82, on right: 79 80 82
match_statement (118)
    on left: 83, on right: 31
match_block (119)
    on left: 84, on right: 83
cases (120)
    on left: 85 86, on right: 84 85
case (121)
    on left: 87, on right: 85 86
try_statement (122)
    on left: 88 89 90 91 92, on right: 32
try (123)
    on left: 93, on right: 88 89 90 91 92
except (124)
    on left: 94 95 96, on right: 98 99
finally (125)
    on left: 97, on right: 88 90 92
except_statements (126)
    on left: 98 99, on right: 89 90 91 92 98
with_statment (127)
    on left: 100, on right: 22
with_stmt (128)
    on left: 101 102, on right: 100 102
class (129)
    on left: 103 104, on right: 28
class_with_inheritance (130)
    on left: 105, on right: 103
class_block (131)
    on left: 106, on right: 105 111
class_body (132)
    on left: 107 108 109 110, on right: 106 108 109 110
class_without_inheritance (133)
    on left: 111, on right: 104
function_call (134)
    on left: 112 113 114 115, on right: 21 61 77 78 101 102 115 125
    149 151 153 154
function (135)
    on left: 116, on right: 26 109
block (136)
    on left: 117, on right: 87 93 94 95 96 97 100 116 144 145 146 147
    148 149 150 151 152 153 154 155 156
args (137)
    on left: 118 119 120 121 122, on right: 105 112 116 119 120 151
member_expression (138)
    on left: 123 124 125, on right: 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 60 95 96 124 125 152 153 154
logical_expression (139)
    on left: 126 127 128 129 130 131 132 133 134 135 136, on right:
    73 75 76 134 135 136 144 145 147 148 155 156
conditional_statement (140)
    on left: 137, on right: 27
elif_else (141)
    on left: 138 139 140 141, on right: 137
elif_stmts (142)
    on left: 142 143, on right: 139 140 143
if_statement (143)
    on left: 144 145, on right: 137
else_statement (144)
    on left: 146, on right: 91 92 139 141
elif_statement (145)
    on left: 147 148, on right: 142 143
for_statement (146)
    on left: 149 150 151 152 153 154, on right: 29
while_statement (147)
    on left: 155 156, on right: 30


state 0

    0 $accept: . prog $end

    NEWLINE  shift, and go to state 1

    NEWLINE   [reduce using rule 1 (prog)]
    $default  reduce using rule 1 (prog)

    prog  go to state 2


state 1

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 2

    0 $accept: prog . $end
    3 prog: prog . statements

    $end              shift, and go to state 3
    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 26
    KEYWORD_MATCH     shift, and go to state 27

    statements                 go to state 28
    statement                  go to state 29
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 3

    0 $accept: prog $end .

    $default  accept


state 4

  112 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  113              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  114              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
  123 member_expression: IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 56

    LEFT_PARENTHES  [reduce using rule 123 (member_expression)]
    $default        reduce using rule 123 (member_expression)


state 5

  144 if_statement: KEYWORD_IF . logical_expression COLON block
  145             | KEYWORD_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 73


state 6

   35 import_statment: KEYWORD_IMPORT . member_expression
   38                | KEYWORD_IMPORT . member_expression KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 74

    member_expression  go to state 75


state 7

   23 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 23 (simple_statement)


state 8

   24 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 24 (simple_statement)


state 9

   77 raise_statement: KEYWORD_RAISE . function_call
   78                | KEYWORD_RAISE . function_call KEYWORD_FROM IDENTIFIER

    IDENTIFIER  shift, and go to state 76

    function_call  go to state 77


state 10

  105 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block
  111 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON class_block

    IDENTIFIER  shift, and go to state 78


state 11

   72 return_statement: KEYWORD_RETURN . expression
   73                 | KEYWORD_RETURN . logical_expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 80
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 81


state 12

   25 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 25 (simple_statement)


state 13

  149 for_statement: KEYWORD_FOR . IDENTIFIER KEYWORD_IN function_call COLON block
  150              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN LIST COLON block
  151              | KEYWORD_FOR . LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block
  152              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression COLON block
  153              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call COLON block
  154              | KEYWORD_FOR . IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER      shift, and go to state 82
    LEFT_PARENTHES  shift, and go to state 83


state 14

   93 try: KEYWORD_TRY . COLON block

    COLON  shift, and go to state 84


state 15

  116 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 85


state 16

   36 import_statment: KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM . member_expression KEYWORD_IMPORT '*'
   39                | KEYWORD_FROM . member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 74

    member_expression  go to state 86


state 17

   80 nonlocal_statement: KEYWORD_NONLOCAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 87

    global_nonlocal_targets  go to state 88


state 18

  155 while_statement: KEYWORD_WHILE . logical_expression COLON block
  156                | KEYWORD_WHILE . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 89
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 90


state 19

   75 assert_statement: KEYWORD_ASSERT . logical_expression
   76                 | KEYWORD_ASSERT . logical_expression COMMA LITERALSTRING

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 91


state 20

   70 del_statment: KEYWORD_DEL . IDENTIFIER
   71             | KEYWORD_DEL . IDENTIFIER LIST

    IDENTIFIER  shift, and go to state 92


state 21

   79 global_statement: KEYWORD_GLOBAL . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 87

    global_nonlocal_targets  go to state 93


state 22

  100 with_statment: KEYWORD_WITH . with_stmt COLON block

    IDENTIFIER  shift, and go to state 76

    with_stmt      go to state 94
    function_call  go to state 95


state 23

   74 yield_statement: KEYWORD_YIELD . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 96
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 24

   10 statement: COMMENT .

    $default  reduce using rule 10 (statement)


state 25

   11 statement: MULTILINECOMMENT .

    $default  reduce using rule 11 (statement)


state 26

    9 statement: NEWLINE .

    $default  reduce using rule 9 (statement)


state 27

   83 match_statement: KEYWORD_MATCH . IDENTIFIER COLON match_block

    IDENTIFIER  shift, and go to state 97


state 28

    3 prog: prog statements .
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 98
    KEYWORD_MATCH     shift, and go to state 27

    IDENTIFIER        [reduce using rule 3 (prog)]
    KEYWORD_IF        [reduce using rule 3 (prog)]
    KEYWORD_IMPORT    [reduce using rule 3 (prog)]
    KEYWORD_PASS      [reduce using rule 3 (prog)]
    KEYWORD_BREAK     [reduce using rule 3 (prog)]
    KEYWORD_RAISE     [reduce using rule 3 (prog)]
    KEYWORD_CLASS     [reduce using rule 3 (prog)]
    KEYWORD_RETURN    [reduce using rule 3 (prog)]
    KEYWORD_CONTINUE  [reduce using rule 3 (prog)]
    KEYWORD_FOR       [reduce using rule 3 (prog)]
    KEYWORD_TRY       [reduce using rule 3 (prog)]
    KEYWORD_DEF       [reduce using rule 3 (prog)]
    KEYWORD_FROM      [reduce using rule 3 (prog)]
    KEYWORD_NONLOCAL  [reduce using rule 3 (prog)]
    KEYWORD_WHILE     [reduce using rule 3 (prog)]
    KEYWORD_ASSERT    [reduce using rule 3 (prog)]
    KEYWORD_DEL       [reduce using rule 3 (prog)]
    KEYWORD_GLOBAL    [reduce using rule 3 (prog)]
    KEYWORD_WITH      [reduce using rule 3 (prog)]
    KEYWORD_YIELD     [reduce using rule 3 (prog)]
    COMMENT           [reduce using rule 3 (prog)]
    MULTILINECOMMENT  [reduce using rule 3 (prog)]
    NEWLINE           [reduce using rule 3 (prog)]
    KEYWORD_MATCH     [reduce using rule 3 (prog)]
    $default          reduce using rule 3 (prog)

    statement                  go to state 99
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 29

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 30

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 31

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 32

   20 simple_statement: import_statments .
   34 import_statments: import_statments . import_statment

    KEYWORD_IMPORT  shift, and go to state 6
    KEYWORD_FROM    shift, and go to state 16

    KEYWORD_IMPORT  [reduce using rule 20 (simple_statement)]
    KEYWORD_FROM    [reduce using rule 20 (simple_statement)]
    $default        reduce using rule 20 (simple_statement)

    import_statment  go to state 100


state 33

   33 import_statments: import_statment . NEWLINE

    NEWLINE  shift, and go to state 101


state 34

   12 simple_statement: assignment .

    $default  reduce using rule 12 (simple_statement)


state 35

   19 simple_statement: del_statment .

    $default  reduce using rule 19 (simple_statement)


state 36

   13 simple_statement: return_statement .

    $default  reduce using rule 13 (simple_statement)


state 37

   14 simple_statement: yield_statement .

    $default  reduce using rule 14 (simple_statement)


state 38

   15 simple_statement: assert_statement .

    $default  reduce using rule 15 (simple_statement)


state 39

   16 simple_statement: raise_statement .

    $default  reduce using rule 16 (simple_statement)


state 40

   17 simple_statement: global_statement .

    $default  reduce using rule 17 (simple_statement)


state 41

   18 simple_statement: nonlocal_statement .

    $default  reduce using rule 18 (simple_statement)


state 42

   31 compound_statement: match_statement .

    $default  reduce using rule 31 (compound_statement)


state 43

   32 compound_statement: try_statement .

    $default  reduce using rule 32 (compound_statement)


state 44

   88 try_statement: try . finally
   89              | try . except_statements
   90              | try . except_statements finally
   91              | try . except_statements else_statement
   92              | try . except_statements else_statement finally

    KEYWORD_EXCEPT   shift, and go to state 102
    KEYWORD_FINALLY  shift, and go to state 103

    except             go to state 104
    finally            go to state 105
    except_statements  go to state 106


state 45

   22 simple_statement: with_statment .

    $default  reduce using rule 22 (simple_statement)


state 46

   28 compound_statement: class .

    $default  reduce using rule 28 (compound_statement)


state 47

  103 class: class_with_inheritance .

    $default  reduce using rule 103 (class)


state 48

  104 class: class_without_inheritance .

    $default  reduce using rule 104 (class)


state 49

   21 simple_statement: function_call .

    $default  reduce using rule 21 (simple_statement)


state 50

   26 compound_statement: function .

    $default  reduce using rule 26 (compound_statement)


state 51

   40 assignment: member_expression . ASSIGN expression
   41           | member_expression . ASSIGNADD expression
   42           | member_expression . ASSIGNDIVIDE expression
   43           | member_expression . ASSIGNEXPONINTIATION expression
   44           | member_expression . ASSIGNMULTIPLY expression
   45           | member_expression . ASSIGNMODULO expression
   46           | member_expression . ASSIGNMINUS expression
   47           | member_expression . ASSIGNFLOORDIVISION expression
   48           | member_expression . ASSIGNRIGHTSHIFT expression
   49           | member_expression . ASSIGNLEFTSHIFT expression
  124 member_expression: member_expression . IDENTIFIER
  125                  | member_expression . function_call

    IDENTIFIER            shift, and go to state 107
    ASSIGN                shift, and go to state 108
    ASSIGNADD             shift, and go to state 109
    ASSIGNMINUS           shift, and go to state 110
    ASSIGNMULTIPLY        shift, and go to state 111
    ASSIGNDIVIDE          shift, and go to state 112
    ASSIGNMODULO          shift, and go to state 113
    ASSIGNFLOORDIVISION   shift, and go to state 114
    ASSIGNEXPONINTIATION  shift, and go to state 115
    ASSIGNRIGHTSHIFT      shift, and go to state 116
    ASSIGNLEFTSHIFT       shift, and go to state 117

    function_call  go to state 118


state 52

   27 compound_statement: conditional_statement .

    $default  reduce using rule 27 (compound_statement)


state 53

  137 conditional_statement: if_statement . elif_else

    KEYWORD_ELSE     shift, and go to state 119
    KEYWORD_ELSE_IF  shift, and go to state 120

    $default  reduce using rule 138 (elif_else)

    elif_else       go to state 121
    elif_stmts      go to state 122
    else_statement  go to state 123
    elif_statement  go to state 124


state 54

   29 compound_statement: for_statement .

    $default  reduce using rule 29 (compound_statement)


state 55

   30 compound_statement: while_statement .

    $default  reduce using rule 30 (compound_statement)


state 56

  112 function_call: IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES
  113              | IDENTIFIER LEFT_PARENTHES . number RIGHT_PARENTHES
  114              | IDENTIFIER LEFT_PARENTHES . LITERALSTRING RIGHT_PARENTHES
  115              | IDENTIFIER LEFT_PARENTHES . function_call RIGHT_PARENTHES

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 125
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    IDENTIFIER      [reduce using rule 118 (args)]
    LIST            [reduce using rule 118 (args)]
    LITERALSTRING   [reduce using rule 118 (args)]
    KEYWORD_FALSE   [reduce using rule 118 (args)]
    KEYWORD_TRUE    [reduce using rule 118 (args)]
    KEYWORD_NONE    [reduce using rule 118 (args)]
    MINUS           [reduce using rule 118 (args)]
    LEFT_PARENTHES  [reduce using rule 118 (args)]
    INTEGER         [reduce using rule 118 (args)]
    FLOAT           [reduce using rule 118 (args)]
    TUPLE           [reduce using rule 118 (args)]
    '|'             [reduce using rule 118 (args)]
    $default        reduce using rule 118 (args)

    expression         go to state 126
    number             go to state 127
    function_call      go to state 128
    args               go to state 129
    member_expression  go to state 72


state 57

   63 expression: LIST .

    $default  reduce using rule 63 (expression)


state 58

   62 expression: LITERALSTRING .

    $default  reduce using rule 62 (expression)


state 59

   67 expression: KEYWORD_FALSE .

    $default  reduce using rule 67 (expression)


state 60

   66 expression: KEYWORD_TRUE .

    $default  reduce using rule 66 (expression)


state 61

   65 expression: KEYWORD_NONE .

    $default  reduce using rule 65 (expression)


state 62

  136 logical_expression: KEYWORD_NOT . logical_expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 130


state 63

   58 expression: MINUS . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 131
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 64

   57 expression: LEFT_PARENTHES . expression RIGHT_PARENTHES
  145 if_statement: KEYWORD_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 132
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 133


state 65

   68 number: INTEGER .

    $default  reduce using rule 68 (number)


state 66

   69 number: FLOAT .

    $default  reduce using rule 69 (number)


state 67

   64 expression: TUPLE .

    $default  reduce using rule 64 (expression)


state 68

   56 expression: '|' . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 134
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 69

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  126 logical_expression: expression .
  127                   | expression . GREATEROREQUAL expression
  128                   | expression . GREATERTHAN expression
  129                   | expression . LESSOREQUAL expression
  130                   | expression . LESSTHAN expression
  131                   | expression . EQUAL expression
  132                   | expression . NOTEQUAL expression
  133                   | expression . KEYWORD_IS expression

    KEYWORD_IS      shift, and go to state 135
    ADD             shift, and go to state 136
    MINUS           shift, and go to state 137
    MULTIPLY        shift, and go to state 138
    DIVIDE          shift, and go to state 139
    POWER           shift, and go to state 140
    MODULO          shift, and go to state 141
    EQUAL           shift, and go to state 142
    NOTEQUAL        shift, and go to state 143
    GREATERTHAN     shift, and go to state 144
    GREATEROREQUAL  shift, and go to state 145
    LESSTHAN        shift, and go to state 146
    LESSOREQUAL     shift, and go to state 147

    $default  reduce using rule 126 (logical_expression)


state 70

   59 expression: number .

    $default  reduce using rule 59 (expression)


state 71

   61 expression: function_call .

    $default  reduce using rule 61 (expression)


state 72

   60 expression: member_expression .
  124 member_expression: member_expression . IDENTIFIER
  125                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 107

    IDENTIFIER  [reduce using rule 60 (expression)]
    $default    reduce using rule 60 (expression)

    function_call  go to state 118


state 73

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  144 if_statement: KEYWORD_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149
    COLON        shift, and go to state 150


state 74

  123 member_expression: IDENTIFIER .

    $default  reduce using rule 123 (member_expression)


state 75

   35 import_statment: KEYWORD_IMPORT member_expression .
   38                | KEYWORD_IMPORT member_expression . KEYWORD_AS IDENTIFIER
  124 member_expression: member_expression . IDENTIFIER
  125                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 107
    KEYWORD_AS  shift, and go to state 151

    IDENTIFIER  [reduce using rule 35 (import_statment)]
    $default    reduce using rule 35 (import_statment)

    function_call  go to state 118


state 76

  112 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  113              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  114              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 56


state 77

   77 raise_statement: KEYWORD_RAISE function_call .
   78                | KEYWORD_RAISE function_call . KEYWORD_FROM IDENTIFIER

    KEYWORD_FROM  shift, and go to state 152

    KEYWORD_FROM  [reduce using rule 77 (raise_statement)]
    $default      reduce using rule 77 (raise_statement)


state 78

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block
  111 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON class_block

    LEFT_PARENTHES  shift, and go to state 153
    COLON           shift, and go to state 154


state 79

   57 expression: LEFT_PARENTHES . expression RIGHT_PARENTHES

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 155
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 80

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   72 return_statement: KEYWORD_RETURN expression .
  126 logical_expression: expression .
  127                   | expression . GREATEROREQUAL expression
  128                   | expression . GREATERTHAN expression
  129                   | expression . LESSOREQUAL expression
  130                   | expression . LESSTHAN expression
  131                   | expression . EQUAL expression
  132                   | expression . NOTEQUAL expression
  133                   | expression . KEYWORD_IS expression

    KEYWORD_IS      shift, and go to state 135
    ADD             shift, and go to state 136
    MINUS           shift, and go to state 137
    MULTIPLY        shift, and go to state 138
    DIVIDE          shift, and go to state 139
    POWER           shift, and go to state 140
    MODULO          shift, and go to state 141
    EQUAL           shift, and go to state 142
    NOTEQUAL        shift, and go to state 143
    GREATERTHAN     shift, and go to state 144
    GREATEROREQUAL  shift, and go to state 145
    LESSTHAN        shift, and go to state 146
    LESSOREQUAL     shift, and go to state 147

    $end              reduce using rule 72 (return_statement)
    $end              [reduce using rule 126 (logical_expression)]
    IDENTIFIER        reduce using rule 72 (return_statement)
    IDENTIFIER        [reduce using rule 126 (logical_expression)]
    KEYWORD_IF        reduce using rule 72 (return_statement)
    KEYWORD_IF        [reduce using rule 126 (logical_expression)]
    KEYWORD_IMPORT    reduce using rule 72 (return_statement)
    KEYWORD_IMPORT    [reduce using rule 126 (logical_expression)]
    KEYWORD_PASS      reduce using rule 72 (return_statement)
    KEYWORD_PASS      [reduce using rule 126 (logical_expression)]
    KEYWORD_BREAK     reduce using rule 72 (return_statement)
    KEYWORD_BREAK     [reduce using rule 126 (logical_expression)]
    KEYWORD_RAISE     reduce using rule 72 (return_statement)
    KEYWORD_RAISE     [reduce using rule 126 (logical_expression)]
    KEYWORD_CLASS     reduce using rule 72 (return_statement)
    KEYWORD_CLASS     [reduce using rule 126 (logical_expression)]
    KEYWORD_RETURN    reduce using rule 72 (return_statement)
    KEYWORD_RETURN    [reduce using rule 126 (logical_expression)]
    KEYWORD_AND       reduce using rule 126 (logical_expression)
    KEYWORD_CONTINUE  reduce using rule 72 (return_statement)
    KEYWORD_CONTINUE  [reduce using rule 126 (logical_expression)]
    KEYWORD_FOR       reduce using rule 72 (return_statement)
    KEYWORD_FOR       [reduce using rule 126 (logical_expression)]
    KEYWORD_TRY       reduce using rule 72 (return_statement)
    KEYWORD_TRY       [reduce using rule 126 (logical_expression)]
    KEYWORD_DEF       reduce using rule 72 (return_statement)
    KEYWORD_DEF       [reduce using rule 126 (logical_expression)]
    KEYWORD_FROM      reduce using rule 72 (return_statement)
    KEYWORD_FROM      [reduce using rule 126 (logical_expression)]
    KEYWORD_NONLOCAL  reduce using rule 72 (return_statement)
    KEYWORD_NONLOCAL  [reduce using rule 126 (logical_expression)]
    KEYWORD_WHILE     reduce using rule 72 (return_statement)
    KEYWORD_WHILE     [reduce using rule 126 (logical_expression)]
    KEYWORD_ASSERT    reduce using rule 72 (return_statement)
    KEYWORD_ASSERT    [reduce using rule 126 (logical_expression)]
    KEYWORD_DEL       reduce using rule 72 (return_statement)
    KEYWORD_DEL       [reduce using rule 126 (logical_expression)]
    KEYWORD_GLOBAL    reduce using rule 72 (return_statement)
    KEYWORD_GLOBAL    [reduce using rule 126 (logical_expression)]
    KEYWORD_WITH      reduce using rule 72 (return_statement)
    KEYWORD_WITH      [reduce using rule 126 (logical_expression)]
    KEYWORD_OR        reduce using rule 126 (logical_expression)
    KEYWORD_YIELD     reduce using rule 72 (return_statement)
    KEYWORD_YIELD     [reduce using rule 126 (logical_expression)]
    COMMENT           reduce using rule 72 (return_statement)
    COMMENT           [reduce using rule 126 (logical_expression)]
    MULTILINECOMMENT  reduce using rule 72 (return_statement)
    MULTILINECOMMENT  [reduce using rule 126 (logical_expression)]
    DEDENT            reduce using rule 72 (return_statement)
    DEDENT            [reduce using rule 126 (logical_expression)]
    NEWLINE           reduce using rule 72 (return_statement)
    NEWLINE           [reduce using rule 126 (logical_expression)]
    KEYWORD_MATCH     reduce using rule 72 (return_statement)
    KEYWORD_MATCH     [reduce using rule 126 (logical_expression)]
    $default          reduce using rule 72 (return_statement)


state 81

   73 return_statement: KEYWORD_RETURN logical_expression .
  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149

    $default  reduce using rule 73 (return_statement)


state 82

  149 for_statement: KEYWORD_FOR IDENTIFIER . KEYWORD_IN function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN LIST COLON block
  152              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression COLON block
  153              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call COLON block
  154              | KEYWORD_FOR IDENTIFIER . KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block

    KEYWORD_IN  shift, and go to state 156


state 83

  151 for_statement: KEYWORD_FOR LEFT_PARENTHES . args RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    IDENTIFIER      [reduce using rule 118 (args)]
    LIST            [reduce using rule 118 (args)]
    LITERALSTRING   [reduce using rule 118 (args)]
    KEYWORD_FALSE   [reduce using rule 118 (args)]
    KEYWORD_TRUE    [reduce using rule 118 (args)]
    KEYWORD_NONE    [reduce using rule 118 (args)]
    MINUS           [reduce using rule 118 (args)]
    LEFT_PARENTHES  [reduce using rule 118 (args)]
    INTEGER         [reduce using rule 118 (args)]
    FLOAT           [reduce using rule 118 (args)]
    TUPLE           [reduce using rule 118 (args)]
    '|'             [reduce using rule 118 (args)]
    $default        reduce using rule 118 (args)

    expression         go to state 126
    number             go to state 70
    function_call      go to state 71
    args               go to state 157
    member_expression  go to state 72


state 84

   93 try: KEYWORD_TRY COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 159


state 85

  116 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 160


state 86

   36 import_statment: KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER
   37                | KEYWORD_FROM member_expression . KEYWORD_IMPORT '*'
   39                | KEYWORD_FROM member_expression . KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER
  124 member_expression: member_expression . IDENTIFIER
  125                  | member_expression . function_call

    IDENTIFIER      shift, and go to state 107
    KEYWORD_IMPORT  shift, and go to state 161

    function_call  go to state 118


state 87

   81 global_nonlocal_targets: IDENTIFIER .
   82                        | IDENTIFIER . COMMA global_nonlocal_targets

    COMMA  shift, and go to state 162

    $default  reduce using rule 81 (global_nonlocal_targets)


state 88

   80 nonlocal_statement: KEYWORD_NONLOCAL global_nonlocal_targets .

    $default  reduce using rule 80 (nonlocal_statement)


state 89

   57 expression: LEFT_PARENTHES . expression RIGHT_PARENTHES
  156 while_statement: KEYWORD_WHILE LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 132
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 163


state 90

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  155 while_statement: KEYWORD_WHILE logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149
    COLON        shift, and go to state 164


state 91

   75 assert_statement: KEYWORD_ASSERT logical_expression .
   76                 | KEYWORD_ASSERT logical_expression . COMMA LITERALSTRING
  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149
    COMMA        shift, and go to state 165

    $default  reduce using rule 75 (assert_statement)


state 92

   70 del_statment: KEYWORD_DEL IDENTIFIER .
   71             | KEYWORD_DEL IDENTIFIER . LIST

    LIST  shift, and go to state 166

    $default  reduce using rule 70 (del_statment)


state 93

   79 global_statement: KEYWORD_GLOBAL global_nonlocal_targets .

    $default  reduce using rule 79 (global_statement)


state 94

  100 with_statment: KEYWORD_WITH with_stmt . COLON block
  102 with_stmt: with_stmt . COMMA function_call KEYWORD_AS IDENTIFIER

    COLON  shift, and go to state 167
    COMMA  shift, and go to state 168


state 95

  101 with_stmt: function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 169


state 96

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   74 yield_statement: KEYWORD_YIELD expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 74 (yield_statement)


state 97

   83 match_statement: KEYWORD_MATCH IDENTIFIER . COLON match_block

    COLON  shift, and go to state 170


state 98

    6 statements: statements NEWLINE .
    9 statement: NEWLINE .

    $end              reduce using rule 6 (statements)
    $end              [reduce using rule 9 (statement)]
    IDENTIFIER        reduce using rule 6 (statements)
    IDENTIFIER        [reduce using rule 9 (statement)]
    KEYWORD_IF        reduce using rule 6 (statements)
    KEYWORD_IF        [reduce using rule 9 (statement)]
    KEYWORD_IMPORT    reduce using rule 6 (statements)
    KEYWORD_IMPORT    [reduce using rule 9 (statement)]
    KEYWORD_PASS      reduce using rule 6 (statements)
    KEYWORD_PASS      [reduce using rule 9 (statement)]
    KEYWORD_BREAK     reduce using rule 6 (statements)
    KEYWORD_BREAK     [reduce using rule 9 (statement)]
    KEYWORD_RAISE     reduce using rule 6 (statements)
    KEYWORD_RAISE     [reduce using rule 9 (statement)]
    KEYWORD_CLASS     reduce using rule 6 (statements)
    KEYWORD_CLASS     [reduce using rule 9 (statement)]
    KEYWORD_RETURN    reduce using rule 6 (statements)
    KEYWORD_RETURN    [reduce using rule 9 (statement)]
    KEYWORD_CONTINUE  reduce using rule 6 (statements)
    KEYWORD_CONTINUE  [reduce using rule 9 (statement)]
    KEYWORD_FOR       reduce using rule 6 (statements)
    KEYWORD_FOR       [reduce using rule 9 (statement)]
    KEYWORD_TRY       reduce using rule 6 (statements)
    KEYWORD_TRY       [reduce using rule 9 (statement)]
    KEYWORD_DEF       reduce using rule 6 (statements)
    KEYWORD_DEF       [reduce using rule 9 (statement)]
    KEYWORD_FROM      reduce using rule 6 (statements)
    KEYWORD_FROM      [reduce using rule 9 (statement)]
    KEYWORD_NONLOCAL  reduce using rule 6 (statements)
    KEYWORD_NONLOCAL  [reduce using rule 9 (statement)]
    KEYWORD_WHILE     reduce using rule 6 (statements)
    KEYWORD_WHILE     [reduce using rule 9 (statement)]
    KEYWORD_ASSERT    reduce using rule 6 (statements)
    KEYWORD_ASSERT    [reduce using rule 9 (statement)]
    KEYWORD_DEL       reduce using rule 6 (statements)
    KEYWORD_DEL       [reduce using rule 9 (statement)]
    KEYWORD_GLOBAL    reduce using rule 6 (statements)
    KEYWORD_GLOBAL    [reduce using rule 9 (statement)]
    KEYWORD_WITH      reduce using rule 6 (statements)
    KEYWORD_WITH      [reduce using rule 9 (statement)]
    KEYWORD_YIELD     reduce using rule 6 (statements)
    KEYWORD_YIELD     [reduce using rule 9 (statement)]
    COMMENT           reduce using rule 6 (statements)
    COMMENT           [reduce using rule 9 (statement)]
    MULTILINECOMMENT  reduce using rule 6 (statements)
    MULTILINECOMMENT  [reduce using rule 9 (statement)]
    DEDENT            reduce using rule 6 (statements)
    DEDENT            [reduce using rule 9 (statement)]
    NEWLINE           reduce using rule 6 (statements)
    NEWLINE           [reduce using rule 9 (statement)]
    KEYWORD_MATCH     reduce using rule 6 (statements)
    KEYWORD_MATCH     [reduce using rule 9 (statement)]
    $default          reduce using rule 6 (statements)


state 99

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 100

   34 import_statments: import_statments import_statment .

    $default  reduce using rule 34 (import_statments)


state 101

   33 import_statments: import_statment NEWLINE .

    $default  reduce using rule 33 (import_statments)


state 102

   94 except: KEYWORD_EXCEPT . COLON block
   95       | KEYWORD_EXCEPT . member_expression COLON block
   96       | KEYWORD_EXCEPT . member_expression KEYWORD_AS IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 74
    COLON       shift, and go to state 171

    member_expression  go to state 172


state 103

   97 finally: KEYWORD_FINALLY . COLON block

    COLON  shift, and go to state 173


state 104

   99 except_statements: except .

    $default  reduce using rule 99 (except_statements)


state 105

   88 try_statement: try finally .

    $default  reduce using rule 88 (try_statement)


state 106

   89 try_statement: try except_statements .
   90              | try except_statements . finally
   91              | try except_statements . else_statement
   92              | try except_statements . else_statement finally
   98 except_statements: except_statements . except

    KEYWORD_ELSE     shift, and go to state 119
    KEYWORD_EXCEPT   shift, and go to state 102
    KEYWORD_FINALLY  shift, and go to state 103

    $default  reduce using rule 89 (try_statement)

    except          go to state 174
    finally         go to state 175
    else_statement  go to state 176


state 107

  112 function_call: IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES
  113              | IDENTIFIER . LEFT_PARENTHES number RIGHT_PARENTHES
  114              | IDENTIFIER . LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES
  115              | IDENTIFIER . LEFT_PARENTHES function_call RIGHT_PARENTHES
  124 member_expression: member_expression IDENTIFIER .

    LEFT_PARENTHES  shift, and go to state 56

    LEFT_PARENTHES  [reduce using rule 124 (member_expression)]
    $default        reduce using rule 124 (member_expression)


state 108

   40 assignment: member_expression ASSIGN . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 177
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 109

   41 assignment: member_expression ASSIGNADD . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 178
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 110

   46 assignment: member_expression ASSIGNMINUS . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 179
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 111

   44 assignment: member_expression ASSIGNMULTIPLY . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 180
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 112

   42 assignment: member_expression ASSIGNDIVIDE . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 181
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 113

   45 assignment: member_expression ASSIGNMODULO . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 182
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 114

   47 assignment: member_expression ASSIGNFLOORDIVISION . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 183
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 115

   43 assignment: member_expression ASSIGNEXPONINTIATION . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 184
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 116

   48 assignment: member_expression ASSIGNRIGHTSHIFT . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 185
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 117

   49 assignment: member_expression ASSIGNLEFTSHIFT . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 186
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 118

  125 member_expression: member_expression function_call .

    $default  reduce using rule 125 (member_expression)


state 119

  146 else_statement: KEYWORD_ELSE . COLON block

    COLON  shift, and go to state 187


state 120

  147 elif_statement: KEYWORD_ELSE_IF . logical_expression COLON block
  148               | KEYWORD_ELSE_IF . LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 188
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 189


state 121

  137 conditional_statement: if_statement elif_else .

    $default  reduce using rule 137 (conditional_statement)


state 122

  139 elif_else: elif_stmts . else_statement
  140          | elif_stmts .
  143 elif_stmts: elif_stmts . elif_statement

    KEYWORD_ELSE     shift, and go to state 119
    KEYWORD_ELSE_IF  shift, and go to state 120

    $default  reduce using rule 140 (elif_else)

    else_statement  go to state 190
    elif_statement  go to state 191


state 123

  141 elif_else: else_statement .

    $default  reduce using rule 141 (elif_else)


state 124

  142 elif_stmts: elif_statement .

    $default  reduce using rule 142 (elif_stmts)


state 125

   62 expression: LITERALSTRING .
  114 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 192

    RIGHT_PARENTHES  [reduce using rule 62 (expression)]
    $default         reduce using rule 62 (expression)


state 126

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  121 args: expression . COMMA
  122     | expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141
    COMMA     shift, and go to state 193

    MINUS     [reduce using rule 122 (args)]
    $default  reduce using rule 122 (args)


state 127

   59 expression: number .
  113 function_call: IDENTIFIER LEFT_PARENTHES number . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 194

    RIGHT_PARENTHES  [reduce using rule 59 (expression)]
    $default         reduce using rule 59 (expression)


state 128

   61 expression: function_call .
  115 function_call: IDENTIFIER LEFT_PARENTHES function_call . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 195

    RIGHT_PARENTHES  [reduce using rule 61 (expression)]
    $default         reduce using rule 61 (expression)


state 129

  112 function_call: IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES
  119 args: args . expression COMMA
  120     | args . expression

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_FALSE    shift, and go to state 59
    KEYWORD_TRUE     shift, and go to state 60
    KEYWORD_NONE     shift, and go to state 61
    MINUS            shift, and go to state 63
    LEFT_PARENTHES   shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 196
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    TUPLE            shift, and go to state 67
    '|'              shift, and go to state 68

    expression         go to state 197
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 130

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  136                   | KEYWORD_NOT logical_expression .

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149

    KEYWORD_AND  [reduce using rule 136 (logical_expression)]
    KEYWORD_OR   [reduce using rule 136 (logical_expression)]
    $default     reduce using rule 136 (logical_expression)


state 131

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   58           | MINUS expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 58 (expression)]
    MINUS     [reduce using rule 58 (expression)]
    MULTIPLY  [reduce using rule 58 (expression)]
    DIVIDE    [reduce using rule 58 (expression)]
    POWER     [reduce using rule 58 (expression)]
    MODULO    [reduce using rule 58 (expression)]
    $default  reduce using rule 58 (expression)


state 132

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   57           | LEFT_PARENTHES expression . RIGHT_PARENTHES
  126 logical_expression: expression .
  127                   | expression . GREATEROREQUAL expression
  128                   | expression . GREATERTHAN expression
  129                   | expression . LESSOREQUAL expression
  130                   | expression . LESSTHAN expression
  131                   | expression . EQUAL expression
  132                   | expression . NOTEQUAL expression
  133                   | expression . KEYWORD_IS expression

    KEYWORD_IS       shift, and go to state 135
    ADD              shift, and go to state 136
    MINUS            shift, and go to state 137
    MULTIPLY         shift, and go to state 138
    DIVIDE           shift, and go to state 139
    POWER            shift, and go to state 140
    MODULO           shift, and go to state 141
    EQUAL            shift, and go to state 142
    NOTEQUAL         shift, and go to state 143
    GREATERTHAN      shift, and go to state 144
    GREATEROREQUAL   shift, and go to state 145
    LESSTHAN         shift, and go to state 146
    LESSOREQUAL      shift, and go to state 147
    RIGHT_PARENTHES  shift, and go to state 198

    RIGHT_PARENTHES  [reduce using rule 126 (logical_expression)]
    $default         reduce using rule 126 (logical_expression)


state 133

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  145 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 148
    KEYWORD_OR       shift, and go to state 149
    RIGHT_PARENTHES  shift, and go to state 199


state 134

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   56           | '|' expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 56 (expression)]
    MINUS     [reduce using rule 56 (expression)]
    MULTIPLY  [reduce using rule 56 (expression)]
    DIVIDE    [reduce using rule 56 (expression)]
    POWER     [reduce using rule 56 (expression)]
    MODULO    [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)


state 135

  133 logical_expression: expression KEYWORD_IS . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 200
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 136

   50 expression: expression ADD . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 201
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 137

   51 expression: expression MINUS . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 202
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 138

   52 expression: expression MULTIPLY . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 203
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 139

   53 expression: expression DIVIDE . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 204
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 140

   54 expression: expression POWER . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 205
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 141

   55 expression: expression MODULO . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 206
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 142

  131 logical_expression: expression EQUAL . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 207
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 143

  132 logical_expression: expression NOTEQUAL . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 208
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 144

  128 logical_expression: expression GREATERTHAN . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 209
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 145

  127 logical_expression: expression GREATEROREQUAL . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 210
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 146

  130 logical_expression: expression LESSTHAN . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 211
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 147

  129 logical_expression: expression LESSOREQUAL . expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 212
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 148

  134 logical_expression: logical_expression KEYWORD_AND . logical_expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 213


state 149

  135 logical_expression: logical_expression KEYWORD_OR . logical_expression

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 69
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 214


state 150

  144 if_statement: KEYWORD_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 215


state 151

   38 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 216


state 152

   78 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM . IDENTIFIER

    IDENTIFIER  shift, and go to state 217


state 153

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON class_block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    IDENTIFIER      [reduce using rule 118 (args)]
    LIST            [reduce using rule 118 (args)]
    LITERALSTRING   [reduce using rule 118 (args)]
    KEYWORD_FALSE   [reduce using rule 118 (args)]
    KEYWORD_TRUE    [reduce using rule 118 (args)]
    KEYWORD_NONE    [reduce using rule 118 (args)]
    MINUS           [reduce using rule 118 (args)]
    LEFT_PARENTHES  [reduce using rule 118 (args)]
    INTEGER         [reduce using rule 118 (args)]
    FLOAT           [reduce using rule 118 (args)]
    TUPLE           [reduce using rule 118 (args)]
    '|'             [reduce using rule 118 (args)]
    $default        reduce using rule 118 (args)

    expression         go to state 126
    number             go to state 70
    function_call      go to state 71
    args               go to state 218
    member_expression  go to state 72


state 154

  111 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . class_block

    NEWLINE  shift, and go to state 219

    class_block  go to state 220


state 155

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   57           | LEFT_PARENTHES expression . RIGHT_PARENTHES

    ADD              shift, and go to state 136
    MINUS            shift, and go to state 137
    MULTIPLY         shift, and go to state 138
    DIVIDE           shift, and go to state 139
    POWER            shift, and go to state 140
    MODULO           shift, and go to state 141
    RIGHT_PARENTHES  shift, and go to state 198


state 156

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN . function_call COLON block
  150              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . LIST COLON block
  152              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression COLON block
  153              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call COLON block
  154              | KEYWORD_FOR IDENTIFIER KEYWORD_IN . member_expression function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 4
    LIST        shift, and go to state 221

    function_call      go to state 222
    member_expression  go to state 223


state 157

  119 args: args . expression COMMA
  120     | args . expression
  151 for_statement: KEYWORD_FOR LEFT_PARENTHES args . RIGHT_PARENTHES KEYWORD_IN function_call COLON block

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_FALSE    shift, and go to state 59
    KEYWORD_TRUE     shift, and go to state 60
    KEYWORD_NONE     shift, and go to state 61
    MINUS            shift, and go to state 63
    LEFT_PARENTHES   shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 224
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    TUPLE            shift, and go to state 67
    '|'              shift, and go to state 68

    expression         go to state 197
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 158

  117 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 225


state 159

   93 try: KEYWORD_TRY COLON block .

    $default  reduce using rule 93 (try)


state 160

  116 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    IDENTIFIER      [reduce using rule 118 (args)]
    LIST            [reduce using rule 118 (args)]
    LITERALSTRING   [reduce using rule 118 (args)]
    KEYWORD_FALSE   [reduce using rule 118 (args)]
    KEYWORD_TRUE    [reduce using rule 118 (args)]
    KEYWORD_NONE    [reduce using rule 118 (args)]
    MINUS           [reduce using rule 118 (args)]
    LEFT_PARENTHES  [reduce using rule 118 (args)]
    INTEGER         [reduce using rule 118 (args)]
    FLOAT           [reduce using rule 118 (args)]
    TUPLE           [reduce using rule 118 (args)]
    '|'             [reduce using rule 118 (args)]
    $default        reduce using rule 118 (args)

    expression         go to state 126
    number             go to state 70
    function_call      go to state 71
    args               go to state 226
    member_expression  go to state 72


state 161

   36 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER
   37                | KEYWORD_FROM member_expression KEYWORD_IMPORT . '*'
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT . IDENTIFIER KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 227
    '*'         shift, and go to state 228


state 162

   82 global_nonlocal_targets: IDENTIFIER COMMA . global_nonlocal_targets

    IDENTIFIER  shift, and go to state 87

    global_nonlocal_targets  go to state 229


state 163

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  156 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 148
    KEYWORD_OR       shift, and go to state 149
    RIGHT_PARENTHES  shift, and go to state 230


state 164

  155 while_statement: KEYWORD_WHILE logical_expression COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 231


state 165

   76 assert_statement: KEYWORD_ASSERT logical_expression COMMA . LITERALSTRING

    LITERALSTRING  shift, and go to state 232


state 166

   71 del_statment: KEYWORD_DEL IDENTIFIER LIST .

    $default  reduce using rule 71 (del_statment)


state 167

  100 with_statment: KEYWORD_WITH with_stmt COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 233


state 168

  102 with_stmt: with_stmt COMMA . function_call KEYWORD_AS IDENTIFIER

    IDENTIFIER  shift, and go to state 76

    function_call  go to state 234


state 169

  101 with_stmt: function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 235


state 170

   83 match_statement: KEYWORD_MATCH IDENTIFIER COLON . match_block

    NEWLINE  shift, and go to state 236

    match_block  go to state 237


state 171

   94 except: KEYWORD_EXCEPT COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 238


state 172

   95 except: KEYWORD_EXCEPT member_expression . COLON block
   96       | KEYWORD_EXCEPT member_expression . KEYWORD_AS IDENTIFIER COLON block
  124 member_expression: member_expression . IDENTIFIER
  125                  | member_expression . function_call

    IDENTIFIER  shift, and go to state 107
    KEYWORD_AS  shift, and go to state 239
    COLON       shift, and go to state 240

    function_call  go to state 118


state 173

   97 finally: KEYWORD_FINALLY COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 241


state 174

   98 except_statements: except_statements except .

    $default  reduce using rule 98 (except_statements)


state 175

   90 try_statement: try except_statements finally .

    $default  reduce using rule 90 (try_statement)


state 176

   91 try_statement: try except_statements else_statement .
   92              | try except_statements else_statement . finally

    KEYWORD_FINALLY  shift, and go to state 103

    $default  reduce using rule 91 (try_statement)

    finally  go to state 242


state 177

   40 assignment: member_expression ASSIGN expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 40 (assignment)


state 178

   41 assignment: member_expression ASSIGNADD expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 41 (assignment)


state 179

   46 assignment: member_expression ASSIGNMINUS expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 46 (assignment)


state 180

   44 assignment: member_expression ASSIGNMULTIPLY expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 44 (assignment)


state 181

   42 assignment: member_expression ASSIGNDIVIDE expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 42 (assignment)


state 182

   45 assignment: member_expression ASSIGNMODULO expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 45 (assignment)


state 183

   47 assignment: member_expression ASSIGNFLOORDIVISION expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 47 (assignment)


state 184

   43 assignment: member_expression ASSIGNEXPONINTIATION expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 43 (assignment)


state 185

   48 assignment: member_expression ASSIGNRIGHTSHIFT expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 48 (assignment)


state 186

   49 assignment: member_expression ASSIGNLEFTSHIFT expression .
   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 49 (assignment)


state 187

  146 else_statement: KEYWORD_ELSE COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 243


state 188

   57 expression: LEFT_PARENTHES . expression RIGHT_PARENTHES
  148 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES . logical_expression RIGHT_PARENTHES COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    KEYWORD_NOT     shift, and go to state 62
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression          go to state 132
    number              go to state 70
    function_call       go to state 71
    member_expression   go to state 72
    logical_expression  go to state 244


state 189

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  147 elif_statement: KEYWORD_ELSE_IF logical_expression . COLON block

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149
    COLON        shift, and go to state 245


state 190

  139 elif_else: elif_stmts else_statement .

    $default  reduce using rule 139 (elif_else)


state 191

  143 elif_stmts: elif_stmts elif_statement .

    $default  reduce using rule 143 (elif_stmts)


state 192

  114 function_call: IDENTIFIER LEFT_PARENTHES LITERALSTRING RIGHT_PARENTHES .

    $default  reduce using rule 114 (function_call)


state 193

  121 args: expression COMMA .

    $default  reduce using rule 121 (args)


state 194

  113 function_call: IDENTIFIER LEFT_PARENTHES number RIGHT_PARENTHES .

    $default  reduce using rule 113 (function_call)


state 195

  115 function_call: IDENTIFIER LEFT_PARENTHES function_call RIGHT_PARENTHES .

    $default  reduce using rule 115 (function_call)


state 196

  112 function_call: IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES .

    $default  reduce using rule 112 (function_call)


state 197

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  119 args: args expression . COMMA
  120     | args expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141
    COMMA     shift, and go to state 246

    MINUS     [reduce using rule 120 (args)]
    $default  reduce using rule 120 (args)


state 198

   57 expression: LEFT_PARENTHES expression RIGHT_PARENTHES .

    $default  reduce using rule 57 (expression)


state 199

  145 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 247


state 200

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  133 logical_expression: expression KEYWORD_IS expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 133 (logical_expression)


state 201

   50 expression: expression . ADD expression
   50           | expression ADD expression .
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 50 (expression)]
    MINUS     [reduce using rule 50 (expression)]
    MULTIPLY  [reduce using rule 50 (expression)]
    DIVIDE    [reduce using rule 50 (expression)]
    POWER     [reduce using rule 50 (expression)]
    MODULO    [reduce using rule 50 (expression)]
    $default  reduce using rule 50 (expression)


state 202

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   51           | expression MINUS expression .
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 51 (expression)]
    MINUS     [reduce using rule 51 (expression)]
    MULTIPLY  [reduce using rule 51 (expression)]
    DIVIDE    [reduce using rule 51 (expression)]
    POWER     [reduce using rule 51 (expression)]
    MODULO    [reduce using rule 51 (expression)]
    $default  reduce using rule 51 (expression)


state 203

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   52           | expression MULTIPLY expression .
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 52 (expression)]
    MINUS     [reduce using rule 52 (expression)]
    MULTIPLY  [reduce using rule 52 (expression)]
    DIVIDE    [reduce using rule 52 (expression)]
    POWER     [reduce using rule 52 (expression)]
    MODULO    [reduce using rule 52 (expression)]
    $default  reduce using rule 52 (expression)


state 204

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   53           | expression DIVIDE expression .
   54           | expression . POWER expression
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 53 (expression)]
    MINUS     [reduce using rule 53 (expression)]
    MULTIPLY  [reduce using rule 53 (expression)]
    DIVIDE    [reduce using rule 53 (expression)]
    POWER     [reduce using rule 53 (expression)]
    MODULO    [reduce using rule 53 (expression)]
    $default  reduce using rule 53 (expression)


state 205

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   54           | expression POWER expression .
   55           | expression . MODULO expression

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 54 (expression)]
    MINUS     [reduce using rule 54 (expression)]
    MULTIPLY  [reduce using rule 54 (expression)]
    DIVIDE    [reduce using rule 54 (expression)]
    POWER     [reduce using rule 54 (expression)]
    MODULO    [reduce using rule 54 (expression)]
    $default  reduce using rule 54 (expression)


state 206

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   55           | expression MODULO expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    ADD       [reduce using rule 55 (expression)]
    MINUS     [reduce using rule 55 (expression)]
    MULTIPLY  [reduce using rule 55 (expression)]
    DIVIDE    [reduce using rule 55 (expression)]
    POWER     [reduce using rule 55 (expression)]
    MODULO    [reduce using rule 55 (expression)]
    $default  reduce using rule 55 (expression)


state 207

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  131 logical_expression: expression EQUAL expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 131 (logical_expression)


state 208

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  132 logical_expression: expression NOTEQUAL expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 132 (logical_expression)


state 209

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  128 logical_expression: expression GREATERTHAN expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 128 (logical_expression)


state 210

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  127 logical_expression: expression GREATEROREQUAL expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 127 (logical_expression)


state 211

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  130 logical_expression: expression LESSTHAN expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 130 (logical_expression)


state 212

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
  129 logical_expression: expression LESSOREQUAL expression .

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 129 (logical_expression)


state 213

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  134                   | logical_expression KEYWORD_AND logical_expression .
  135                   | logical_expression . KEYWORD_OR logical_expression

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149

    KEYWORD_AND  [reduce using rule 134 (logical_expression)]
    KEYWORD_OR   [reduce using rule 134 (logical_expression)]
    $default     reduce using rule 134 (logical_expression)


state 214

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  135                   | logical_expression KEYWORD_OR logical_expression .

    KEYWORD_AND  shift, and go to state 148
    KEYWORD_OR   shift, and go to state 149

    KEYWORD_AND  [reduce using rule 135 (logical_expression)]
    KEYWORD_OR   [reduce using rule 135 (logical_expression)]
    $default     reduce using rule 135 (logical_expression)


state 215

  144 if_statement: KEYWORD_IF logical_expression COLON block .

    $default  reduce using rule 144 (if_statement)


state 216

   38 import_statment: KEYWORD_IMPORT member_expression KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 38 (import_statment)


state 217

   78 raise_statement: KEYWORD_RAISE function_call KEYWORD_FROM IDENTIFIER .

    $default  reduce using rule 78 (raise_statement)


state 218

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON class_block
  119 args: args . expression COMMA
  120     | args . expression

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_FALSE    shift, and go to state 59
    KEYWORD_TRUE     shift, and go to state 60
    KEYWORD_NONE     shift, and go to state 61
    MINUS            shift, and go to state 63
    LEFT_PARENTHES   shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 248
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    TUPLE            shift, and go to state 67
    '|'              shift, and go to state 68

    expression         go to state 197
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 219

  106 class_block: NEWLINE . INDENT class_body DEDENT

    INDENT  shift, and go to state 249


state 220

  111 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON class_block .

    $default  reduce using rule 111 (class_without_inheritance)


state 221

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST . COLON block

    COLON  shift, and go to state 250


state 222

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 251


state 223

  124 member_expression: member_expression . IDENTIFIER
  125                  | member_expression . function_call
  152 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . COLON block
  153              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call COLON block
  154              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression . function_call '.' IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 107
    COLON       shift, and go to state 252

    function_call  go to state 253


state 224

  151 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES . KEYWORD_IN function_call COLON block

    KEYWORD_IN  shift, and go to state 254


state 225

  117 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    NEWLINE           shift, and go to state 26
    KEYWORD_MATCH     shift, and go to state 27

    statements                 go to state 255
    statement                  go to state 29
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 226

  116 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
  119 args: args . expression COMMA
  120     | args . expression

    IDENTIFIER       shift, and go to state 4
    LIST             shift, and go to state 57
    LITERALSTRING    shift, and go to state 58
    KEYWORD_FALSE    shift, and go to state 59
    KEYWORD_TRUE     shift, and go to state 60
    KEYWORD_NONE     shift, and go to state 61
    MINUS            shift, and go to state 63
    LEFT_PARENTHES   shift, and go to state 79
    RIGHT_PARENTHES  shift, and go to state 256
    INTEGER          shift, and go to state 65
    FLOAT            shift, and go to state 66
    TUPLE            shift, and go to state 67
    '|'              shift, and go to state 68

    expression         go to state 197
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 227

   36 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER .
   39                | KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 257

    $default  reduce using rule 36 (import_statment)


state 228

   37 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT '*' .

    $default  reduce using rule 37 (import_statment)


state 229

   82 global_nonlocal_targets: IDENTIFIER COMMA global_nonlocal_targets .

    $default  reduce using rule 82 (global_nonlocal_targets)


state 230

  156 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 258


state 231

  155 while_statement: KEYWORD_WHILE logical_expression COLON block .

    $default  reduce using rule 155 (while_statement)


state 232

   76 assert_statement: KEYWORD_ASSERT logical_expression COMMA LITERALSTRING .

    $default  reduce using rule 76 (assert_statement)


state 233

  100 with_statment: KEYWORD_WITH with_stmt COLON block .

    $default  reduce using rule 100 (with_statment)


state 234

  102 with_stmt: with_stmt COMMA function_call . KEYWORD_AS IDENTIFIER

    KEYWORD_AS  shift, and go to state 259


state 235

  101 with_stmt: function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 101 (with_stmt)


state 236

   84 match_block: NEWLINE . INDENT cases DEDENT

    INDENT  shift, and go to state 260


state 237

   83 match_statement: KEYWORD_MATCH IDENTIFIER COLON match_block .

    $default  reduce using rule 83 (match_statement)


state 238

   94 except: KEYWORD_EXCEPT COLON block .

    $default  reduce using rule 94 (except)


state 239

   96 except: KEYWORD_EXCEPT member_expression KEYWORD_AS . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 261


state 240

   95 except: KEYWORD_EXCEPT member_expression COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 262


state 241

   97 finally: KEYWORD_FINALLY COLON block .

    $default  reduce using rule 97 (finally)


state 242

   92 try_statement: try except_statements else_statement finally .

    $default  reduce using rule 92 (try_statement)


state 243

  146 else_statement: KEYWORD_ELSE COLON block .

    $default  reduce using rule 146 (else_statement)


state 244

  134 logical_expression: logical_expression . KEYWORD_AND logical_expression
  135                   | logical_expression . KEYWORD_OR logical_expression
  148 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression . RIGHT_PARENTHES COLON block

    KEYWORD_AND      shift, and go to state 148
    KEYWORD_OR       shift, and go to state 149
    RIGHT_PARENTHES  shift, and go to state 263


state 245

  147 elif_statement: KEYWORD_ELSE_IF logical_expression COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 264


state 246

  119 args: args expression COMMA .

    $default  reduce using rule 119 (args)


state 247

  145 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 265


state 248

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON class_block

    COLON  shift, and go to state 266


state 249

  106 class_block: NEWLINE INDENT . class_body DEDENT

    $default  reduce using rule 107 (class_body)

    class_body  go to state 267


state 250

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 268


state 251

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 269


state 252

  152 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 270


state 253

  125 member_expression: member_expression function_call .
  153 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . COLON block
  154              | KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call . '.' IDENTIFIER COLON block

    COLON  shift, and go to state 271
    '.'    shift, and go to state 272

    COLON     [reduce using rule 125 (member_expression)]
    $default  reduce using rule 125 (member_expression)


state 254

  151 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN . function_call COLON block

    IDENTIFIER  shift, and go to state 76

    function_call  go to state 273


state 255

    4 statements: statements . statement
    6           | statements . NEWLINE
  117 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 4
    KEYWORD_IF        shift, and go to state 5
    KEYWORD_IMPORT    shift, and go to state 6
    KEYWORD_PASS      shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_RAISE     shift, and go to state 9
    KEYWORD_CLASS     shift, and go to state 10
    KEYWORD_RETURN    shift, and go to state 11
    KEYWORD_CONTINUE  shift, and go to state 12
    KEYWORD_FOR       shift, and go to state 13
    KEYWORD_TRY       shift, and go to state 14
    KEYWORD_DEF       shift, and go to state 15
    KEYWORD_FROM      shift, and go to state 16
    KEYWORD_NONLOCAL  shift, and go to state 17
    KEYWORD_WHILE     shift, and go to state 18
    KEYWORD_ASSERT    shift, and go to state 19
    KEYWORD_DEL       shift, and go to state 20
    KEYWORD_GLOBAL    shift, and go to state 21
    KEYWORD_WITH      shift, and go to state 22
    KEYWORD_YIELD     shift, and go to state 23
    COMMENT           shift, and go to state 24
    MULTILINECOMMENT  shift, and go to state 25
    DEDENT            shift, and go to state 274
    NEWLINE           shift, and go to state 98
    KEYWORD_MATCH     shift, and go to state 27

    statement                  go to state 99
    simple_statement           go to state 30
    compound_statement         go to state 31
    import_statments           go to state 32
    import_statment            go to state 33
    assignment                 go to state 34
    del_statment               go to state 35
    return_statement           go to state 36
    yield_statement            go to state 37
    assert_statement           go to state 38
    raise_statement            go to state 39
    global_statement           go to state 40
    nonlocal_statement         go to state 41
    match_statement            go to state 42
    try_statement              go to state 43
    try                        go to state 44
    with_statment              go to state 45
    class                      go to state 46
    class_with_inheritance     go to state 47
    class_without_inheritance  go to state 48
    function_call              go to state 49
    function                   go to state 50
    member_expression          go to state 51
    conditional_statement      go to state 52
    if_statement               go to state 53
    for_statement              go to state 54
    while_statement            go to state 55


state 256

  116 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 275


state 257

   39 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 276


state 258

  156 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 277


state 259

  102 with_stmt: with_stmt COMMA function_call KEYWORD_AS . IDENTIFIER

    IDENTIFIER  shift, and go to state 278


state 260

   84 match_block: NEWLINE INDENT . cases DEDENT

    KEYWORD_CASE  shift, and go to state 279

    cases  go to state 280
    case   go to state 281


state 261

   96 except: KEYWORD_EXCEPT member_expression KEYWORD_AS IDENTIFIER . COLON block

    COLON  shift, and go to state 282


state 262

   95 except: KEYWORD_EXCEPT member_expression COLON block .

    $default  reduce using rule 95 (except)


state 263

  148 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 283


state 264

  147 elif_statement: KEYWORD_ELSE_IF logical_expression COLON block .

    $default  reduce using rule 147 (elif_statement)


state 265

  145 if_statement: KEYWORD_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 145 (if_statement)


state 266

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . class_block

    NEWLINE  shift, and go to state 219

    class_block  go to state 284


state 267

  106 class_block: NEWLINE INDENT class_body . DEDENT
  108 class_body: class_body . assignment
  109           | class_body . function
  110           | class_body . NEWLINE

    IDENTIFIER   shift, and go to state 74
    KEYWORD_DEF  shift, and go to state 15
    DEDENT       shift, and go to state 285
    NEWLINE      shift, and go to state 286

    assignment         go to state 287
    function           go to state 288
    member_expression  go to state 51


state 268

  150 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN LIST COLON block .

    $default  reduce using rule 150 (for_statement)


state 269

  149 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN function_call COLON block .

    $default  reduce using rule 149 (for_statement)


state 270

  152 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression COLON block .

    $default  reduce using rule 152 (for_statement)


state 271

  153 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 289


state 272

  154 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' . IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 290


state 273

  151 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call . COLON block

    COLON  shift, and go to state 291


state 274

  117 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 117 (block)


state 275

  116 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 292


state 276

   39 import_statment: KEYWORD_FROM member_expression KEYWORD_IMPORT IDENTIFIER KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 39 (import_statment)


state 277

  156 while_statement: KEYWORD_WHILE LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 156 (while_statement)


state 278

  102 with_stmt: with_stmt COMMA function_call KEYWORD_AS IDENTIFIER .

    $default  reduce using rule 102 (with_stmt)


state 279

   87 case: KEYWORD_CASE . expression COLON block

    IDENTIFIER      shift, and go to state 4
    LIST            shift, and go to state 57
    LITERALSTRING   shift, and go to state 58
    KEYWORD_FALSE   shift, and go to state 59
    KEYWORD_TRUE    shift, and go to state 60
    KEYWORD_NONE    shift, and go to state 61
    MINUS           shift, and go to state 63
    LEFT_PARENTHES  shift, and go to state 79
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    TUPLE           shift, and go to state 67
    '|'             shift, and go to state 68

    expression         go to state 293
    number             go to state 70
    function_call      go to state 71
    member_expression  go to state 72


state 280

   84 match_block: NEWLINE INDENT cases . DEDENT
   85 cases: cases . case

    DEDENT        shift, and go to state 294
    KEYWORD_CASE  shift, and go to state 279

    case  go to state 295


state 281

   86 cases: case .

    $default  reduce using rule 86 (cases)


state 282

   96 except: KEYWORD_EXCEPT member_expression KEYWORD_AS IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 296


state 283

  148 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 297


state 284

  105 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON class_block .

    $default  reduce using rule 105 (class_with_inheritance)


state 285

  106 class_block: NEWLINE INDENT class_body DEDENT .

    $default  reduce using rule 106 (class_block)


state 286

  110 class_body: class_body NEWLINE .

    $default  reduce using rule 110 (class_body)


state 287

  108 class_body: class_body assignment .

    $default  reduce using rule 108 (class_body)


state 288

  109 class_body: class_body function .

    $default  reduce using rule 109 (class_body)


state 289

  153 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call COLON block .

    $default  reduce using rule 153 (for_statement)


state 290

  154 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER . COLON block

    COLON  shift, and go to state 298


state 291

  151 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 299


state 292

  116 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 116 (function)


state 293

   50 expression: expression . ADD expression
   51           | expression . MINUS expression
   52           | expression . MULTIPLY expression
   53           | expression . DIVIDE expression
   54           | expression . POWER expression
   55           | expression . MODULO expression
   87 case: KEYWORD_CASE expression . COLON block

    ADD       shift, and go to state 136
    MINUS     shift, and go to state 137
    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    POWER     shift, and go to state 140
    MODULO    shift, and go to state 141
    COLON     shift, and go to state 300


state 294

   84 match_block: NEWLINE INDENT cases DEDENT .

    $default  reduce using rule 84 (match_block)


state 295

   85 cases: cases case .

    $default  reduce using rule 85 (cases)


state 296

   96 except: KEYWORD_EXCEPT member_expression KEYWORD_AS IDENTIFIER COLON block .

    $default  reduce using rule 96 (except)


state 297

  148 elif_statement: KEYWORD_ELSE_IF LEFT_PARENTHES logical_expression RIGHT_PARENTHES COLON block .

    $default  reduce using rule 148 (elif_statement)


state 298

  154 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 301


state 299

  151 for_statement: KEYWORD_FOR LEFT_PARENTHES args RIGHT_PARENTHES KEYWORD_IN function_call COLON block .

    $default  reduce using rule 151 (for_statement)


state 300

   87 case: KEYWORD_CASE expression COLON . block

    NEWLINE  shift, and go to state 158

    block  go to state 302


state 301

  154 for_statement: KEYWORD_FOR IDENTIFIER KEYWORD_IN member_expression function_call '.' IDENTIFIER COLON block .

    $default  reduce using rule 154 (for_statement)


state 302

   87 case: KEYWORD_CASE expression COLON block .

    $default  reduce using rule 87 (case)
