Terminals unused in grammar

   WHITESPACE
   LETTER
   ALPHANUM
   LIST
   LITERALSTRING
   LITERALCHAR
   KEYWORD_FALSE
   KEYWORD_TRUE
   KEYWORD_AWAIT
   KEYWORD_ELSE
   KEYWORD_ELSE_IF
   KEYWORD_IMPORT
   KEYWORD_NONE
   KEYWORD_EXCEPT
   KEYWORD_IN
   KEYWORD_RAISE
   KEYWORD_FINALLY
   KEYWORD_IS
   KEYWORD_AND
   KEYWORD_FOR
   KEYWORD_LAMBDA
   KEYWORD_TRY
   KEYWORD_AS
   KEYWORD_FROM
   KEYWORD_NONLOCAL
   KEYWORD_WHILE
   KEYWORD_ASSERT
   KEYWORD_DEL
   KEYWORD_GLOBAL
   KEYWORD_NOT
   KEYWORD_WITH
   KEYWORD_ASYNC
   KEYWORD_OR
   KEYWORD_YIELD
   OPERATORS
   COMMENT
   POWER
   MODULO
   ASSIGNADD
   ASSIGNMINUS
   ASSIGNMULTIPLY
   ASSIGNDIVIDE
   ASSIGNMODULO
   ASSIGNFLOORDIVISION
   ASSIGNEXPONINTIATION
   ASSIGNBITWISEAND
   ASSIGNBITWISEOR
   ASSIGNBITWISEXOR
   ASSIGNRIGHTSHIFT
   ASSIGNLEFTSHIFT
   EQUAL
   NOT
   NOTEQUAL
   GREATERTHAN
   GREATEROREQUAL
   LESSTHAN
   LESSOREQUAL
   LEFT_BRACES
   RIGHT_BRACES
   LEFT_BRACKETS
   RIGHT_BRACKETS
   SEMICOLON
   INCREMENT
   DECREMENT
   '+'
   '*'
   '/'


State 27 conflicts: 1 shift/reduce
State 30 conflicts: 1 reduce/reduce
State 32 conflicts: 10 reduce/reduce
State 35 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 48 conflicts: 4 shift/reduce
State 49 conflicts: 4 shift/reduce
State 61 conflicts: 4 shift/reduce
State 62 conflicts: 4 shift/reduce
State 63 conflicts: 4 shift/reduce
State 64 conflicts: 4 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | NEWLINE
    3     | statements prog

    4 statements: statements statement
    5           | statement
    6           | statements NEWLINE

    7 statement: compound_statement
    8          | simple_statement

    9 simple_statement: assignment
   10                 | return_statement
   11                 | KEYWORD_CONTINUE
   12                 | KEYWORD_PASS
   13                 | KEYWORD_BREAK

   14 compound_statement: function
   15                   | if_statement
   16                   | class

   17 assignment: member_expression ASSIGN expression

   18 expression: expression ADD expression
   19           | expression MINUS expression
   20           | expression MULTIPLY expression
   21           | expression DIVIDE expression
   22           | '|' expression
   23           | '(' expression ')'
   24           | '-' expression
   25           | INTEGER
   26           | FLOAT

   27 number: INTEGER
   28       | FLOAT

   29 return_statement: KEYWORD_RETURN number
   30                 | KEYWORD_RETURN member_expression

   31 if_statement: KEYWORD_IF

   32 class: class_with_inheritance
   33      | class_without_inheritance

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

   35 class_block: /* empty */
   36            | class_block assignment
   37            | class_block function
   38            | class_block NEWLINE

   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

   40 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

   41 block: NEWLINE INDENT statements DEDENT

   42 args: /* empty */
   43     | args IDENTIFIER COMMA
   44     | args IDENTIFIER
   45     | IDENTIFIER COMMA
   46     | IDENTIFIER

   47 member_expression: IDENTIFIER
   48                  | member_expression IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23
')' (41) 23
'*' (42)
'+' (43)
'-' (45) 24
'.' (46)
'/' (47)
'|' (124) 22
error (256)
WHITESPACE (258)
LETTER (259)
ALPHANUM (260)
IDENTIFIER (261) 34 39 40 43 44 45 46 47 48
LIST (262)
LITERALSTRING (263)
LITERALCHAR (264)
KEYWORD_FALSE (265)
KEYWORD_TRUE (266)
KEYWORD_AWAIT (267)
KEYWORD_IF (268) 31
KEYWORD_ELSE (269)
KEYWORD_ELSE_IF (270)
KEYWORD_IMPORT (271)
KEYWORD_PASS (272) 12
KEYWORD_NONE (273)
KEYWORD_BREAK (274) 13
KEYWORD_EXCEPT (275)
KEYWORD_IN (276)
KEYWORD_RAISE (277)
KEYWORD_CLASS (278) 34 39
KEYWORD_FINALLY (279)
KEYWORD_IS (280)
KEYWORD_RETURN (281) 29 30
KEYWORD_AND (282)
KEYWORD_CONTINUE (283) 11
KEYWORD_FOR (284)
KEYWORD_LAMBDA (285)
KEYWORD_TRY (286)
KEYWORD_AS (287)
KEYWORD_DEF (288) 40
KEYWORD_FROM (289)
KEYWORD_NONLOCAL (290)
KEYWORD_WHILE (291)
KEYWORD_ASSERT (292)
KEYWORD_DEL (293)
KEYWORD_GLOBAL (294)
KEYWORD_NOT (295)
KEYWORD_WITH (296)
KEYWORD_ASYNC (297)
KEYWORD_OR (298)
KEYWORD_YIELD (299)
OPERATORS (300)
COMMENT (301)
ADD (302) 18
MINUS (303) 19
MULTIPLY (304) 20
DIVIDE (305) 21
POWER (306)
MODULO (307)
ASSIGN (308) 17
ASSIGNADD (309)
ASSIGNMINUS (310)
ASSIGNMULTIPLY (311)
ASSIGNDIVIDE (312)
ASSIGNMODULO (313)
ASSIGNFLOORDIVISION (314)
ASSIGNEXPONINTIATION (315)
ASSIGNBITWISEAND (316)
ASSIGNBITWISEOR (317)
ASSIGNBITWISEXOR (318)
ASSIGNRIGHTSHIFT (319)
ASSIGNLEFTSHIFT (320)
EQUAL (321)
NOT (322)
NOTEQUAL (323)
GREATERTHAN (324)
GREATEROREQUAL (325)
LESSTHAN (326)
LESSOREQUAL (327)
LEFT_PARENTHES (328) 34 40
RIGHT_PARENTHES (329) 34 40
LEFT_BRACES (330)
RIGHT_BRACES (331)
LEFT_BRACKETS (332)
RIGHT_BRACKETS (333)
COLON (334) 34 39 40
COMMA (335) 43 45
SEMICOLON (336)
INCREMENT (337)
DECREMENT (338)
INTEGER (339) 25 27
FLOAT (340) 26 28
DEDENT (341) 34 39 41
INDENT (342) 34 39 41
NEWLINE (343) 2 6 34 38 39 41
UMINUS (344)


Nonterminals, with rules where they appear

$accept (98)
    on left: 0
prog (99)
    on left: 1 2 3, on right: 0 3
statements (100)
    on left: 4 5 6, on right: 3 4 6 41
statement (101)
    on left: 7 8, on right: 4 5
simple_statement (102)
    on left: 9 10 11 12 13, on right: 8
compound_statement (103)
    on left: 14 15 16, on right: 7
assignment (104)
    on left: 17, on right: 9 36
expression (105)
    on left: 18 19 20 21 22 23 24 25 26, on right: 17 18 19 20 21 22
    23 24
number (106)
    on left: 27 28, on right: 29
return_statement (107)
    on left: 29 30, on right: 10
if_statement (108)
    on left: 31, on right: 15
class (109)
    on left: 32 33, on right: 16
class_with_inheritance (110)
    on left: 34, on right: 32
class_block (111)
    on left: 35 36 37 38, on right: 34 36 37 38 39
class_without_inheritance (112)
    on left: 39, on right: 33
function (113)
    on left: 40, on right: 14 37
block (114)
    on left: 41, on right: 40
args (115)
    on left: 42 43 44 45 46, on right: 34 40 43 44
member_expression (116)
    on left: 47 48, on right: 17 30 48


state 0

    0 $accept: . prog $end

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_DEF       shift, and go to state 8
    NEWLINE           shift, and go to state 9

    $default  reduce using rule 1 (prog)

    prog                       go to state 10
    statements                 go to state 11
    statement                  go to state 12
    simple_statement           go to state 13
    compound_statement         go to state 14
    assignment                 go to state 15
    return_statement           go to state 16
    if_statement               go to state 17
    class                      go to state 18
    class_with_inheritance     go to state 19
    class_without_inheritance  go to state 20
    function                   go to state 21
    member_expression          go to state 22


state 1

   47 member_expression: IDENTIFIER .

    $default  reduce using rule 47 (member_expression)


state 2

   31 if_statement: KEYWORD_IF .

    $default  reduce using rule 31 (if_statement)


state 3

   12 simple_statement: KEYWORD_PASS .

    $default  reduce using rule 12 (simple_statement)


state 4

   13 simple_statement: KEYWORD_BREAK .

    $default  reduce using rule 13 (simple_statement)


state 5

   34 class_with_inheritance: KEYWORD_CLASS . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   39 class_without_inheritance: KEYWORD_CLASS . IDENTIFIER COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 23


state 6

   29 return_statement: KEYWORD_RETURN . number
   30                 | KEYWORD_RETURN . member_expression

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 24
    FLOAT       shift, and go to state 25

    number             go to state 26
    member_expression  go to state 27


state 7

   11 simple_statement: KEYWORD_CONTINUE .

    $default  reduce using rule 11 (simple_statement)


state 8

   40 function: KEYWORD_DEF . IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 28


state 9

    2 prog: NEWLINE .

    $default  reduce using rule 2 (prog)


state 10

    0 $accept: prog . $end

    $end  shift, and go to state 29


state 11

    3 prog: statements . prog
    4 statements: statements . statement
    6           | statements . NEWLINE

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_DEF       shift, and go to state 8
    NEWLINE           shift, and go to state 30

    $default  reduce using rule 1 (prog)

    prog                       go to state 31
    statements                 go to state 11
    statement                  go to state 32
    simple_statement           go to state 13
    compound_statement         go to state 14
    assignment                 go to state 15
    return_statement           go to state 16
    if_statement               go to state 17
    class                      go to state 18
    class_with_inheritance     go to state 19
    class_without_inheritance  go to state 20
    function                   go to state 21
    member_expression          go to state 22


state 12

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 13

    8 statement: simple_statement .

    $default  reduce using rule 8 (statement)


state 14

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


state 15

    9 simple_statement: assignment .

    $default  reduce using rule 9 (simple_statement)


state 16

   10 simple_statement: return_statement .

    $default  reduce using rule 10 (simple_statement)


state 17

   15 compound_statement: if_statement .

    $default  reduce using rule 15 (compound_statement)


state 18

   16 compound_statement: class .

    $default  reduce using rule 16 (compound_statement)


state 19

   32 class: class_with_inheritance .

    $default  reduce using rule 32 (class)


state 20

   33 class: class_without_inheritance .

    $default  reduce using rule 33 (class)


state 21

   14 compound_statement: function .

    $default  reduce using rule 14 (compound_statement)


state 22

   17 assignment: member_expression . ASSIGN expression
   48 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 33
    ASSIGN      shift, and go to state 34


state 23

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER . COLON NEWLINE INDENT class_block DEDENT

    LEFT_PARENTHES  shift, and go to state 35
    COLON           shift, and go to state 36


state 24

   27 number: INTEGER .

    $default  reduce using rule 27 (number)


state 25

   28 number: FLOAT .

    $default  reduce using rule 28 (number)


state 26

   29 return_statement: KEYWORD_RETURN number .

    $default  reduce using rule 29 (return_statement)


state 27

   30 return_statement: KEYWORD_RETURN member_expression .
   48 member_expression: member_expression . IDENTIFIER

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 30 (return_statement)]
    $default    reduce using rule 30 (return_statement)


state 28

   40 function: KEYWORD_DEF IDENTIFIER . LEFT_PARENTHES args RIGHT_PARENTHES COLON block

    LEFT_PARENTHES  shift, and go to state 37


state 29

    0 $accept: prog $end .

    $default  accept


state 30

    2 prog: NEWLINE .
    6 statements: statements NEWLINE .

    $end      reduce using rule 2 (prog)
    $end      [reduce using rule 6 (statements)]
    $default  reduce using rule 6 (statements)


state 31

    3 prog: statements prog .

    $default  reduce using rule 3 (prog)


state 32

    4 statements: statements statement .
    5           | statement .

    $end              reduce using rule 4 (statements)
    $end              [reduce using rule 5 (statements)]
    IDENTIFIER        reduce using rule 4 (statements)
    IDENTIFIER        [reduce using rule 5 (statements)]
    KEYWORD_IF        reduce using rule 4 (statements)
    KEYWORD_IF        [reduce using rule 5 (statements)]
    KEYWORD_PASS      reduce using rule 4 (statements)
    KEYWORD_PASS      [reduce using rule 5 (statements)]
    KEYWORD_BREAK     reduce using rule 4 (statements)
    KEYWORD_BREAK     [reduce using rule 5 (statements)]
    KEYWORD_CLASS     reduce using rule 4 (statements)
    KEYWORD_CLASS     [reduce using rule 5 (statements)]
    KEYWORD_RETURN    reduce using rule 4 (statements)
    KEYWORD_RETURN    [reduce using rule 5 (statements)]
    KEYWORD_CONTINUE  reduce using rule 4 (statements)
    KEYWORD_CONTINUE  [reduce using rule 5 (statements)]
    KEYWORD_DEF       reduce using rule 4 (statements)
    KEYWORD_DEF       [reduce using rule 5 (statements)]
    NEWLINE           reduce using rule 4 (statements)
    NEWLINE           [reduce using rule 5 (statements)]
    $default          reduce using rule 4 (statements)


state 33

   48 member_expression: member_expression IDENTIFIER .

    $default  reduce using rule 48 (member_expression)


state 34

   17 assignment: member_expression ASSIGN . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 43


state 35

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT

    IDENTIFIER  shift, and go to state 44

    IDENTIFIER  [reduce using rule 42 (args)]
    $default    reduce using rule 42 (args)

    args  go to state 45


state 36

   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 46


state 37

   40 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES . args RIGHT_PARENTHES COLON block

    IDENTIFIER  shift, and go to state 44

    IDENTIFIER  [reduce using rule 42 (args)]
    $default    reduce using rule 42 (args)

    args  go to state 47


state 38

   25 expression: INTEGER .

    $default  reduce using rule 25 (expression)


state 39

   26 expression: FLOAT .

    $default  reduce using rule 26 (expression)


state 40

   24 expression: '-' . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 48


state 41

   22 expression: '|' . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 49


state 42

   23 expression: '(' . expression ')'

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 50


state 43

   17 assignment: member_expression ASSIGN expression .
   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    $default  reduce using rule 17 (assignment)


state 44

   45 args: IDENTIFIER . COMMA
   46     | IDENTIFIER .

    COMMA  shift, and go to state 55

    $default  reduce using rule 46 (args)


state 45

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT
   43 args: args . IDENTIFIER COMMA
   44     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 56
    RIGHT_PARENTHES  shift, and go to state 57


state 46

   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 58


state 47

   40 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args . RIGHT_PARENTHES COLON block
   43 args: args . IDENTIFIER COMMA
   44     | args . IDENTIFIER

    IDENTIFIER       shift, and go to state 56
    RIGHT_PARENTHES  shift, and go to state 59


state 48

   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression
   24           | '-' expression .

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    ADD       [reduce using rule 24 (expression)]
    MINUS     [reduce using rule 24 (expression)]
    MULTIPLY  [reduce using rule 24 (expression)]
    DIVIDE    [reduce using rule 24 (expression)]
    $default  reduce using rule 24 (expression)


state 49

   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression
   22           | '|' expression .

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    ADD       [reduce using rule 22 (expression)]
    MINUS     [reduce using rule 22 (expression)]
    MULTIPLY  [reduce using rule 22 (expression)]
    DIVIDE    [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)


state 50

   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression
   23           | '(' expression . ')'

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54
    ')'       shift, and go to state 60


state 51

   18 expression: expression ADD . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 61


state 52

   19 expression: expression MINUS . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 62


state 53

   20 expression: expression MULTIPLY . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 63


state 54

   21 expression: expression DIVIDE . expression

    INTEGER  shift, and go to state 38
    FLOAT    shift, and go to state 39
    '-'      shift, and go to state 40
    '|'      shift, and go to state 41
    '('      shift, and go to state 42

    expression  go to state 64


state 55

   45 args: IDENTIFIER COMMA .

    $default  reduce using rule 45 (args)


state 56

   43 args: args IDENTIFIER . COMMA
   44     | args IDENTIFIER .

    COMMA  shift, and go to state 65

    $default  reduce using rule 44 (args)


state 57

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON NEWLINE INDENT class_block DEDENT

    COLON  shift, and go to state 66


state 58

   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 35 (class_block)

    class_block  go to state 67


state 59

   40 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES . COLON block

    COLON  shift, and go to state 68


state 60

   23 expression: '(' expression ')' .

    $default  reduce using rule 23 (expression)


state 61

   18 expression: expression . ADD expression
   18           | expression ADD expression .
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    ADD       [reduce using rule 18 (expression)]
    MINUS     [reduce using rule 18 (expression)]
    MULTIPLY  [reduce using rule 18 (expression)]
    DIVIDE    [reduce using rule 18 (expression)]
    $default  reduce using rule 18 (expression)


state 62

   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   19           | expression MINUS expression .
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    ADD       [reduce using rule 19 (expression)]
    MINUS     [reduce using rule 19 (expression)]
    MULTIPLY  [reduce using rule 19 (expression)]
    DIVIDE    [reduce using rule 19 (expression)]
    $default  reduce using rule 19 (expression)


state 63

   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   20           | expression MULTIPLY expression .
   21           | expression . DIVIDE expression

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    ADD       [reduce using rule 20 (expression)]
    MINUS     [reduce using rule 20 (expression)]
    MULTIPLY  [reduce using rule 20 (expression)]
    DIVIDE    [reduce using rule 20 (expression)]
    $default  reduce using rule 20 (expression)


state 64

   18 expression: expression . ADD expression
   19           | expression . MINUS expression
   20           | expression . MULTIPLY expression
   21           | expression . DIVIDE expression
   21           | expression DIVIDE expression .

    ADD       shift, and go to state 51
    MINUS     shift, and go to state 52
    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    ADD       [reduce using rule 21 (expression)]
    MINUS     [reduce using rule 21 (expression)]
    MULTIPLY  [reduce using rule 21 (expression)]
    DIVIDE    [reduce using rule 21 (expression)]
    $default  reduce using rule 21 (expression)


state 65

   43 args: args IDENTIFIER COMMA .

    $default  reduce using rule 43 (args)


state 66

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . NEWLINE INDENT class_block DEDENT

    NEWLINE  shift, and go to state 69


state 67

   36 class_block: class_block . assignment
   37            | class_block . function
   38            | class_block . NEWLINE
   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block . DEDENT

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 8
    DEDENT       shift, and go to state 70
    NEWLINE      shift, and go to state 71

    assignment         go to state 72
    function           go to state 73
    member_expression  go to state 22


state 68

   40 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON . block

    NEWLINE  shift, and go to state 74

    block  go to state 75


state 69

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE . INDENT class_block DEDENT

    INDENT  shift, and go to state 76


state 70

   39 class_without_inheritance: KEYWORD_CLASS IDENTIFIER COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 39 (class_without_inheritance)


state 71

   38 class_block: class_block NEWLINE .

    $default  reduce using rule 38 (class_block)


state 72

   36 class_block: class_block assignment .

    $default  reduce using rule 36 (class_block)


state 73

   37 class_block: class_block function .

    $default  reduce using rule 37 (class_block)


state 74

   41 block: NEWLINE . INDENT statements DEDENT

    INDENT  shift, and go to state 77


state 75

   40 function: KEYWORD_DEF IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON block .

    $default  reduce using rule 40 (function)


state 76

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT . class_block DEDENT

    $default  reduce using rule 35 (class_block)

    class_block  go to state 78


state 77

   41 block: NEWLINE INDENT . statements DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_DEF       shift, and go to state 8

    statements                 go to state 79
    statement                  go to state 12
    simple_statement           go to state 13
    compound_statement         go to state 14
    assignment                 go to state 15
    return_statement           go to state 16
    if_statement               go to state 17
    class                      go to state 18
    class_with_inheritance     go to state 19
    class_without_inheritance  go to state 20
    function                   go to state 21
    member_expression          go to state 22


state 78

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block . DEDENT
   36 class_block: class_block . assignment
   37            | class_block . function
   38            | class_block . NEWLINE

    IDENTIFIER   shift, and go to state 1
    KEYWORD_DEF  shift, and go to state 8
    DEDENT       shift, and go to state 80
    NEWLINE      shift, and go to state 71

    assignment         go to state 72
    function           go to state 73
    member_expression  go to state 22


state 79

    4 statements: statements . statement
    6           | statements . NEWLINE
   41 block: NEWLINE INDENT statements . DEDENT

    IDENTIFIER        shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_PASS      shift, and go to state 3
    KEYWORD_BREAK     shift, and go to state 4
    KEYWORD_CLASS     shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_CONTINUE  shift, and go to state 7
    KEYWORD_DEF       shift, and go to state 8
    DEDENT            shift, and go to state 81
    NEWLINE           shift, and go to state 82

    statement                  go to state 83
    simple_statement           go to state 13
    compound_statement         go to state 14
    assignment                 go to state 15
    return_statement           go to state 16
    if_statement               go to state 17
    class                      go to state 18
    class_with_inheritance     go to state 19
    class_without_inheritance  go to state 20
    function                   go to state 21
    member_expression          go to state 22


state 80

   34 class_with_inheritance: KEYWORD_CLASS IDENTIFIER LEFT_PARENTHES args RIGHT_PARENTHES COLON NEWLINE INDENT class_block DEDENT .

    $default  reduce using rule 34 (class_with_inheritance)


state 81

   41 block: NEWLINE INDENT statements DEDENT .

    $default  reduce using rule 41 (block)


state 82

    6 statements: statements NEWLINE .

    $default  reduce using rule 6 (statements)


state 83

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)
